

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Fri Feb 05 15:44:53 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F1705
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2
    28                           	psect	intentry,global,class=CODE,delta=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    33                           	psect	text20,local,class=CODE,merge=1,delta=2
    34                           	psect	text21,local,class=CODE,merge=1,delta=2
    35                           	psect	text22,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text23,local,class=CODE,merge=1,delta=2,group=2
    37                           	psect	text24,local,class=CODE,merge=1,delta=2
    38                           	psect	text25,local,class=CODE,merge=1,delta=2
    39                           	psect	text26,local,class=CODE,merge=1,delta=2
    40                           	psect	text27,local,class=CODE,merge=1,delta=2
    41                           	psect	text28,local,class=CODE,merge=1,delta=2
    42                           	psect	text29,local,class=CODE,merge=1,delta=2
    43                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    44                           	dabs	1,0x7E,2
    45  0000                     
    46                           ; Version 2.20
    47                           ; Generated 12/02/2020 GMT
    48                           ; 
    49                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    50                           ; All rights reserved.
    51                           ; 
    52                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    53                           ; 
    54                           ; Redistribution and use in source and binary forms, with or without modification, are
    55                           ; permitted provided that the following conditions are met:
    56                           ; 
    57                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    58                           ;        conditions and the following disclaimer.
    59                           ; 
    60                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    61                           ;        of conditions and the following disclaimer in the documentation and/or other
    62                           ;        materials provided with the distribution.
    63                           ; 
    64                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    65                           ;        software without specific prior written permission.
    66                           ; 
    67                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    68                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    69                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    70                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    71                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    72                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    73                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    74                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    75                           ; 
    76                           ; 
    77                           ; Code-generator required, PIC16F1705 Definitions
    78                           ; 
    79                           ; SFR Addresses
    80  0000                     	;# 
    81  0001                     	;# 
    82  0002                     	;# 
    83  0003                     	;# 
    84  0004                     	;# 
    85  0005                     	;# 
    86  0006                     	;# 
    87  0007                     	;# 
    88  0008                     	;# 
    89  0009                     	;# 
    90  000A                     	;# 
    91  000B                     	;# 
    92  000C                     	;# 
    93  000E                     	;# 
    94  0011                     	;# 
    95  0012                     	;# 
    96  0013                     	;# 
    97  0015                     	;# 
    98  0016                     	;# 
    99  0016                     	;# 
   100  0017                     	;# 
   101  0018                     	;# 
   102  0019                     	;# 
   103  001A                     	;# 
   104  001B                     	;# 
   105  001C                     	;# 
   106  008C                     	;# 
   107  008E                     	;# 
   108  0091                     	;# 
   109  0092                     	;# 
   110  0093                     	;# 
   111  0095                     	;# 
   112  0096                     	;# 
   113  0097                     	;# 
   114  0098                     	;# 
   115  0099                     	;# 
   116  009A                     	;# 
   117  009B                     	;# 
   118  009B                     	;# 
   119  009C                     	;# 
   120  009D                     	;# 
   121  009E                     	;# 
   122  009F                     	;# 
   123  010C                     	;# 
   124  010E                     	;# 
   125  0111                     	;# 
   126  0112                     	;# 
   127  0113                     	;# 
   128  0114                     	;# 
   129  0115                     	;# 
   130  0116                     	;# 
   131  0117                     	;# 
   132  0118                     	;# 
   133  0119                     	;# 
   134  011C                     	;# 
   135  018C                     	;# 
   136  018E                     	;# 
   137  0191                     	;# 
   138  0191                     	;# 
   139  0192                     	;# 
   140  0193                     	;# 
   141  0193                     	;# 
   142  0194                     	;# 
   143  0195                     	;# 
   144  0196                     	;# 
   145  0197                     	;# 
   146  0199                     	;# 
   147  0199                     	;# 
   148  0199                     	;# 
   149  019A                     	;# 
   150  019A                     	;# 
   151  019A                     	;# 
   152  019B                     	;# 
   153  019B                     	;# 
   154  019B                     	;# 
   155  019B                     	;# 
   156  019B                     	;# 
   157  019C                     	;# 
   158  019C                     	;# 
   159  019C                     	;# 
   160  019D                     	;# 
   161  019D                     	;# 
   162  019D                     	;# 
   163  019E                     	;# 
   164  019E                     	;# 
   165  019E                     	;# 
   166  019F                     	;# 
   167  019F                     	;# 
   168  019F                     	;# 
   169  019F                     	;# 
   170  019F                     	;# 
   171  020C                     	;# 
   172  020E                     	;# 
   173  0211                     	;# 
   174  0211                     	;# 
   175  0212                     	;# 
   176  0212                     	;# 
   177  0213                     	;# 
   178  0213                     	;# 
   179  0214                     	;# 
   180  0214                     	;# 
   181  0215                     	;# 
   182  0215                     	;# 
   183  0215                     	;# 
   184  0215                     	;# 
   185  0216                     	;# 
   186  0216                     	;# 
   187  0217                     	;# 
   188  0217                     	;# 
   189  028C                     	;# 
   190  028E                     	;# 
   191  0291                     	;# 
   192  0291                     	;# 
   193  0292                     	;# 
   194  0293                     	;# 
   195  0293                     	;# 
   196  0298                     	;# 
   197  0298                     	;# 
   198  0299                     	;# 
   199  029A                     	;# 
   200  029A                     	;# 
   201  029E                     	;# 
   202  030C                     	;# 
   203  030E                     	;# 
   204  038C                     	;# 
   205  038E                     	;# 
   206  0391                     	;# 
   207  0392                     	;# 
   208  0393                     	;# 
   209  0397                     	;# 
   210  0398                     	;# 
   211  0399                     	;# 
   212  0415                     	;# 
   213  0416                     	;# 
   214  0417                     	;# 
   215  041C                     	;# 
   216  041D                     	;# 
   217  041E                     	;# 
   218  0511                     	;# 
   219  0515                     	;# 
   220  0617                     	;# 
   221  0618                     	;# 
   222  0619                     	;# 
   223  0619                     	;# 
   224  061A                     	;# 
   225  061B                     	;# 
   226  061C                     	;# 
   227  061C                     	;# 
   228  0691                     	;# 
   229  0692                     	;# 
   230  0693                     	;# 
   231  0694                     	;# 
   232  0695                     	;# 
   233  0696                     	;# 
   234  0697                     	;# 
   235  0698                     	;# 
   236  0699                     	;# 
   237  069A                     	;# 
   238  069B                     	;# 
   239  069C                     	;# 
   240  069D                     	;# 
   241  069E                     	;# 
   242  069F                     	;# 
   243  0E0F                     	;# 
   244  0E10                     	;# 
   245  0E11                     	;# 
   246  0E12                     	;# 
   247  0E13                     	;# 
   248  0E14                     	;# 
   249  0E15                     	;# 
   250  0E17                     	;# 
   251  0E20                     	;# 
   252  0E21                     	;# 
   253  0E22                     	;# 
   254  0E24                     	;# 
   255  0E25                     	;# 
   256  0E28                     	;# 
   257  0E29                     	;# 
   258  0E2A                     	;# 
   259  0E2B                     	;# 
   260  0E90                     	;# 
   261  0E91                     	;# 
   262  0E92                     	;# 
   263  0E94                     	;# 
   264  0E95                     	;# 
   265  0EA0                     	;# 
   266  0EA1                     	;# 
   267  0EA2                     	;# 
   268  0EA3                     	;# 
   269  0EA4                     	;# 
   270  0EA5                     	;# 
   271  0F0F                     	;# 
   272  0F10                     	;# 
   273  0F11                     	;# 
   274  0F12                     	;# 
   275  0F13                     	;# 
   276  0F14                     	;# 
   277  0F15                     	;# 
   278  0F16                     	;# 
   279  0F17                     	;# 
   280  0F18                     	;# 
   281  0F19                     	;# 
   282  0F1A                     	;# 
   283  0F1B                     	;# 
   284  0F1C                     	;# 
   285  0F1D                     	;# 
   286  0F1E                     	;# 
   287  0F1F                     	;# 
   288  0F20                     	;# 
   289  0F21                     	;# 
   290  0F22                     	;# 
   291  0F23                     	;# 
   292  0F24                     	;# 
   293  0F25                     	;# 
   294  0F26                     	;# 
   295  0F27                     	;# 
   296  0F28                     	;# 
   297  0F29                     	;# 
   298  0F2A                     	;# 
   299  0F2B                     	;# 
   300  0F2C                     	;# 
   301  0F2D                     	;# 
   302  0F9E                     	;# 
   303  0FE4                     	;# 
   304  0FE5                     	;# 
   305  0FE6                     	;# 
   306  0FE7                     	;# 
   307  0FE8                     	;# 
   308  0FE9                     	;# 
   309  0FEA                     	;# 
   310  0FEB                     	;# 
   311  0FED                     	;# 
   312  0FEE                     	;# 
   313  0FEF                     	;# 
   314  0000                     	;# 
   315  0001                     	;# 
   316  0002                     	;# 
   317  0003                     	;# 
   318  0004                     	;# 
   319  0005                     	;# 
   320  0006                     	;# 
   321  0007                     	;# 
   322  0008                     	;# 
   323  0009                     	;# 
   324  000A                     	;# 
   325  000B                     	;# 
   326  000C                     	;# 
   327  000E                     	;# 
   328  0011                     	;# 
   329  0012                     	;# 
   330  0013                     	;# 
   331  0015                     	;# 
   332  0016                     	;# 
   333  0016                     	;# 
   334  0017                     	;# 
   335  0018                     	;# 
   336  0019                     	;# 
   337  001A                     	;# 
   338  001B                     	;# 
   339  001C                     	;# 
   340  008C                     	;# 
   341  008E                     	;# 
   342  0091                     	;# 
   343  0092                     	;# 
   344  0093                     	;# 
   345  0095                     	;# 
   346  0096                     	;# 
   347  0097                     	;# 
   348  0098                     	;# 
   349  0099                     	;# 
   350  009A                     	;# 
   351  009B                     	;# 
   352  009B                     	;# 
   353  009C                     	;# 
   354  009D                     	;# 
   355  009E                     	;# 
   356  009F                     	;# 
   357  010C                     	;# 
   358  010E                     	;# 
   359  0111                     	;# 
   360  0112                     	;# 
   361  0113                     	;# 
   362  0114                     	;# 
   363  0115                     	;# 
   364  0116                     	;# 
   365  0117                     	;# 
   366  0118                     	;# 
   367  0119                     	;# 
   368  011C                     	;# 
   369  018C                     	;# 
   370  018E                     	;# 
   371  0191                     	;# 
   372  0191                     	;# 
   373  0192                     	;# 
   374  0193                     	;# 
   375  0193                     	;# 
   376  0194                     	;# 
   377  0195                     	;# 
   378  0196                     	;# 
   379  0197                     	;# 
   380  0199                     	;# 
   381  0199                     	;# 
   382  0199                     	;# 
   383  019A                     	;# 
   384  019A                     	;# 
   385  019A                     	;# 
   386  019B                     	;# 
   387  019B                     	;# 
   388  019B                     	;# 
   389  019B                     	;# 
   390  019B                     	;# 
   391  019C                     	;# 
   392  019C                     	;# 
   393  019C                     	;# 
   394  019D                     	;# 
   395  019D                     	;# 
   396  019D                     	;# 
   397  019E                     	;# 
   398  019E                     	;# 
   399  019E                     	;# 
   400  019F                     	;# 
   401  019F                     	;# 
   402  019F                     	;# 
   403  019F                     	;# 
   404  019F                     	;# 
   405  020C                     	;# 
   406  020E                     	;# 
   407  0211                     	;# 
   408  0211                     	;# 
   409  0212                     	;# 
   410  0212                     	;# 
   411  0213                     	;# 
   412  0213                     	;# 
   413  0214                     	;# 
   414  0214                     	;# 
   415  0215                     	;# 
   416  0215                     	;# 
   417  0215                     	;# 
   418  0215                     	;# 
   419  0216                     	;# 
   420  0216                     	;# 
   421  0217                     	;# 
   422  0217                     	;# 
   423  028C                     	;# 
   424  028E                     	;# 
   425  0291                     	;# 
   426  0291                     	;# 
   427  0292                     	;# 
   428  0293                     	;# 
   429  0293                     	;# 
   430  0298                     	;# 
   431  0298                     	;# 
   432  0299                     	;# 
   433  029A                     	;# 
   434  029A                     	;# 
   435  029E                     	;# 
   436  030C                     	;# 
   437  030E                     	;# 
   438  038C                     	;# 
   439  038E                     	;# 
   440  0391                     	;# 
   441  0392                     	;# 
   442  0393                     	;# 
   443  0397                     	;# 
   444  0398                     	;# 
   445  0399                     	;# 
   446  0415                     	;# 
   447  0416                     	;# 
   448  0417                     	;# 
   449  041C                     	;# 
   450  041D                     	;# 
   451  041E                     	;# 
   452  0511                     	;# 
   453  0515                     	;# 
   454  0617                     	;# 
   455  0618                     	;# 
   456  0619                     	;# 
   457  0619                     	;# 
   458  061A                     	;# 
   459  061B                     	;# 
   460  061C                     	;# 
   461  061C                     	;# 
   462  0691                     	;# 
   463  0692                     	;# 
   464  0693                     	;# 
   465  0694                     	;# 
   466  0695                     	;# 
   467  0696                     	;# 
   468  0697                     	;# 
   469  0698                     	;# 
   470  0699                     	;# 
   471  069A                     	;# 
   472  069B                     	;# 
   473  069C                     	;# 
   474  069D                     	;# 
   475  069E                     	;# 
   476  069F                     	;# 
   477  0E0F                     	;# 
   478  0E10                     	;# 
   479  0E11                     	;# 
   480  0E12                     	;# 
   481  0E13                     	;# 
   482  0E14                     	;# 
   483  0E15                     	;# 
   484  0E17                     	;# 
   485  0E20                     	;# 
   486  0E21                     	;# 
   487  0E22                     	;# 
   488  0E24                     	;# 
   489  0E25                     	;# 
   490  0E28                     	;# 
   491  0E29                     	;# 
   492  0E2A                     	;# 
   493  0E2B                     	;# 
   494  0E90                     	;# 
   495  0E91                     	;# 
   496  0E92                     	;# 
   497  0E94                     	;# 
   498  0E95                     	;# 
   499  0EA0                     	;# 
   500  0EA1                     	;# 
   501  0EA2                     	;# 
   502  0EA3                     	;# 
   503  0EA4                     	;# 
   504  0EA5                     	;# 
   505  0F0F                     	;# 
   506  0F10                     	;# 
   507  0F11                     	;# 
   508  0F12                     	;# 
   509  0F13                     	;# 
   510  0F14                     	;# 
   511  0F15                     	;# 
   512  0F16                     	;# 
   513  0F17                     	;# 
   514  0F18                     	;# 
   515  0F19                     	;# 
   516  0F1A                     	;# 
   517  0F1B                     	;# 
   518  0F1C                     	;# 
   519  0F1D                     	;# 
   520  0F1E                     	;# 
   521  0F1F                     	;# 
   522  0F20                     	;# 
   523  0F21                     	;# 
   524  0F22                     	;# 
   525  0F23                     	;# 
   526  0F24                     	;# 
   527  0F25                     	;# 
   528  0F26                     	;# 
   529  0F27                     	;# 
   530  0F28                     	;# 
   531  0F29                     	;# 
   532  0F2A                     	;# 
   533  0F2B                     	;# 
   534  0F2C                     	;# 
   535  0F2D                     	;# 
   536  0F9E                     	;# 
   537  0FE4                     	;# 
   538  0FE5                     	;# 
   539  0FE6                     	;# 
   540  0FE7                     	;# 
   541  0FE8                     	;# 
   542  0FE9                     	;# 
   543  0FEA                     	;# 
   544  0FEB                     	;# 
   545  0FED                     	;# 
   546  0FEE                     	;# 
   547  0FEF                     	;# 
   548  0000                     	;# 
   549  0001                     	;# 
   550  0002                     	;# 
   551  0003                     	;# 
   552  0004                     	;# 
   553  0005                     	;# 
   554  0006                     	;# 
   555  0007                     	;# 
   556  0008                     	;# 
   557  0009                     	;# 
   558  000A                     	;# 
   559  000B                     	;# 
   560  000C                     	;# 
   561  000E                     	;# 
   562  0011                     	;# 
   563  0012                     	;# 
   564  0013                     	;# 
   565  0015                     	;# 
   566  0016                     	;# 
   567  0016                     	;# 
   568  0017                     	;# 
   569  0018                     	;# 
   570  0019                     	;# 
   571  001A                     	;# 
   572  001B                     	;# 
   573  001C                     	;# 
   574  008C                     	;# 
   575  008E                     	;# 
   576  0091                     	;# 
   577  0092                     	;# 
   578  0093                     	;# 
   579  0095                     	;# 
   580  0096                     	;# 
   581  0097                     	;# 
   582  0098                     	;# 
   583  0099                     	;# 
   584  009A                     	;# 
   585  009B                     	;# 
   586  009B                     	;# 
   587  009C                     	;# 
   588  009D                     	;# 
   589  009E                     	;# 
   590  009F                     	;# 
   591  010C                     	;# 
   592  010E                     	;# 
   593  0111                     	;# 
   594  0112                     	;# 
   595  0113                     	;# 
   596  0114                     	;# 
   597  0115                     	;# 
   598  0116                     	;# 
   599  0117                     	;# 
   600  0118                     	;# 
   601  0119                     	;# 
   602  011C                     	;# 
   603  018C                     	;# 
   604  018E                     	;# 
   605  0191                     	;# 
   606  0191                     	;# 
   607  0192                     	;# 
   608  0193                     	;# 
   609  0193                     	;# 
   610  0194                     	;# 
   611  0195                     	;# 
   612  0196                     	;# 
   613  0197                     	;# 
   614  0199                     	;# 
   615  0199                     	;# 
   616  0199                     	;# 
   617  019A                     	;# 
   618  019A                     	;# 
   619  019A                     	;# 
   620  019B                     	;# 
   621  019B                     	;# 
   622  019B                     	;# 
   623  019B                     	;# 
   624  019B                     	;# 
   625  019C                     	;# 
   626  019C                     	;# 
   627  019C                     	;# 
   628  019D                     	;# 
   629  019D                     	;# 
   630  019D                     	;# 
   631  019E                     	;# 
   632  019E                     	;# 
   633  019E                     	;# 
   634  019F                     	;# 
   635  019F                     	;# 
   636  019F                     	;# 
   637  019F                     	;# 
   638  019F                     	;# 
   639  020C                     	;# 
   640  020E                     	;# 
   641  0211                     	;# 
   642  0211                     	;# 
   643  0212                     	;# 
   644  0212                     	;# 
   645  0213                     	;# 
   646  0213                     	;# 
   647  0214                     	;# 
   648  0214                     	;# 
   649  0215                     	;# 
   650  0215                     	;# 
   651  0215                     	;# 
   652  0215                     	;# 
   653  0216                     	;# 
   654  0216                     	;# 
   655  0217                     	;# 
   656  0217                     	;# 
   657  028C                     	;# 
   658  028E                     	;# 
   659  0291                     	;# 
   660  0291                     	;# 
   661  0292                     	;# 
   662  0293                     	;# 
   663  0293                     	;# 
   664  0298                     	;# 
   665  0298                     	;# 
   666  0299                     	;# 
   667  029A                     	;# 
   668  029A                     	;# 
   669  029E                     	;# 
   670  030C                     	;# 
   671  030E                     	;# 
   672  038C                     	;# 
   673  038E                     	;# 
   674  0391                     	;# 
   675  0392                     	;# 
   676  0393                     	;# 
   677  0397                     	;# 
   678  0398                     	;# 
   679  0399                     	;# 
   680  0415                     	;# 
   681  0416                     	;# 
   682  0417                     	;# 
   683  041C                     	;# 
   684  041D                     	;# 
   685  041E                     	;# 
   686  0511                     	;# 
   687  0515                     	;# 
   688  0617                     	;# 
   689  0618                     	;# 
   690  0619                     	;# 
   691  0619                     	;# 
   692  061A                     	;# 
   693  061B                     	;# 
   694  061C                     	;# 
   695  061C                     	;# 
   696  0691                     	;# 
   697  0692                     	;# 
   698  0693                     	;# 
   699  0694                     	;# 
   700  0695                     	;# 
   701  0696                     	;# 
   702  0697                     	;# 
   703  0698                     	;# 
   704  0699                     	;# 
   705  069A                     	;# 
   706  069B                     	;# 
   707  069C                     	;# 
   708  069D                     	;# 
   709  069E                     	;# 
   710  069F                     	;# 
   711  0E0F                     	;# 
   712  0E10                     	;# 
   713  0E11                     	;# 
   714  0E12                     	;# 
   715  0E13                     	;# 
   716  0E14                     	;# 
   717  0E15                     	;# 
   718  0E17                     	;# 
   719  0E20                     	;# 
   720  0E21                     	;# 
   721  0E22                     	;# 
   722  0E24                     	;# 
   723  0E25                     	;# 
   724  0E28                     	;# 
   725  0E29                     	;# 
   726  0E2A                     	;# 
   727  0E2B                     	;# 
   728  0E90                     	;# 
   729  0E91                     	;# 
   730  0E92                     	;# 
   731  0E94                     	;# 
   732  0E95                     	;# 
   733  0EA0                     	;# 
   734  0EA1                     	;# 
   735  0EA2                     	;# 
   736  0EA3                     	;# 
   737  0EA4                     	;# 
   738  0EA5                     	;# 
   739  0F0F                     	;# 
   740  0F10                     	;# 
   741  0F11                     	;# 
   742  0F12                     	;# 
   743  0F13                     	;# 
   744  0F14                     	;# 
   745  0F15                     	;# 
   746  0F16                     	;# 
   747  0F17                     	;# 
   748  0F18                     	;# 
   749  0F19                     	;# 
   750  0F1A                     	;# 
   751  0F1B                     	;# 
   752  0F1C                     	;# 
   753  0F1D                     	;# 
   754  0F1E                     	;# 
   755  0F1F                     	;# 
   756  0F20                     	;# 
   757  0F21                     	;# 
   758  0F22                     	;# 
   759  0F23                     	;# 
   760  0F24                     	;# 
   761  0F25                     	;# 
   762  0F26                     	;# 
   763  0F27                     	;# 
   764  0F28                     	;# 
   765  0F29                     	;# 
   766  0F2A                     	;# 
   767  0F2B                     	;# 
   768  0F2C                     	;# 
   769  0F2D                     	;# 
   770  0F9E                     	;# 
   771  0FE4                     	;# 
   772  0FE5                     	;# 
   773  0FE6                     	;# 
   774  0FE7                     	;# 
   775  0FE8                     	;# 
   776  0FE9                     	;# 
   777  0FEA                     	;# 
   778  0FEB                     	;# 
   779  0FED                     	;# 
   780  0FEE                     	;# 
   781  0FEF                     	;# 
   782  0000                     	;# 
   783  0001                     	;# 
   784  0002                     	;# 
   785  0003                     	;# 
   786  0004                     	;# 
   787  0005                     	;# 
   788  0006                     	;# 
   789  0007                     	;# 
   790  0008                     	;# 
   791  0009                     	;# 
   792  000A                     	;# 
   793  000B                     	;# 
   794  000C                     	;# 
   795  000E                     	;# 
   796  0011                     	;# 
   797  0012                     	;# 
   798  0013                     	;# 
   799  0015                     	;# 
   800  0016                     	;# 
   801  0016                     	;# 
   802  0017                     	;# 
   803  0018                     	;# 
   804  0019                     	;# 
   805  001A                     	;# 
   806  001B                     	;# 
   807  001C                     	;# 
   808  008C                     	;# 
   809  008E                     	;# 
   810  0091                     	;# 
   811  0092                     	;# 
   812  0093                     	;# 
   813  0095                     	;# 
   814  0096                     	;# 
   815  0097                     	;# 
   816  0098                     	;# 
   817  0099                     	;# 
   818  009A                     	;# 
   819  009B                     	;# 
   820  009B                     	;# 
   821  009C                     	;# 
   822  009D                     	;# 
   823  009E                     	;# 
   824  009F                     	;# 
   825  010C                     	;# 
   826  010E                     	;# 
   827  0111                     	;# 
   828  0112                     	;# 
   829  0113                     	;# 
   830  0114                     	;# 
   831  0115                     	;# 
   832  0116                     	;# 
   833  0117                     	;# 
   834  0118                     	;# 
   835  0119                     	;# 
   836  011C                     	;# 
   837  018C                     	;# 
   838  018E                     	;# 
   839  0191                     	;# 
   840  0191                     	;# 
   841  0192                     	;# 
   842  0193                     	;# 
   843  0193                     	;# 
   844  0194                     	;# 
   845  0195                     	;# 
   846  0196                     	;# 
   847  0197                     	;# 
   848  0199                     	;# 
   849  0199                     	;# 
   850  0199                     	;# 
   851  019A                     	;# 
   852  019A                     	;# 
   853  019A                     	;# 
   854  019B                     	;# 
   855  019B                     	;# 
   856  019B                     	;# 
   857  019B                     	;# 
   858  019B                     	;# 
   859  019C                     	;# 
   860  019C                     	;# 
   861  019C                     	;# 
   862  019D                     	;# 
   863  019D                     	;# 
   864  019D                     	;# 
   865  019E                     	;# 
   866  019E                     	;# 
   867  019E                     	;# 
   868  019F                     	;# 
   869  019F                     	;# 
   870  019F                     	;# 
   871  019F                     	;# 
   872  019F                     	;# 
   873  020C                     	;# 
   874  020E                     	;# 
   875  0211                     	;# 
   876  0211                     	;# 
   877  0212                     	;# 
   878  0212                     	;# 
   879  0213                     	;# 
   880  0213                     	;# 
   881  0214                     	;# 
   882  0214                     	;# 
   883  0215                     	;# 
   884  0215                     	;# 
   885  0215                     	;# 
   886  0215                     	;# 
   887  0216                     	;# 
   888  0216                     	;# 
   889  0217                     	;# 
   890  0217                     	;# 
   891  028C                     	;# 
   892  028E                     	;# 
   893  0291                     	;# 
   894  0291                     	;# 
   895  0292                     	;# 
   896  0293                     	;# 
   897  0293                     	;# 
   898  0298                     	;# 
   899  0298                     	;# 
   900  0299                     	;# 
   901  029A                     	;# 
   902  029A                     	;# 
   903  029E                     	;# 
   904  030C                     	;# 
   905  030E                     	;# 
   906  038C                     	;# 
   907  038E                     	;# 
   908  0391                     	;# 
   909  0392                     	;# 
   910  0393                     	;# 
   911  0397                     	;# 
   912  0398                     	;# 
   913  0399                     	;# 
   914  0415                     	;# 
   915  0416                     	;# 
   916  0417                     	;# 
   917  041C                     	;# 
   918  041D                     	;# 
   919  041E                     	;# 
   920  0511                     	;# 
   921  0515                     	;# 
   922  0617                     	;# 
   923  0618                     	;# 
   924  0619                     	;# 
   925  0619                     	;# 
   926  061A                     	;# 
   927  061B                     	;# 
   928  061C                     	;# 
   929  061C                     	;# 
   930  0691                     	;# 
   931  0692                     	;# 
   932  0693                     	;# 
   933  0694                     	;# 
   934  0695                     	;# 
   935  0696                     	;# 
   936  0697                     	;# 
   937  0698                     	;# 
   938  0699                     	;# 
   939  069A                     	;# 
   940  069B                     	;# 
   941  069C                     	;# 
   942  069D                     	;# 
   943  069E                     	;# 
   944  069F                     	;# 
   945  0E0F                     	;# 
   946  0E10                     	;# 
   947  0E11                     	;# 
   948  0E12                     	;# 
   949  0E13                     	;# 
   950  0E14                     	;# 
   951  0E15                     	;# 
   952  0E17                     	;# 
   953  0E20                     	;# 
   954  0E21                     	;# 
   955  0E22                     	;# 
   956  0E24                     	;# 
   957  0E25                     	;# 
   958  0E28                     	;# 
   959  0E29                     	;# 
   960  0E2A                     	;# 
   961  0E2B                     	;# 
   962  0E90                     	;# 
   963  0E91                     	;# 
   964  0E92                     	;# 
   965  0E94                     	;# 
   966  0E95                     	;# 
   967  0EA0                     	;# 
   968  0EA1                     	;# 
   969  0EA2                     	;# 
   970  0EA3                     	;# 
   971  0EA4                     	;# 
   972  0EA5                     	;# 
   973  0F0F                     	;# 
   974  0F10                     	;# 
   975  0F11                     	;# 
   976  0F12                     	;# 
   977  0F13                     	;# 
   978  0F14                     	;# 
   979  0F15                     	;# 
   980  0F16                     	;# 
   981  0F17                     	;# 
   982  0F18                     	;# 
   983  0F19                     	;# 
   984  0F1A                     	;# 
   985  0F1B                     	;# 
   986  0F1C                     	;# 
   987  0F1D                     	;# 
   988  0F1E                     	;# 
   989  0F1F                     	;# 
   990  0F20                     	;# 
   991  0F21                     	;# 
   992  0F22                     	;# 
   993  0F23                     	;# 
   994  0F24                     	;# 
   995  0F25                     	;# 
   996  0F26                     	;# 
   997  0F27                     	;# 
   998  0F28                     	;# 
   999  0F29                     	;# 
  1000  0F2A                     	;# 
  1001  0F2B                     	;# 
  1002  0F2C                     	;# 
  1003  0F2D                     	;# 
  1004  0F9E                     	;# 
  1005  0FE4                     	;# 
  1006  0FE5                     	;# 
  1007  0FE6                     	;# 
  1008  0FE7                     	;# 
  1009  0FE8                     	;# 
  1010  0FE9                     	;# 
  1011  0FEA                     	;# 
  1012  0FEB                     	;# 
  1013  0FED                     	;# 
  1014  0FEE                     	;# 
  1015  0FEF                     	;# 
  1016  0000                     	;# 
  1017  0001                     	;# 
  1018  0002                     	;# 
  1019  0003                     	;# 
  1020  0004                     	;# 
  1021  0005                     	;# 
  1022  0006                     	;# 
  1023  0007                     	;# 
  1024  0008                     	;# 
  1025  0009                     	;# 
  1026  000A                     	;# 
  1027  000B                     	;# 
  1028  000C                     	;# 
  1029  000E                     	;# 
  1030  0011                     	;# 
  1031  0012                     	;# 
  1032  0013                     	;# 
  1033  0015                     	;# 
  1034  0016                     	;# 
  1035  0016                     	;# 
  1036  0017                     	;# 
  1037  0018                     	;# 
  1038  0019                     	;# 
  1039  001A                     	;# 
  1040  001B                     	;# 
  1041  001C                     	;# 
  1042  008C                     	;# 
  1043  008E                     	;# 
  1044  0091                     	;# 
  1045  0092                     	;# 
  1046  0093                     	;# 
  1047  0095                     	;# 
  1048  0096                     	;# 
  1049  0097                     	;# 
  1050  0098                     	;# 
  1051  0099                     	;# 
  1052  009A                     	;# 
  1053  009B                     	;# 
  1054  009B                     	;# 
  1055  009C                     	;# 
  1056  009D                     	;# 
  1057  009E                     	;# 
  1058  009F                     	;# 
  1059  010C                     	;# 
  1060  010E                     	;# 
  1061  0111                     	;# 
  1062  0112                     	;# 
  1063  0113                     	;# 
  1064  0114                     	;# 
  1065  0115                     	;# 
  1066  0116                     	;# 
  1067  0117                     	;# 
  1068  0118                     	;# 
  1069  0119                     	;# 
  1070  011C                     	;# 
  1071  018C                     	;# 
  1072  018E                     	;# 
  1073  0191                     	;# 
  1074  0191                     	;# 
  1075  0192                     	;# 
  1076  0193                     	;# 
  1077  0193                     	;# 
  1078  0194                     	;# 
  1079  0195                     	;# 
  1080  0196                     	;# 
  1081  0197                     	;# 
  1082  0199                     	;# 
  1083  0199                     	;# 
  1084  0199                     	;# 
  1085  019A                     	;# 
  1086  019A                     	;# 
  1087  019A                     	;# 
  1088  019B                     	;# 
  1089  019B                     	;# 
  1090  019B                     	;# 
  1091  019B                     	;# 
  1092  019B                     	;# 
  1093  019C                     	;# 
  1094  019C                     	;# 
  1095  019C                     	;# 
  1096  019D                     	;# 
  1097  019D                     	;# 
  1098  019D                     	;# 
  1099  019E                     	;# 
  1100  019E                     	;# 
  1101  019E                     	;# 
  1102  019F                     	;# 
  1103  019F                     	;# 
  1104  019F                     	;# 
  1105  019F                     	;# 
  1106  019F                     	;# 
  1107  020C                     	;# 
  1108  020E                     	;# 
  1109  0211                     	;# 
  1110  0211                     	;# 
  1111  0212                     	;# 
  1112  0212                     	;# 
  1113  0213                     	;# 
  1114  0213                     	;# 
  1115  0214                     	;# 
  1116  0214                     	;# 
  1117  0215                     	;# 
  1118  0215                     	;# 
  1119  0215                     	;# 
  1120  0215                     	;# 
  1121  0216                     	;# 
  1122  0216                     	;# 
  1123  0217                     	;# 
  1124  0217                     	;# 
  1125  028C                     	;# 
  1126  028E                     	;# 
  1127  0291                     	;# 
  1128  0291                     	;# 
  1129  0292                     	;# 
  1130  0293                     	;# 
  1131  0293                     	;# 
  1132  0298                     	;# 
  1133  0298                     	;# 
  1134  0299                     	;# 
  1135  029A                     	;# 
  1136  029A                     	;# 
  1137  029E                     	;# 
  1138  030C                     	;# 
  1139  030E                     	;# 
  1140  038C                     	;# 
  1141  038E                     	;# 
  1142  0391                     	;# 
  1143  0392                     	;# 
  1144  0393                     	;# 
  1145  0397                     	;# 
  1146  0398                     	;# 
  1147  0399                     	;# 
  1148  0415                     	;# 
  1149  0416                     	;# 
  1150  0417                     	;# 
  1151  041C                     	;# 
  1152  041D                     	;# 
  1153  041E                     	;# 
  1154  0511                     	;# 
  1155  0515                     	;# 
  1156  0617                     	;# 
  1157  0618                     	;# 
  1158  0619                     	;# 
  1159  0619                     	;# 
  1160  061A                     	;# 
  1161  061B                     	;# 
  1162  061C                     	;# 
  1163  061C                     	;# 
  1164  0691                     	;# 
  1165  0692                     	;# 
  1166  0693                     	;# 
  1167  0694                     	;# 
  1168  0695                     	;# 
  1169  0696                     	;# 
  1170  0697                     	;# 
  1171  0698                     	;# 
  1172  0699                     	;# 
  1173  069A                     	;# 
  1174  069B                     	;# 
  1175  069C                     	;# 
  1176  069D                     	;# 
  1177  069E                     	;# 
  1178  069F                     	;# 
  1179  0E0F                     	;# 
  1180  0E10                     	;# 
  1181  0E11                     	;# 
  1182  0E12                     	;# 
  1183  0E13                     	;# 
  1184  0E14                     	;# 
  1185  0E15                     	;# 
  1186  0E17                     	;# 
  1187  0E20                     	;# 
  1188  0E21                     	;# 
  1189  0E22                     	;# 
  1190  0E24                     	;# 
  1191  0E25                     	;# 
  1192  0E28                     	;# 
  1193  0E29                     	;# 
  1194  0E2A                     	;# 
  1195  0E2B                     	;# 
  1196  0E90                     	;# 
  1197  0E91                     	;# 
  1198  0E92                     	;# 
  1199  0E94                     	;# 
  1200  0E95                     	;# 
  1201  0EA0                     	;# 
  1202  0EA1                     	;# 
  1203  0EA2                     	;# 
  1204  0EA3                     	;# 
  1205  0EA4                     	;# 
  1206  0EA5                     	;# 
  1207  0F0F                     	;# 
  1208  0F10                     	;# 
  1209  0F11                     	;# 
  1210  0F12                     	;# 
  1211  0F13                     	;# 
  1212  0F14                     	;# 
  1213  0F15                     	;# 
  1214  0F16                     	;# 
  1215  0F17                     	;# 
  1216  0F18                     	;# 
  1217  0F19                     	;# 
  1218  0F1A                     	;# 
  1219  0F1B                     	;# 
  1220  0F1C                     	;# 
  1221  0F1D                     	;# 
  1222  0F1E                     	;# 
  1223  0F1F                     	;# 
  1224  0F20                     	;# 
  1225  0F21                     	;# 
  1226  0F22                     	;# 
  1227  0F23                     	;# 
  1228  0F24                     	;# 
  1229  0F25                     	;# 
  1230  0F26                     	;# 
  1231  0F27                     	;# 
  1232  0F28                     	;# 
  1233  0F29                     	;# 
  1234  0F2A                     	;# 
  1235  0F2B                     	;# 
  1236  0F2C                     	;# 
  1237  0F2D                     	;# 
  1238  0F9E                     	;# 
  1239  0FE4                     	;# 
  1240  0FE5                     	;# 
  1241  0FE6                     	;# 
  1242  0FE7                     	;# 
  1243  0FE8                     	;# 
  1244  0FE9                     	;# 
  1245  0FEA                     	;# 
  1246  0FEB                     	;# 
  1247  0FED                     	;# 
  1248  0FEE                     	;# 
  1249  0FEF                     	;# 
  1250  0000                     	;# 
  1251  0001                     	;# 
  1252  0002                     	;# 
  1253  0003                     	;# 
  1254  0004                     	;# 
  1255  0005                     	;# 
  1256  0006                     	;# 
  1257  0007                     	;# 
  1258  0008                     	;# 
  1259  0009                     	;# 
  1260  000A                     	;# 
  1261  000B                     	;# 
  1262  000C                     	;# 
  1263  000E                     	;# 
  1264  0011                     	;# 
  1265  0012                     	;# 
  1266  0013                     	;# 
  1267  0015                     	;# 
  1268  0016                     	;# 
  1269  0016                     	;# 
  1270  0017                     	;# 
  1271  0018                     	;# 
  1272  0019                     	;# 
  1273  001A                     	;# 
  1274  001B                     	;# 
  1275  001C                     	;# 
  1276  008C                     	;# 
  1277  008E                     	;# 
  1278  0091                     	;# 
  1279  0092                     	;# 
  1280  0093                     	;# 
  1281  0095                     	;# 
  1282  0096                     	;# 
  1283  0097                     	;# 
  1284  0098                     	;# 
  1285  0099                     	;# 
  1286  009A                     	;# 
  1287  009B                     	;# 
  1288  009B                     	;# 
  1289  009C                     	;# 
  1290  009D                     	;# 
  1291  009E                     	;# 
  1292  009F                     	;# 
  1293  010C                     	;# 
  1294  010E                     	;# 
  1295  0111                     	;# 
  1296  0112                     	;# 
  1297  0113                     	;# 
  1298  0114                     	;# 
  1299  0115                     	;# 
  1300  0116                     	;# 
  1301  0117                     	;# 
  1302  0118                     	;# 
  1303  0119                     	;# 
  1304  011C                     	;# 
  1305  018C                     	;# 
  1306  018E                     	;# 
  1307  0191                     	;# 
  1308  0191                     	;# 
  1309  0192                     	;# 
  1310  0193                     	;# 
  1311  0193                     	;# 
  1312  0194                     	;# 
  1313  0195                     	;# 
  1314  0196                     	;# 
  1315  0197                     	;# 
  1316  0199                     	;# 
  1317  0199                     	;# 
  1318  0199                     	;# 
  1319  019A                     	;# 
  1320  019A                     	;# 
  1321  019A                     	;# 
  1322  019B                     	;# 
  1323  019B                     	;# 
  1324  019B                     	;# 
  1325  019B                     	;# 
  1326  019B                     	;# 
  1327  019C                     	;# 
  1328  019C                     	;# 
  1329  019C                     	;# 
  1330  019D                     	;# 
  1331  019D                     	;# 
  1332  019D                     	;# 
  1333  019E                     	;# 
  1334  019E                     	;# 
  1335  019E                     	;# 
  1336  019F                     	;# 
  1337  019F                     	;# 
  1338  019F                     	;# 
  1339  019F                     	;# 
  1340  019F                     	;# 
  1341  020C                     	;# 
  1342  020E                     	;# 
  1343  0211                     	;# 
  1344  0211                     	;# 
  1345  0212                     	;# 
  1346  0212                     	;# 
  1347  0213                     	;# 
  1348  0213                     	;# 
  1349  0214                     	;# 
  1350  0214                     	;# 
  1351  0215                     	;# 
  1352  0215                     	;# 
  1353  0215                     	;# 
  1354  0215                     	;# 
  1355  0216                     	;# 
  1356  0216                     	;# 
  1357  0217                     	;# 
  1358  0217                     	;# 
  1359  028C                     	;# 
  1360  028E                     	;# 
  1361  0291                     	;# 
  1362  0291                     	;# 
  1363  0292                     	;# 
  1364  0293                     	;# 
  1365  0293                     	;# 
  1366  0298                     	;# 
  1367  0298                     	;# 
  1368  0299                     	;# 
  1369  029A                     	;# 
  1370  029A                     	;# 
  1371  029E                     	;# 
  1372  030C                     	;# 
  1373  030E                     	;# 
  1374  038C                     	;# 
  1375  038E                     	;# 
  1376  0391                     	;# 
  1377  0392                     	;# 
  1378  0393                     	;# 
  1379  0397                     	;# 
  1380  0398                     	;# 
  1381  0399                     	;# 
  1382  0415                     	;# 
  1383  0416                     	;# 
  1384  0417                     	;# 
  1385  041C                     	;# 
  1386  041D                     	;# 
  1387  041E                     	;# 
  1388  0511                     	;# 
  1389  0515                     	;# 
  1390  0617                     	;# 
  1391  0618                     	;# 
  1392  0619                     	;# 
  1393  0619                     	;# 
  1394  061A                     	;# 
  1395  061B                     	;# 
  1396  061C                     	;# 
  1397  061C                     	;# 
  1398  0691                     	;# 
  1399  0692                     	;# 
  1400  0693                     	;# 
  1401  0694                     	;# 
  1402  0695                     	;# 
  1403  0696                     	;# 
  1404  0697                     	;# 
  1405  0698                     	;# 
  1406  0699                     	;# 
  1407  069A                     	;# 
  1408  069B                     	;# 
  1409  069C                     	;# 
  1410  069D                     	;# 
  1411  069E                     	;# 
  1412  069F                     	;# 
  1413  0E0F                     	;# 
  1414  0E10                     	;# 
  1415  0E11                     	;# 
  1416  0E12                     	;# 
  1417  0E13                     	;# 
  1418  0E14                     	;# 
  1419  0E15                     	;# 
  1420  0E17                     	;# 
  1421  0E20                     	;# 
  1422  0E21                     	;# 
  1423  0E22                     	;# 
  1424  0E24                     	;# 
  1425  0E25                     	;# 
  1426  0E28                     	;# 
  1427  0E29                     	;# 
  1428  0E2A                     	;# 
  1429  0E2B                     	;# 
  1430  0E90                     	;# 
  1431  0E91                     	;# 
  1432  0E92                     	;# 
  1433  0E94                     	;# 
  1434  0E95                     	;# 
  1435  0EA0                     	;# 
  1436  0EA1                     	;# 
  1437  0EA2                     	;# 
  1438  0EA3                     	;# 
  1439  0EA4                     	;# 
  1440  0EA5                     	;# 
  1441  0F0F                     	;# 
  1442  0F10                     	;# 
  1443  0F11                     	;# 
  1444  0F12                     	;# 
  1445  0F13                     	;# 
  1446  0F14                     	;# 
  1447  0F15                     	;# 
  1448  0F16                     	;# 
  1449  0F17                     	;# 
  1450  0F18                     	;# 
  1451  0F19                     	;# 
  1452  0F1A                     	;# 
  1453  0F1B                     	;# 
  1454  0F1C                     	;# 
  1455  0F1D                     	;# 
  1456  0F1E                     	;# 
  1457  0F1F                     	;# 
  1458  0F20                     	;# 
  1459  0F21                     	;# 
  1460  0F22                     	;# 
  1461  0F23                     	;# 
  1462  0F24                     	;# 
  1463  0F25                     	;# 
  1464  0F26                     	;# 
  1465  0F27                     	;# 
  1466  0F28                     	;# 
  1467  0F29                     	;# 
  1468  0F2A                     	;# 
  1469  0F2B                     	;# 
  1470  0F2C                     	;# 
  1471  0F2D                     	;# 
  1472  0F9E                     	;# 
  1473  0FE4                     	;# 
  1474  0FE5                     	;# 
  1475  0FE6                     	;# 
  1476  0FE7                     	;# 
  1477  0FE8                     	;# 
  1478  0FE9                     	;# 
  1479  0FEA                     	;# 
  1480  0FEB                     	;# 
  1481  0FED                     	;# 
  1482  0FEE                     	;# 
  1483  0FEF                     	;# 
  1484  0000                     	;# 
  1485  0001                     	;# 
  1486  0002                     	;# 
  1487  0003                     	;# 
  1488  0004                     	;# 
  1489  0005                     	;# 
  1490  0006                     	;# 
  1491  0007                     	;# 
  1492  0008                     	;# 
  1493  0009                     	;# 
  1494  000A                     	;# 
  1495  000B                     	;# 
  1496  000C                     	;# 
  1497  000E                     	;# 
  1498  0011                     	;# 
  1499  0012                     	;# 
  1500  0013                     	;# 
  1501  0015                     	;# 
  1502  0016                     	;# 
  1503  0016                     	;# 
  1504  0017                     	;# 
  1505  0018                     	;# 
  1506  0019                     	;# 
  1507  001A                     	;# 
  1508  001B                     	;# 
  1509  001C                     	;# 
  1510  008C                     	;# 
  1511  008E                     	;# 
  1512  0091                     	;# 
  1513  0092                     	;# 
  1514  0093                     	;# 
  1515  0095                     	;# 
  1516  0096                     	;# 
  1517  0097                     	;# 
  1518  0098                     	;# 
  1519  0099                     	;# 
  1520  009A                     	;# 
  1521  009B                     	;# 
  1522  009B                     	;# 
  1523  009C                     	;# 
  1524  009D                     	;# 
  1525  009E                     	;# 
  1526  009F                     	;# 
  1527  010C                     	;# 
  1528  010E                     	;# 
  1529  0111                     	;# 
  1530  0112                     	;# 
  1531  0113                     	;# 
  1532  0114                     	;# 
  1533  0115                     	;# 
  1534  0116                     	;# 
  1535  0117                     	;# 
  1536  0118                     	;# 
  1537  0119                     	;# 
  1538  011C                     	;# 
  1539  018C                     	;# 
  1540  018E                     	;# 
  1541  0191                     	;# 
  1542  0191                     	;# 
  1543  0192                     	;# 
  1544  0193                     	;# 
  1545  0193                     	;# 
  1546  0194                     	;# 
  1547  0195                     	;# 
  1548  0196                     	;# 
  1549  0197                     	;# 
  1550  0199                     	;# 
  1551  0199                     	;# 
  1552  0199                     	;# 
  1553  019A                     	;# 
  1554  019A                     	;# 
  1555  019A                     	;# 
  1556  019B                     	;# 
  1557  019B                     	;# 
  1558  019B                     	;# 
  1559  019B                     	;# 
  1560  019B                     	;# 
  1561  019C                     	;# 
  1562  019C                     	;# 
  1563  019C                     	;# 
  1564  019D                     	;# 
  1565  019D                     	;# 
  1566  019D                     	;# 
  1567  019E                     	;# 
  1568  019E                     	;# 
  1569  019E                     	;# 
  1570  019F                     	;# 
  1571  019F                     	;# 
  1572  019F                     	;# 
  1573  019F                     	;# 
  1574  019F                     	;# 
  1575  020C                     	;# 
  1576  020E                     	;# 
  1577  0211                     	;# 
  1578  0211                     	;# 
  1579  0212                     	;# 
  1580  0212                     	;# 
  1581  0213                     	;# 
  1582  0213                     	;# 
  1583  0214                     	;# 
  1584  0214                     	;# 
  1585  0215                     	;# 
  1586  0215                     	;# 
  1587  0215                     	;# 
  1588  0215                     	;# 
  1589  0216                     	;# 
  1590  0216                     	;# 
  1591  0217                     	;# 
  1592  0217                     	;# 
  1593  028C                     	;# 
  1594  028E                     	;# 
  1595  0291                     	;# 
  1596  0291                     	;# 
  1597  0292                     	;# 
  1598  0293                     	;# 
  1599  0293                     	;# 
  1600  0298                     	;# 
  1601  0298                     	;# 
  1602  0299                     	;# 
  1603  029A                     	;# 
  1604  029A                     	;# 
  1605  029E                     	;# 
  1606  030C                     	;# 
  1607  030E                     	;# 
  1608  038C                     	;# 
  1609  038E                     	;# 
  1610  0391                     	;# 
  1611  0392                     	;# 
  1612  0393                     	;# 
  1613  0397                     	;# 
  1614  0398                     	;# 
  1615  0399                     	;# 
  1616  0415                     	;# 
  1617  0416                     	;# 
  1618  0417                     	;# 
  1619  041C                     	;# 
  1620  041D                     	;# 
  1621  041E                     	;# 
  1622  0511                     	;# 
  1623  0515                     	;# 
  1624  0617                     	;# 
  1625  0618                     	;# 
  1626  0619                     	;# 
  1627  0619                     	;# 
  1628  061A                     	;# 
  1629  061B                     	;# 
  1630  061C                     	;# 
  1631  061C                     	;# 
  1632  0691                     	;# 
  1633  0692                     	;# 
  1634  0693                     	;# 
  1635  0694                     	;# 
  1636  0695                     	;# 
  1637  0696                     	;# 
  1638  0697                     	;# 
  1639  0698                     	;# 
  1640  0699                     	;# 
  1641  069A                     	;# 
  1642  069B                     	;# 
  1643  069C                     	;# 
  1644  069D                     	;# 
  1645  069E                     	;# 
  1646  069F                     	;# 
  1647  0E0F                     	;# 
  1648  0E10                     	;# 
  1649  0E11                     	;# 
  1650  0E12                     	;# 
  1651  0E13                     	;# 
  1652  0E14                     	;# 
  1653  0E15                     	;# 
  1654  0E17                     	;# 
  1655  0E20                     	;# 
  1656  0E21                     	;# 
  1657  0E22                     	;# 
  1658  0E24                     	;# 
  1659  0E25                     	;# 
  1660  0E28                     	;# 
  1661  0E29                     	;# 
  1662  0E2A                     	;# 
  1663  0E2B                     	;# 
  1664  0E90                     	;# 
  1665  0E91                     	;# 
  1666  0E92                     	;# 
  1667  0E94                     	;# 
  1668  0E95                     	;# 
  1669  0EA0                     	;# 
  1670  0EA1                     	;# 
  1671  0EA2                     	;# 
  1672  0EA3                     	;# 
  1673  0EA4                     	;# 
  1674  0EA5                     	;# 
  1675  0F0F                     	;# 
  1676  0F10                     	;# 
  1677  0F11                     	;# 
  1678  0F12                     	;# 
  1679  0F13                     	;# 
  1680  0F14                     	;# 
  1681  0F15                     	;# 
  1682  0F16                     	;# 
  1683  0F17                     	;# 
  1684  0F18                     	;# 
  1685  0F19                     	;# 
  1686  0F1A                     	;# 
  1687  0F1B                     	;# 
  1688  0F1C                     	;# 
  1689  0F1D                     	;# 
  1690  0F1E                     	;# 
  1691  0F1F                     	;# 
  1692  0F20                     	;# 
  1693  0F21                     	;# 
  1694  0F22                     	;# 
  1695  0F23                     	;# 
  1696  0F24                     	;# 
  1697  0F25                     	;# 
  1698  0F26                     	;# 
  1699  0F27                     	;# 
  1700  0F28                     	;# 
  1701  0F29                     	;# 
  1702  0F2A                     	;# 
  1703  0F2B                     	;# 
  1704  0F2C                     	;# 
  1705  0F2D                     	;# 
  1706  0F9E                     	;# 
  1707  0FE4                     	;# 
  1708  0FE5                     	;# 
  1709  0FE6                     	;# 
  1710  0FE7                     	;# 
  1711  0FE8                     	;# 
  1712  0FE9                     	;# 
  1713  0FEA                     	;# 
  1714  0FEB                     	;# 
  1715  0FED                     	;# 
  1716  0FEE                     	;# 
  1717  0FEF                     	;# 
  1718  0000                     	;# 
  1719  0001                     	;# 
  1720  0002                     	;# 
  1721  0003                     	;# 
  1722  0004                     	;# 
  1723  0005                     	;# 
  1724  0006                     	;# 
  1725  0007                     	;# 
  1726  0008                     	;# 
  1727  0009                     	;# 
  1728  000A                     	;# 
  1729  000B                     	;# 
  1730  000C                     	;# 
  1731  000E                     	;# 
  1732  0011                     	;# 
  1733  0012                     	;# 
  1734  0013                     	;# 
  1735  0015                     	;# 
  1736  0016                     	;# 
  1737  0016                     	;# 
  1738  0017                     	;# 
  1739  0018                     	;# 
  1740  0019                     	;# 
  1741  001A                     	;# 
  1742  001B                     	;# 
  1743  001C                     	;# 
  1744  008C                     	;# 
  1745  008E                     	;# 
  1746  0091                     	;# 
  1747  0092                     	;# 
  1748  0093                     	;# 
  1749  0095                     	;# 
  1750  0096                     	;# 
  1751  0097                     	;# 
  1752  0098                     	;# 
  1753  0099                     	;# 
  1754  009A                     	;# 
  1755  009B                     	;# 
  1756  009B                     	;# 
  1757  009C                     	;# 
  1758  009D                     	;# 
  1759  009E                     	;# 
  1760  009F                     	;# 
  1761  010C                     	;# 
  1762  010E                     	;# 
  1763  0111                     	;# 
  1764  0112                     	;# 
  1765  0113                     	;# 
  1766  0114                     	;# 
  1767  0115                     	;# 
  1768  0116                     	;# 
  1769  0117                     	;# 
  1770  0118                     	;# 
  1771  0119                     	;# 
  1772  011C                     	;# 
  1773  018C                     	;# 
  1774  018E                     	;# 
  1775  0191                     	;# 
  1776  0191                     	;# 
  1777  0192                     	;# 
  1778  0193                     	;# 
  1779  0193                     	;# 
  1780  0194                     	;# 
  1781  0195                     	;# 
  1782  0196                     	;# 
  1783  0197                     	;# 
  1784  0199                     	;# 
  1785  0199                     	;# 
  1786  0199                     	;# 
  1787  019A                     	;# 
  1788  019A                     	;# 
  1789  019A                     	;# 
  1790  019B                     	;# 
  1791  019B                     	;# 
  1792  019B                     	;# 
  1793  019B                     	;# 
  1794  019B                     	;# 
  1795  019C                     	;# 
  1796  019C                     	;# 
  1797  019C                     	;# 
  1798  019D                     	;# 
  1799  019D                     	;# 
  1800  019D                     	;# 
  1801  019E                     	;# 
  1802  019E                     	;# 
  1803  019E                     	;# 
  1804  019F                     	;# 
  1805  019F                     	;# 
  1806  019F                     	;# 
  1807  019F                     	;# 
  1808  019F                     	;# 
  1809  020C                     	;# 
  1810  020E                     	;# 
  1811  0211                     	;# 
  1812  0211                     	;# 
  1813  0212                     	;# 
  1814  0212                     	;# 
  1815  0213                     	;# 
  1816  0213                     	;# 
  1817  0214                     	;# 
  1818  0214                     	;# 
  1819  0215                     	;# 
  1820  0215                     	;# 
  1821  0215                     	;# 
  1822  0215                     	;# 
  1823  0216                     	;# 
  1824  0216                     	;# 
  1825  0217                     	;# 
  1826  0217                     	;# 
  1827  028C                     	;# 
  1828  028E                     	;# 
  1829  0291                     	;# 
  1830  0291                     	;# 
  1831  0292                     	;# 
  1832  0293                     	;# 
  1833  0293                     	;# 
  1834  0298                     	;# 
  1835  0298                     	;# 
  1836  0299                     	;# 
  1837  029A                     	;# 
  1838  029A                     	;# 
  1839  029E                     	;# 
  1840  030C                     	;# 
  1841  030E                     	;# 
  1842  038C                     	;# 
  1843  038E                     	;# 
  1844  0391                     	;# 
  1845  0392                     	;# 
  1846  0393                     	;# 
  1847  0397                     	;# 
  1848  0398                     	;# 
  1849  0399                     	;# 
  1850  0415                     	;# 
  1851  0416                     	;# 
  1852  0417                     	;# 
  1853  041C                     	;# 
  1854  041D                     	;# 
  1855  041E                     	;# 
  1856  0511                     	;# 
  1857  0515                     	;# 
  1858  0617                     	;# 
  1859  0618                     	;# 
  1860  0619                     	;# 
  1861  0619                     	;# 
  1862  061A                     	;# 
  1863  061B                     	;# 
  1864  061C                     	;# 
  1865  061C                     	;# 
  1866  0691                     	;# 
  1867  0692                     	;# 
  1868  0693                     	;# 
  1869  0694                     	;# 
  1870  0695                     	;# 
  1871  0696                     	;# 
  1872  0697                     	;# 
  1873  0698                     	;# 
  1874  0699                     	;# 
  1875  069A                     	;# 
  1876  069B                     	;# 
  1877  069C                     	;# 
  1878  069D                     	;# 
  1879  069E                     	;# 
  1880  069F                     	;# 
  1881  0E0F                     	;# 
  1882  0E10                     	;# 
  1883  0E11                     	;# 
  1884  0E12                     	;# 
  1885  0E13                     	;# 
  1886  0E14                     	;# 
  1887  0E15                     	;# 
  1888  0E17                     	;# 
  1889  0E20                     	;# 
  1890  0E21                     	;# 
  1891  0E22                     	;# 
  1892  0E24                     	;# 
  1893  0E25                     	;# 
  1894  0E28                     	;# 
  1895  0E29                     	;# 
  1896  0E2A                     	;# 
  1897  0E2B                     	;# 
  1898  0E90                     	;# 
  1899  0E91                     	;# 
  1900  0E92                     	;# 
  1901  0E94                     	;# 
  1902  0E95                     	;# 
  1903  0EA0                     	;# 
  1904  0EA1                     	;# 
  1905  0EA2                     	;# 
  1906  0EA3                     	;# 
  1907  0EA4                     	;# 
  1908  0EA5                     	;# 
  1909  0F0F                     	;# 
  1910  0F10                     	;# 
  1911  0F11                     	;# 
  1912  0F12                     	;# 
  1913  0F13                     	;# 
  1914  0F14                     	;# 
  1915  0F15                     	;# 
  1916  0F16                     	;# 
  1917  0F17                     	;# 
  1918  0F18                     	;# 
  1919  0F19                     	;# 
  1920  0F1A                     	;# 
  1921  0F1B                     	;# 
  1922  0F1C                     	;# 
  1923  0F1D                     	;# 
  1924  0F1E                     	;# 
  1925  0F1F                     	;# 
  1926  0F20                     	;# 
  1927  0F21                     	;# 
  1928  0F22                     	;# 
  1929  0F23                     	;# 
  1930  0F24                     	;# 
  1931  0F25                     	;# 
  1932  0F26                     	;# 
  1933  0F27                     	;# 
  1934  0F28                     	;# 
  1935  0F29                     	;# 
  1936  0F2A                     	;# 
  1937  0F2B                     	;# 
  1938  0F2C                     	;# 
  1939  0F2D                     	;# 
  1940  0F9E                     	;# 
  1941  0FE4                     	;# 
  1942  0FE5                     	;# 
  1943  0FE6                     	;# 
  1944  0FE7                     	;# 
  1945  0FE8                     	;# 
  1946  0FE9                     	;# 
  1947  0FEA                     	;# 
  1948  0FEB                     	;# 
  1949  0FED                     	;# 
  1950  0FEE                     	;# 
  1951  0FEF                     	;# 
  1952                           
  1953                           	psect	stringtext1
  1954  02E7                     __pstringtext1:
  1955  02E7                     _dpowers:
  1956  02E7  3401               	retlw	1
  1957  02E8  3400               	retlw	0
  1958  02E9  340A               	retlw	10
  1959  02EA  3400               	retlw	0
  1960  02EB  3464               	retlw	100
  1961  02EC  3400               	retlw	0
  1962  02ED  34E8               	retlw	232
  1963  02EE  3403               	retlw	3
  1964  02EF  3410               	retlw	16
  1965  02F0  3427               	retlw	39
  1966  02F1                     __end_of_dpowers:
  1967                           
  1968                           	psect	nvBANK0
  1969  0055                     __pnvBANK0:
  1970  0055                     _EUSART_ErrorHandler:
  1971  0055                     	ds	2
  1972  0057                     _EUSART_OverrunErrorHandler:
  1973  0057                     	ds	2
  1974  0059                     _EUSART_FramingErrorHandler:
  1975  0059                     	ds	2
  1976  005B                     _EUSART_RxDefaultInterruptHandler:
  1977  005B                     	ds	2
  1978  005D                     _EUSART_TxDefaultInterruptHandler:
  1979  005D                     	ds	2
  1980  005F                     _TMR2_InterruptHandler:
  1981  005F                     	ds	2
  1982  0061                     _eusartTxBufferRemaining:
  1983  0061                     	ds	1
  1984  000B                     _INTCONbits	set	11
  1985  001C                     _T2CONbits	set	28
  1986  001C                     _T2CON	set	28
  1987  0011                     _PIR1bits	set	17
  1988  001A                     _TMR2	set	26
  1989  001B                     _PR2	set	27
  1990  009D                     _ADCON0bits	set	157
  1991  009D                     _ADCON0	set	157
  1992  009C                     _ADRESH	set	156
  1993  009B                     _ADRESL	set	155
  1994  009F                     _ADCON2	set	159
  1995  009E                     _ADCON1	set	158
  1996  0097                     _WDTCON	set	151
  1997  0098                     _OSCTUNE	set	152
  1998  009A                     _OSCSTAT	set	154
  1999  0099                     _OSCCON	set	153
  2000  0091                     _PIE1bits	set	145
  2001  0095                     _OPTION_REGbits	set	149
  2002  008E                     _TRISC	set	142
  2003  008C                     _TRISA	set	140
  2004  0116                     _BORCON	set	278
  2005  010E                     _LATC	set	270
  2006  010C                     _LATA	set	268
  2007  019D                     _RCSTAbits	set	413
  2008  019E                     _TXSTAbits	set	414
  2009  0199                     _RC1REG	set	409
  2010  019D                     _RC1STAbits	set	413
  2011  019A                     _TX1REG	set	410
  2012  019E                     _TX1STAbits	set	414
  2013  019C                     _SP1BRGH	set	412
  2014  019B                     _SP1BRGL	set	411
  2015  019E                     _TX1STA	set	414
  2016  019D                     _RC1STA	set	413
  2017  019F                     _BAUD1CON	set	415
  2018  018C                     _ANSELA	set	396
  2019  018E                     _ANSELC	set	398
  2020  020E                     _WPUC	set	526
  2021  020C                     _WPUA	set	524
  2022  029E                     _CCPTMRSbits	set	670
  2023  0292                     _CCPR1H	set	658
  2024  0291                     _CCPR1L	set	657
  2025  0293                     _CCP1CON	set	659
  2026  028E                     _ODCONC	set	654
  2027  028C                     _ODCONA	set	652
  2028  030E                     _SLRCONC	set	782
  2029  030C                     _SLRCONA	set	780
  2030  038E                     _INLVLC	set	910
  2031  038C                     _INLVLA	set	908
  2032  0E24                     _RXPPS	set	3620
  2033  0EA4                     _RC4PPS	set	3748
  2034  0EA1                     _RC1PPS	set	3745
  2035                           
  2036                           	psect	stringtext2
  2037  0341                     __pstringtext2:
  2038  0341                     STR_1:
  2039  0341  3425               	retlw	37	;'%'
  2040  0342  3464               	retlw	100	;'d'
  2041  0343  340A               	retlw	10
  2042  0344  3400               	retlw	0
  2043                           
  2044                           	psect	stringtext3
  2045  0000                     __pstringtext3:
  2046                           
  2047                           	psect	cinit
  2048  003C                     start_initialization:	
  2049                           ; #config settings
  2050                           
  2051  003C                     __initialization:
  2052                           
  2053                           ; Clear objects allocated to BANK0
  2054  003C  3020               	movlw	low __pbssBANK0
  2055  003D  0084               	movwf	4
  2056  003E  3000               	movlw	high __pbssBANK0
  2057  003F  0085               	movwf	5
  2058  0040  3024               	movlw	36
  2059  0041  3183  230B  3180   	fcall	clear_ram0
  2060  0044                     end_of_initialization:	
  2061                           ;End of C runtime variable initialization code
  2062                           
  2063  0044                     __end_of__initialization:
  2064  0044  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2065  0045  0020               	movlb	0
  2066  0046  3182  2ADC         	ljmp	_main	;jump to C main() function
  2067                           
  2068                           	psect	bssBANK0
  2069  0020                     __pbssBANK0:
  2070  0020                     _eusartRxStatusBuffer:
  2071  0020                     	ds	8
  2072  0028                     _eusartRxBuffer:
  2073  0028                     	ds	8
  2074  0030                     _eusartTxBuffer:
  2075  0030                     	ds	8
  2076  0038                     _ADC_InterruptHandler:
  2077  0038                     	ds	2
  2078  003A                     _sec:
  2079  003A                     	ds	2
  2080  003C                     _cnt:
  2081  003C                     	ds	2
  2082  003E                     _eusartRxLastError:
  2083  003E                     	ds	1
  2084  003F                     _eusartRxCount:
  2085  003F                     	ds	1
  2086  0040                     _eusartRxTail:
  2087  0040                     	ds	1
  2088  0041                     _eusartRxHead:
  2089  0041                     	ds	1
  2090  0042                     _eusartTxTail:
  2091  0042                     	ds	1
  2092  0043                     _eusartTxHead:
  2093  0043                     	ds	1
  2094                           
  2095                           	psect	clrtext
  2096  030B                     clear_ram0:	
  2097                           ;	Called with FSR0 containing the base address, and
  2098                           ;	WREG with the size to clear
  2099                           
  2100  030B  0064               	clrwdt	;clear the watchdog before getting into this loop
  2101  030C                     clrloop0:
  2102  030C  0180               	clrf	0	;clear RAM location pointed to by FSR
  2103  030D  3101               	addfsr 0,1
  2104  030E  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2105  030F  2B0C               	goto	clrloop0	;have we reached the end yet?
  2106  0310  3400               	retlw	0	;all done for this memory range, return
  2107                           
  2108                           	psect	cstackCOMMON
  2109  0070                     __pcstackCOMMON:
  2110  0070                     ?_TMR2_DefaultInterruptHandler:
  2111  0070                     ?_TMR2_CallBack:	
  2112                           ; 1 bytes @ 0x0
  2113                           
  2114  0070                     ?_OSCILLATOR_Initialize:	
  2115                           ; 1 bytes @ 0x0
  2116                           
  2117  0070                     ?_WDT_Initialize:	
  2118                           ; 1 bytes @ 0x0
  2119                           
  2120  0070                     ?_ADC_Initialize:	
  2121                           ; 1 bytes @ 0x0
  2122                           
  2123  0070                     ?_EUSART_Initialize:	
  2124                           ; 1 bytes @ 0x0
  2125                           
  2126  0070                     ?_EUSART_Receive_ISR:	
  2127                           ; 1 bytes @ 0x0
  2128                           
  2129  0070                     ?_EUSART_Transmit_ISR:	
  2130                           ; 1 bytes @ 0x0
  2131                           
  2132  0070                     ??_EUSART_Transmit_ISR:	
  2133                           ; 1 bytes @ 0x0
  2134                           
  2135  0070                     ?_EUSART_DefaultFramingErrorHandler:	
  2136                           ; 1 bytes @ 0x0
  2137                           
  2138  0070                     ??_EUSART_DefaultFramingErrorHandler:	
  2139                           ; 1 bytes @ 0x0
  2140                           
  2141  0070                     ?_EUSART_DefaultOverrunErrorHandler:	
  2142                           ; 1 bytes @ 0x0
  2143                           
  2144  0070                     ??_EUSART_DefaultOverrunErrorHandler:	
  2145                           ; 1 bytes @ 0x0
  2146                           
  2147  0070                     ?_EUSART_DefaultErrorHandler:	
  2148                           ; 1 bytes @ 0x0
  2149                           
  2150  0070                     ?_EUSART_RxDataHandler:	
  2151                           ; 1 bytes @ 0x0
  2152                           
  2153  0070                     ??_EUSART_RxDataHandler:	
  2154                           ; 1 bytes @ 0x0
  2155                           
  2156  0070                     ?_PIN_MANAGER_Initialize:	
  2157                           ; 1 bytes @ 0x0
  2158                           
  2159  0070                     ?_PWM1_Initialize:	
  2160                           ; 1 bytes @ 0x0
  2161                           
  2162  0070                     ?_TMR2_Initialize:	
  2163                           ; 1 bytes @ 0x0
  2164                           
  2165  0070                     ?_TMR2_ISR:	
  2166                           ; 1 bytes @ 0x0
  2167                           
  2168  0070                     ?_SYSTEM_Initialize:	
  2169                           ; 1 bytes @ 0x0
  2170                           
  2171  0070                     ?_EUSART_Write:	
  2172                           ; 1 bytes @ 0x0
  2173                           
  2174  0070                     ??_EUSART_Write:	
  2175                           ; 1 bytes @ 0x0
  2176                           
  2177  0070                     ?_putch:	
  2178                           ; 1 bytes @ 0x0
  2179                           
  2180  0070                     ?_INTERRUPT_InterruptManager:	
  2181                           ; 1 bytes @ 0x0
  2182                           
  2183  0070                     ?_main:	
  2184                           ; 1 bytes @ 0x0
  2185                           
  2186  0070                     ?___lwdiv:	
  2187                           ; 1 bytes @ 0x0
  2188                           
  2189  0070                     ___lwdiv@divisor:	
  2190                           ; 2 bytes @ 0x0
  2191                           
  2192                           
  2193                           ; 2 bytes @ 0x0
  2194  0070                     	ds	1
  2195  0071                     ??_EUSART_Receive_ISR:
  2196  0071                     ??_EUSART_DefaultErrorHandler:	
  2197                           ; 1 bytes @ 0x1
  2198                           
  2199  0071                     EUSART_Write@txData:	
  2200                           ; 1 bytes @ 0x1
  2201                           
  2202                           
  2203                           ; 1 bytes @ 0x1
  2204  0071                     	ds	1
  2205  0072                     ??_putch:
  2206  0072                     putch@txData:	
  2207                           ; 1 bytes @ 0x2
  2208                           
  2209  0072                     ___lwdiv@dividend:	
  2210                           ; 1 bytes @ 0x2
  2211                           
  2212                           
  2213                           ; 2 bytes @ 0x2
  2214  0072                     	ds	2
  2215  0074                     ??___lwdiv:
  2216                           
  2217                           ; 1 bytes @ 0x4
  2218  0074                     	ds	1
  2219  0075                     ___lwdiv@quotient:
  2220                           
  2221                           ; 2 bytes @ 0x5
  2222  0075                     	ds	2
  2223  0077                     ___lwdiv@counter:
  2224                           
  2225                           ; 1 bytes @ 0x7
  2226  0077                     	ds	1
  2227  0078                     ?___lwmod:
  2228  0078                     ___lwmod@divisor:	
  2229                           ; 2 bytes @ 0x8
  2230                           
  2231                           
  2232                           ; 2 bytes @ 0x8
  2233  0078                     	ds	2
  2234  007A                     ___lwmod@dividend:
  2235                           
  2236                           ; 2 bytes @ 0xA
  2237  007A                     	ds	2
  2238  007C                     ??___lwmod:
  2239                           
  2240                           ; 1 bytes @ 0xC
  2241  007C                     	ds	1
  2242  007D                     ___lwmod@counter:
  2243                           
  2244                           ; 1 bytes @ 0xD
  2245  007D                     	ds	1
  2246  007E                     ??_TMR2_DefaultInterruptHandler:
  2247  007E                     ??_TMR2_CallBack:	
  2248                           ; 1 bytes @ 0xE
  2249                           
  2250  007E                     ??_TMR2_ISR:	
  2251                           ; 1 bytes @ 0xE
  2252                           
  2253  007E                     ??_INTERRUPT_InterruptManager:	
  2254                           ; 1 bytes @ 0xE
  2255                           
  2256                           
  2257                           	psect	cstackBANK0
  2258  0044                     __pcstackBANK0:	
  2259                           ; 1 bytes @ 0xE
  2260                           
  2261  0044                     ?_printf:
  2262  0044                     printf@f:	
  2263                           ; 2 bytes @ 0x0
  2264                           
  2265                           
  2266                           ; 2 bytes @ 0x0
  2267  0044                     	ds	4
  2268  0048                     ??_printf:
  2269                           
  2270                           ; 1 bytes @ 0x4
  2271  0048                     	ds	4
  2272  004C                     printf@ap:
  2273                           
  2274                           ; 1 bytes @ 0x8
  2275  004C                     	ds	1
  2276  004D                     printf@flag:
  2277                           
  2278                           ; 1 bytes @ 0x9
  2279  004D                     	ds	1
  2280  004E                     printf@prec:
  2281                           
  2282                           ; 1 bytes @ 0xA
  2283  004E                     	ds	1
  2284  004F                     printf@val:
  2285                           
  2286                           ; 2 bytes @ 0xB
  2287  004F                     	ds	2
  2288  0051                     printf@c:
  2289                           
  2290                           ; 1 bytes @ 0xD
  2291  0051                     	ds	1
  2292  0052                     ?_TMR2_SetInterruptHandler:
  2293  0052                     ??_OSCILLATOR_Initialize:	
  2294                           ; 1 bytes @ 0xE
  2295                           
  2296  0052                     ??_WDT_Initialize:	
  2297                           ; 1 bytes @ 0xE
  2298                           
  2299  0052                     ??_ADC_Initialize:	
  2300                           ; 1 bytes @ 0xE
  2301                           
  2302  0052                     ?_EUSART_SetRxInterruptHandler:	
  2303                           ; 1 bytes @ 0xE
  2304                           
  2305  0052                     ?_EUSART_SetTxInterruptHandler:	
  2306                           ; 1 bytes @ 0xE
  2307                           
  2308  0052                     ?_EUSART_SetFramingErrorHandler:	
  2309                           ; 1 bytes @ 0xE
  2310                           
  2311  0052                     ?_EUSART_SetOverrunErrorHandler:	
  2312                           ; 1 bytes @ 0xE
  2313                           
  2314  0052                     ?_EUSART_SetErrorHandler:	
  2315                           ; 1 bytes @ 0xE
  2316                           
  2317  0052                     ??_PIN_MANAGER_Initialize:	
  2318                           ; 1 bytes @ 0xE
  2319                           
  2320  0052                     ??_PWM1_Initialize:	
  2321                           ; 1 bytes @ 0xE
  2322                           
  2323  0052                     TMR2_SetInterruptHandler@InterruptHandler:	
  2324                           ; 1 bytes @ 0xE
  2325                           
  2326  0052                     EUSART_SetFramingErrorHandler@interruptHandler:	
  2327                           ; 2 bytes @ 0xE
  2328                           
  2329  0052                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  2330                           ; 2 bytes @ 0xE
  2331                           
  2332  0052                     EUSART_SetErrorHandler@interruptHandler:	
  2333                           ; 2 bytes @ 0xE
  2334                           
  2335  0052                     EUSART_SetTxInterruptHandler@interruptHandler:	
  2336                           ; 2 bytes @ 0xE
  2337                           
  2338  0052                     EUSART_SetRxInterruptHandler@interruptHandler:	
  2339                           ; 2 bytes @ 0xE
  2340                           
  2341                           
  2342                           ; 2 bytes @ 0xE
  2343  0052                     	ds	2
  2344  0054                     ??_TMR2_SetInterruptHandler:
  2345  0054                     ??_EUSART_Initialize:	
  2346                           ; 1 bytes @ 0x10
  2347                           
  2348  0054                     ??_EUSART_SetRxInterruptHandler:	
  2349                           ; 1 bytes @ 0x10
  2350                           
  2351  0054                     ??_EUSART_SetTxInterruptHandler:	
  2352                           ; 1 bytes @ 0x10
  2353                           
  2354  0054                     ??_EUSART_SetFramingErrorHandler:	
  2355                           ; 1 bytes @ 0x10
  2356                           
  2357  0054                     ??_EUSART_SetOverrunErrorHandler:	
  2358                           ; 1 bytes @ 0x10
  2359                           
  2360  0054                     ??_EUSART_SetErrorHandler:	
  2361                           ; 1 bytes @ 0x10
  2362                           
  2363  0054                     ??_TMR2_Initialize:	
  2364                           ; 1 bytes @ 0x10
  2365                           
  2366                           
  2367                           ; 1 bytes @ 0x10
  2368  0054                     	ds	1
  2369  0055                     ??_SYSTEM_Initialize:
  2370  0055                     ??_main:	
  2371                           ; 1 bytes @ 0x11
  2372                           
  2373                           
  2374                           	psect	maintext
  2375  02DC                     __pmaintext:	
  2376                           ; 1 bytes @ 0x11
  2377 ;;
  2378 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2379 ;;
  2380 ;; *************** function _main *****************
  2381 ;; Defined at:
  2382 ;;		line 50 in file "main.c"
  2383 ;; Parameters:    Size  Location     Type
  2384 ;;		None
  2385 ;; Auto vars:     Size  Location     Type
  2386 ;;		None
  2387 ;; Return value:  Size  Location     Type
  2388 ;;                  1    wreg      void 
  2389 ;; Registers used:
  2390 ;;		wreg, status,2, status,0, pclath, cstack
  2391 ;; Tracked objects:
  2392 ;;		On entry : B1F/0
  2393 ;;		On exit  : 0/0
  2394 ;;		Unchanged: 0/0
  2395 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2396 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2397 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2398 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2399 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2400 ;;Total ram usage:        0 bytes
  2401 ;; Hardware stack levels required when called:   10
  2402 ;; This function calls:
  2403 ;;		_SYSTEM_Initialize
  2404 ;; This function is called by:
  2405 ;;		Startup code after reset
  2406 ;; This function uses a non-reentrant model
  2407 ;;
  2408                           
  2409                           
  2410                           ;psect for function _main
  2411  02DC                     _main:
  2412  02DC                     l1714:	
  2413                           ;incstack = 0
  2414                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
  2415                           
  2416                           
  2417                           ;main.c: 52: TXSTAbits.TXEN = 1;
  2418  02DC  0023               	movlb	3	; select bank3
  2419  02DD  169E               	bsf	30,5	;volatile
  2420                           
  2421                           ;main.c: 53: RCSTAbits.SPEN = 1;
  2422  02DE  179D               	bsf	29,7	;volatile
  2423  02DF                     l1716:
  2424                           
  2425                           ;main.c: 56: SYSTEM_Initialize();
  2426  02DF  3182  22A6  3182   	fcall	_SYSTEM_Initialize
  2427  02E2                     l1718:
  2428                           
  2429                           ;main.c: 63: (INTCONbits.GIE = 1);
  2430  02E2  178B               	bsf	11,7	;volatile
  2431  02E3                     l1720:
  2432                           
  2433                           ;main.c: 66: (INTCONbits.PEIE = 1);
  2434  02E3  170B               	bsf	11,6	;volatile
  2435  02E4                     l375:	
  2436                           ;main.c: 74: while (1)
  2437                           
  2438  02E4                     l376:	
  2439                           ;main.c: 75: {
  2440                           
  2441  02E4  2AE4               	goto	l375
  2442  02E5  3180  283A         	ljmp	start
  2443  02E7                     __end_of_main:
  2444                           
  2445                           	psect	text1
  2446  02A6                     __ptext1:	
  2447 ;; *************** function _SYSTEM_Initialize *****************
  2448 ;; Defined at:
  2449 ;;		line 50 in file "mcc_generated_files/mcc.c"
  2450 ;; Parameters:    Size  Location     Type
  2451 ;;		None
  2452 ;; Auto vars:     Size  Location     Type
  2453 ;;		None
  2454 ;; Return value:  Size  Location     Type
  2455 ;;                  1    wreg      void 
  2456 ;; Registers used:
  2457 ;;		wreg, status,2, status,0, pclath, cstack
  2458 ;; Tracked objects:
  2459 ;;		On entry : 0/0
  2460 ;;		On exit  : 0/0
  2461 ;;		Unchanged: 0/0
  2462 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2463 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2464 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2465 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2466 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2467 ;;Total ram usage:        0 bytes
  2468 ;; Hardware stack levels used:    1
  2469 ;; Hardware stack levels required when called:    9
  2470 ;; This function calls:
  2471 ;;		_ADC_Initialize
  2472 ;;		_EUSART_Initialize
  2473 ;;		_OSCILLATOR_Initialize
  2474 ;;		_PIN_MANAGER_Initialize
  2475 ;;		_PWM1_Initialize
  2476 ;;		_TMR2_Initialize
  2477 ;;		_WDT_Initialize
  2478 ;; This function is called by:
  2479 ;;		_main
  2480 ;; This function uses a non-reentrant model
  2481 ;;
  2482                           
  2483                           
  2484                           ;psect for function _SYSTEM_Initialize
  2485  02A6                     _SYSTEM_Initialize:
  2486  02A6                     l1638:	
  2487                           ;incstack = 0
  2488                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2489                           
  2490                           
  2491                           ;mcc.c: 53: PIN_MANAGER_Initialize();
  2492  02A6  3182  2222  3182   	fcall	_PIN_MANAGER_Initialize
  2493                           
  2494                           ;mcc.c: 54: OSCILLATOR_Initialize();
  2495  02A9  3183  2303  3182   	fcall	_OSCILLATOR_Initialize
  2496                           
  2497                           ;mcc.c: 55: WDT_Initialize();
  2498  02AC  3183  2345  3182   	fcall	_WDT_Initialize
  2499                           
  2500                           ;mcc.c: 56: PWM1_Initialize();
  2501  02AF  3182  22F1  3182   	fcall	_PWM1_Initialize
  2502                           
  2503                           ;mcc.c: 57: ADC_Initialize();
  2504  02B2  3182  22FA  3182   	fcall	_ADC_Initialize
  2505                           
  2506                           ;mcc.c: 58: TMR2_Initialize();
  2507  02B5  3182  22BC  3182   	fcall	_TMR2_Initialize
  2508                           
  2509                           ;mcc.c: 59: EUSART_Initialize();
  2510  02B8  3181  210A  3182   	fcall	_EUSART_Initialize
  2511  02BB                     l141:
  2512  02BB  0008               	return
  2513  02BC                     __end_of_SYSTEM_Initialize:
  2514                           
  2515                           	psect	text2
  2516  0345                     __ptext2:	
  2517 ;; *************** function _WDT_Initialize *****************
  2518 ;; Defined at:
  2519 ;;		line 74 in file "mcc_generated_files/mcc.c"
  2520 ;; Parameters:    Size  Location     Type
  2521 ;;		None
  2522 ;; Auto vars:     Size  Location     Type
  2523 ;;		None
  2524 ;; Return value:  Size  Location     Type
  2525 ;;                  1    wreg      void 
  2526 ;; Registers used:
  2527 ;;		wreg
  2528 ;; Tracked objects:
  2529 ;;		On entry : 0/0
  2530 ;;		On exit  : 0/0
  2531 ;;		Unchanged: 0/0
  2532 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2533 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2534 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2535 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2536 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2537 ;;Total ram usage:        0 bytes
  2538 ;; Hardware stack levels used:    1
  2539 ;; Hardware stack levels required when called:    7
  2540 ;; This function calls:
  2541 ;;		Nothing
  2542 ;; This function is called by:
  2543 ;;		_SYSTEM_Initialize
  2544 ;; This function uses a non-reentrant model
  2545 ;;
  2546                           
  2547                           
  2548                           ;psect for function _WDT_Initialize
  2549  0345                     _WDT_Initialize:
  2550  0345                     l1586:	
  2551                           ;incstack = 0
  2552                           ; Regs used in _WDT_Initialize: [wreg]
  2553                           
  2554                           
  2555                           ;mcc.c: 77: WDTCON = 0x16;
  2556  0345  3016               	movlw	22
  2557  0346  0021               	movlb	1	; select bank1
  2558  0347  0097               	movwf	23	;volatile
  2559  0348                     l147:
  2560  0348  0008               	return
  2561  0349                     __end_of_WDT_Initialize:
  2562                           
  2563                           	psect	text3
  2564  02BC                     __ptext3:	
  2565 ;; *************** function _TMR2_Initialize *****************
  2566 ;; Defined at:
  2567 ;;		line 66 in file "mcc_generated_files/tmr2.c"
  2568 ;; Parameters:    Size  Location     Type
  2569 ;;		None
  2570 ;; Auto vars:     Size  Location     Type
  2571 ;;		None
  2572 ;; Return value:  Size  Location     Type
  2573 ;;                  1    wreg      void 
  2574 ;; Registers used:
  2575 ;;		wreg, status,2, status,0, pclath, cstack
  2576 ;; Tracked objects:
  2577 ;;		On entry : 0/0
  2578 ;;		On exit  : 0/0
  2579 ;;		Unchanged: 0/0
  2580 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2581 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2582 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2583 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2584 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2585 ;;Total ram usage:        0 bytes
  2586 ;; Hardware stack levels used:    1
  2587 ;; Hardware stack levels required when called:    8
  2588 ;; This function calls:
  2589 ;;		_TMR2_SetInterruptHandler
  2590 ;; This function is called by:
  2591 ;;		_SYSTEM_Initialize
  2592 ;; This function uses a non-reentrant model
  2593 ;;
  2594                           
  2595                           
  2596                           ;psect for function _TMR2_Initialize
  2597  02BC                     _TMR2_Initialize:
  2598  02BC                     l1562:	
  2599                           ;incstack = 0
  2600                           ; Regs used in _TMR2_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2601                           
  2602                           
  2603                           ;tmr2.c: 71: PR2 = 0x26;
  2604  02BC  3026               	movlw	38
  2605  02BD  0020               	movlb	0	; select bank0
  2606  02BE  009B               	movwf	27	;volatile
  2607  02BF                     l1564:
  2608                           
  2609                           ;tmr2.c: 74: TMR2 = 0x00;
  2610  02BF  019A               	clrf	26	;volatile
  2611  02C0                     l1566:
  2612                           
  2613                           ;tmr2.c: 77: PIR1bits.TMR2IF = 0;
  2614  02C0  1091               	bcf	17,1	;volatile
  2615  02C1                     l1568:
  2616                           
  2617                           ;tmr2.c: 80: PIE1bits.TMR2IE = 1;
  2618  02C1  0021               	movlb	1	; select bank1
  2619  02C2  1491               	bsf	17,1	;volatile
  2620  02C3                     l1570:
  2621                           
  2622                           ;tmr2.c: 83: TMR2_SetInterruptHandler(TMR2_DefaultInterruptHandler);
  2623  02C3  306B               	movlw	low _TMR2_DefaultInterruptHandler
  2624  02C4  0020               	movlb	0	; select bank0
  2625  02C5  00D2               	movwf	TMR2_SetInterruptHandler@InterruptHandler
  2626  02C6  3002               	movlw	high _TMR2_DefaultInterruptHandler
  2627  02C7  00D3               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1
  2628  02C8  3183  2311  3182   	fcall	_TMR2_SetInterruptHandler
  2629  02CB                     l1572:
  2630                           
  2631                           ;tmr2.c: 86: T2CON = 0x1F;
  2632  02CB  301F               	movlw	31
  2633  02CC  0020               	movlb	0	; select bank0
  2634  02CD  009C               	movwf	28	;volatile
  2635  02CE                     l81:
  2636  02CE  0008               	return
  2637  02CF                     __end_of_TMR2_Initialize:
  2638                           
  2639                           	psect	text4
  2640  0311                     __ptext4:	
  2641 ;; *************** function _TMR2_SetInterruptHandler *****************
  2642 ;; Defined at:
  2643 ;;		line 142 in file "mcc_generated_files/tmr2.c"
  2644 ;; Parameters:    Size  Location     Type
  2645 ;;  InterruptHan    2   14[BANK0 ] PTR FTN()void 
  2646 ;;		 -> TMR2_DefaultInterruptHandler(1), 
  2647 ;; Auto vars:     Size  Location     Type
  2648 ;;		None
  2649 ;; Return value:  Size  Location     Type
  2650 ;;                  1    wreg      void 
  2651 ;; Registers used:
  2652 ;;		wreg
  2653 ;; Tracked objects:
  2654 ;;		On entry : 0/0
  2655 ;;		On exit  : 0/0
  2656 ;;		Unchanged: 0/0
  2657 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2658 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2659 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2660 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2661 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2662 ;;Total ram usage:        2 bytes
  2663 ;; Hardware stack levels used:    1
  2664 ;; Hardware stack levels required when called:    7
  2665 ;; This function calls:
  2666 ;;		Nothing
  2667 ;; This function is called by:
  2668 ;;		_TMR2_Initialize
  2669 ;; This function uses a non-reentrant model
  2670 ;;
  2671                           
  2672                           
  2673                           ;psect for function _TMR2_SetInterruptHandler
  2674  0311                     _TMR2_SetInterruptHandler:
  2675  0311                     l1494:	
  2676                           ;incstack = 0
  2677                           ; Regs used in _TMR2_SetInterruptHandler: [wreg]
  2678                           
  2679                           
  2680                           ;tmr2.c: 143: TMR2_InterruptHandler = InterruptHandler;
  2681  0311  0020               	movlb	0	; select bank0
  2682  0312  0853               	movf	TMR2_SetInterruptHandler@InterruptHandler+1,w
  2683  0313  00E0               	movwf	_TMR2_InterruptHandler+1
  2684  0314  0852               	movf	TMR2_SetInterruptHandler@InterruptHandler,w
  2685  0315  00DF               	movwf	_TMR2_InterruptHandler
  2686  0316                     l106:
  2687  0316  0008               	return
  2688  0317                     __end_of_TMR2_SetInterruptHandler:
  2689                           
  2690                           	psect	text5
  2691  02F1                     __ptext5:	
  2692 ;; *************** function _PWM1_Initialize *****************
  2693 ;; Defined at:
  2694 ;;		line 64 in file "mcc_generated_files/pwm1.c"
  2695 ;; Parameters:    Size  Location     Type
  2696 ;;		None
  2697 ;; Auto vars:     Size  Location     Type
  2698 ;;		None
  2699 ;; Return value:  Size  Location     Type
  2700 ;;                  1    wreg      void 
  2701 ;; Registers used:
  2702 ;;		wreg, status,2, status,0
  2703 ;; Tracked objects:
  2704 ;;		On entry : 0/0
  2705 ;;		On exit  : 0/0
  2706 ;;		Unchanged: 0/0
  2707 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2708 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2709 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2710 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2711 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2712 ;;Total ram usage:        0 bytes
  2713 ;; Hardware stack levels used:    1
  2714 ;; Hardware stack levels required when called:    7
  2715 ;; This function calls:
  2716 ;;		Nothing
  2717 ;; This function is called by:
  2718 ;;		_SYSTEM_Initialize
  2719 ;; This function uses a non-reentrant model
  2720 ;;
  2721                           
  2722                           
  2723                           ;psect for function _PWM1_Initialize
  2724  02F1                     _PWM1_Initialize:
  2725  02F1                     l1556:	
  2726                           ;incstack = 0
  2727                           ; Regs used in _PWM1_Initialize: [wreg+status,2+status,0]
  2728                           
  2729                           
  2730                           ;pwm1.c: 69: CCP1CON = 0x1C;
  2731  02F1  301C               	movlw	28
  2732  02F2  0025               	movlb	5	; select bank5
  2733  02F3  0093               	movwf	19	;volatile
  2734                           
  2735                           ;pwm1.c: 72: CCPR1L = 0x3E;
  2736  02F4  303E               	movlw	62
  2737  02F5  0091               	movwf	17	;volatile
  2738  02F6                     l1558:
  2739                           
  2740                           ;pwm1.c: 75: CCPR1H = 0x00;
  2741  02F6  0192               	clrf	18	;volatile
  2742  02F7                     l1560:
  2743                           
  2744                           ;pwm1.c: 78: CCPTMRSbits.C1TSEL = 0x0;
  2745  02F7  30FC               	movlw	-4
  2746  02F8  059E               	andwf	30,f	;volatile
  2747  02F9                     l53:
  2748  02F9  0008               	return
  2749  02FA                     __end_of_PWM1_Initialize:
  2750                           
  2751                           	psect	text6
  2752  0222                     __ptext6:	
  2753 ;; *************** function _PIN_MANAGER_Initialize *****************
  2754 ;; Defined at:
  2755 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  2756 ;; Parameters:    Size  Location     Type
  2757 ;;		None
  2758 ;; Auto vars:     Size  Location     Type
  2759 ;;		None
  2760 ;; Return value:  Size  Location     Type
  2761 ;;                  1    wreg      void 
  2762 ;; Registers used:
  2763 ;;		wreg, status,2
  2764 ;; Tracked objects:
  2765 ;;		On entry : 0/0
  2766 ;;		On exit  : 0/0
  2767 ;;		Unchanged: 0/0
  2768 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2769 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2770 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2771 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2772 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2773 ;;Total ram usage:        0 bytes
  2774 ;; Hardware stack levels used:    1
  2775 ;; Hardware stack levels required when called:    7
  2776 ;; This function calls:
  2777 ;;		Nothing
  2778 ;; This function is called by:
  2779 ;;		_SYSTEM_Initialize
  2780 ;; This function uses a non-reentrant model
  2781 ;;
  2782                           
  2783                           
  2784                           ;psect for function _PIN_MANAGER_Initialize
  2785  0222                     _PIN_MANAGER_Initialize:
  2786  0222                     l1524:	
  2787                           ;incstack = 0
  2788                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  2789                           
  2790                           
  2791                           ;pin_manager.c: 60: LATA = 0x00;
  2792  0222  0022               	movlb	2	; select bank2
  2793  0223  018C               	clrf	12	;volatile
  2794                           
  2795                           ;pin_manager.c: 61: LATC = 0x00;
  2796  0224  018E               	clrf	14	;volatile
  2797  0225                     l1526:
  2798                           
  2799                           ;pin_manager.c: 66: TRISA = 0x06;
  2800  0225  3006               	movlw	6
  2801  0226  0021               	movlb	1	; select bank1
  2802  0227  008C               	movwf	12	;volatile
  2803  0228                     l1528:
  2804                           
  2805                           ;pin_manager.c: 67: TRISC = 0x20;
  2806  0228  3020               	movlw	32
  2807  0229  008E               	movwf	14	;volatile
  2808                           
  2809                           ;pin_manager.c: 72: ANSELC = 0x00;
  2810  022A  0023               	movlb	3	; select bank3
  2811  022B  018E               	clrf	14	;volatile
  2812  022C                     l1530:
  2813                           
  2814                           ;pin_manager.c: 73: ANSELA = 0x06;
  2815  022C  3006               	movlw	6
  2816  022D  008C               	movwf	12	;volatile
  2817  022E                     l1532:
  2818                           
  2819                           ;pin_manager.c: 78: WPUA = 0x00;
  2820  022E  0024               	movlb	4	; select bank4
  2821  022F  018C               	clrf	12	;volatile
  2822  0230                     l1534:
  2823                           
  2824                           ;pin_manager.c: 79: WPUC = 0x00;
  2825  0230  018E               	clrf	14	;volatile
  2826  0231                     l1536:
  2827                           
  2828                           ;pin_manager.c: 80: OPTION_REGbits.nWPUEN = 1;
  2829  0231  0021               	movlb	1	; select bank1
  2830  0232  1795               	bsf	21,7	;volatile
  2831  0233                     l1538:
  2832                           
  2833                           ;pin_manager.c: 85: ODCONA = 0x00;
  2834  0233  0025               	movlb	5	; select bank5
  2835  0234  018C               	clrf	12	;volatile
  2836  0235                     l1540:
  2837                           
  2838                           ;pin_manager.c: 86: ODCONC = 0x00;
  2839  0235  018E               	clrf	14	;volatile
  2840  0236                     l1542:
  2841                           
  2842                           ;pin_manager.c: 91: SLRCONA = 0x37;
  2843  0236  3037               	movlw	55
  2844  0237  0026               	movlb	6	; select bank6
  2845  0238  008C               	movwf	12	;volatile
  2846  0239                     l1544:
  2847                           
  2848                           ;pin_manager.c: 92: SLRCONC = 0x3F;
  2849  0239  303F               	movlw	63
  2850  023A  008E               	movwf	14	;volatile
  2851  023B                     l1546:
  2852                           
  2853                           ;pin_manager.c: 97: INLVLA = 0x3F;
  2854  023B  303F               	movlw	63
  2855  023C  0027               	movlb	7	; select bank7
  2856  023D  008C               	movwf	12	;volatile
  2857  023E                     l1548:
  2858                           
  2859                           ;pin_manager.c: 98: INLVLC = 0x3F;
  2860  023E  303F               	movlw	63
  2861  023F  008E               	movwf	14	;volatile
  2862  0240                     l1550:
  2863                           
  2864                           ;pin_manager.c: 107: RXPPS = 0x15;
  2865  0240  3015               	movlw	21
  2866  0241  003C               	movlb	28	; select bank28
  2867  0242  00A4               	movwf	36	;volatile
  2868  0243                     l1552:
  2869                           
  2870                           ;pin_manager.c: 108: RC1PPS = 0x0C;
  2871  0243  300C               	movlw	12
  2872  0244  003D               	movlb	29	; select bank29
  2873  0245  00A1               	movwf	33	;volatile
  2874  0246                     l1554:
  2875                           
  2876                           ;pin_manager.c: 109: RC4PPS = 0x14;
  2877  0246  3014               	movlw	20
  2878  0247  00A4               	movwf	36	;volatile
  2879  0248                     l39:
  2880  0248  0008               	return
  2881  0249                     __end_of_PIN_MANAGER_Initialize:
  2882                           
  2883                           	psect	text7
  2884  0303                     __ptext7:	
  2885 ;; *************** function _OSCILLATOR_Initialize *****************
  2886 ;; Defined at:
  2887 ;;		line 62 in file "mcc_generated_files/mcc.c"
  2888 ;; Parameters:    Size  Location     Type
  2889 ;;		None
  2890 ;; Auto vars:     Size  Location     Type
  2891 ;;		None
  2892 ;; Return value:  Size  Location     Type
  2893 ;;                  1    wreg      void 
  2894 ;; Registers used:
  2895 ;;		wreg, status,2
  2896 ;; Tracked objects:
  2897 ;;		On entry : 0/0
  2898 ;;		On exit  : 0/0
  2899 ;;		Unchanged: 0/0
  2900 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2901 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2902 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2903 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2904 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2905 ;;Total ram usage:        0 bytes
  2906 ;; Hardware stack levels used:    1
  2907 ;; Hardware stack levels required when called:    7
  2908 ;; This function calls:
  2909 ;;		Nothing
  2910 ;; This function is called by:
  2911 ;;		_SYSTEM_Initialize
  2912 ;; This function uses a non-reentrant model
  2913 ;;
  2914                           
  2915                           
  2916                           ;psect for function _OSCILLATOR_Initialize
  2917  0303                     _OSCILLATOR_Initialize:
  2918  0303                     l1578:	
  2919                           ;incstack = 0
  2920                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  2921                           
  2922                           
  2923                           ;mcc.c: 65: OSCCON = 0x6A;
  2924  0303  306A               	movlw	106
  2925  0304  0021               	movlb	1	; select bank1
  2926  0305  0099               	movwf	25	;volatile
  2927  0306                     l1580:
  2928                           
  2929                           ;mcc.c: 67: OSCSTAT = 0x00;
  2930  0306  019A               	clrf	26	;volatile
  2931  0307                     l1582:
  2932                           
  2933                           ;mcc.c: 69: OSCTUNE = 0x00;
  2934  0307  0198               	clrf	24	;volatile
  2935  0308                     l1584:
  2936                           
  2937                           ;mcc.c: 71: BORCON = 0x00;
  2938  0308  0022               	movlb	2	; select bank2
  2939  0309  0196               	clrf	22	;volatile
  2940  030A                     l144:
  2941  030A  0008               	return
  2942  030B                     __end_of_OSCILLATOR_Initialize:
  2943                           
  2944                           	psect	text8
  2945  010A                     __ptext8:	
  2946 ;; *************** function _EUSART_Initialize *****************
  2947 ;; Defined at:
  2948 ;;		line 88 in file "mcc_generated_files/eusart.c"
  2949 ;; Parameters:    Size  Location     Type
  2950 ;;		None
  2951 ;; Auto vars:     Size  Location     Type
  2952 ;;		None
  2953 ;; Return value:  Size  Location     Type
  2954 ;;                  1    wreg      void 
  2955 ;; Registers used:
  2956 ;;		wreg, status,2, status,0, pclath, cstack
  2957 ;; Tracked objects:
  2958 ;;		On entry : 0/0
  2959 ;;		On exit  : 0/0
  2960 ;;		Unchanged: 0/0
  2961 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2962 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2963 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2964 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2965 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2966 ;;Total ram usage:        1 bytes
  2967 ;; Hardware stack levels used:    1
  2968 ;; Hardware stack levels required when called:    8
  2969 ;; This function calls:
  2970 ;;		_EUSART_SetErrorHandler
  2971 ;;		_EUSART_SetFramingErrorHandler
  2972 ;;		_EUSART_SetOverrunErrorHandler
  2973 ;;		_EUSART_SetRxInterruptHandler
  2974 ;;		_EUSART_SetTxInterruptHandler
  2975 ;; This function is called by:
  2976 ;;		_SYSTEM_Initialize
  2977 ;; This function uses a non-reentrant model
  2978 ;;
  2979                           
  2980                           
  2981                           ;psect for function _EUSART_Initialize
  2982  010A                     _EUSART_Initialize:
  2983  010A                     l1598:	
  2984                           ;incstack = 0
  2985                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2986                           
  2987                           
  2988                           ;eusart.c: 91: PIE1bits.RCIE = 0;
  2989  010A  0021               	movlb	1	; select bank1
  2990  010B  1291               	bcf	17,5	;volatile
  2991  010C                     l1600:
  2992                           
  2993                           ;eusart.c: 92: EUSART_SetRxInterruptHandler(EUSART_Receive_ISR);
  2994  010C  308A               	movlw	low _EUSART_Receive_ISR
  2995  010D  0020               	movlb	0	; select bank0
  2996  010E  00D2               	movwf	EUSART_SetRxInterruptHandler@interruptHandler
  2997  010F  3001               	movlw	high _EUSART_Receive_ISR
  2998  0110  00D3               	movwf	EUSART_SetRxInterruptHandler@interruptHandler+1
  2999  0111  3183  231D  3181   	fcall	_EUSART_SetRxInterruptHandler
  3000  0114                     l1602:
  3001                           
  3002                           ;eusart.c: 93: PIE1bits.TXIE = 0;
  3003  0114  0021               	movlb	1	; select bank1
  3004  0115  1211               	bcf	17,4	;volatile
  3005                           
  3006                           ;eusart.c: 94: EUSART_SetTxInterruptHandler(EUSART_Transmit_ISR);
  3007  0116  3049               	movlw	low _EUSART_Transmit_ISR
  3008  0117  0020               	movlb	0	; select bank0
  3009  0118  00D2               	movwf	EUSART_SetTxInterruptHandler@interruptHandler
  3010  0119  3002               	movlw	high _EUSART_Transmit_ISR
  3011  011A  00D3               	movwf	EUSART_SetTxInterruptHandler@interruptHandler+1
  3012  011B  3183  2317  3181   	fcall	_EUSART_SetTxInterruptHandler
  3013  011E                     l1604:
  3014                           
  3015                           ;eusart.c: 98: BAUD1CON = 0x08;
  3016  011E  3008               	movlw	8
  3017  011F  0023               	movlb	3	; select bank3
  3018  0120  009F               	movwf	31	;volatile
  3019  0121                     l1606:
  3020                           
  3021                           ;eusart.c: 101: RC1STA = 0x90;
  3022  0121  3090               	movlw	144
  3023  0122  009D               	movwf	29	;volatile
  3024  0123                     l1608:
  3025                           
  3026                           ;eusart.c: 104: TX1STA = 0x24;
  3027  0123  3024               	movlw	36
  3028  0124  009E               	movwf	30	;volatile
  3029  0125                     l1610:
  3030                           
  3031                           ;eusart.c: 107: SP1BRGL = 0x67;
  3032  0125  3067               	movlw	103
  3033  0126  009B               	movwf	27	;volatile
  3034  0127                     l1612:
  3035                           
  3036                           ;eusart.c: 110: SP1BRGH = 0x00;
  3037  0127  019C               	clrf	28	;volatile
  3038  0128                     l1614:
  3039                           
  3040                           ;eusart.c: 113: EUSART_SetFramingErrorHandler(EUSART_DefaultFramingErrorHandler);
  3041  0128  3051               	movlw	low _EUSART_DefaultFramingErrorHandler
  3042  0129  0020               	movlb	0	; select bank0
  3043  012A  00D2               	movwf	EUSART_SetFramingErrorHandler@interruptHandler
  3044  012B  3003               	movlw	high _EUSART_DefaultFramingErrorHandler
  3045  012C  00D3               	movwf	EUSART_SetFramingErrorHandler@interruptHandler+1
  3046  012D  3183  2329  3181   	fcall	_EUSART_SetFramingErrorHandler
  3047  0130                     l1616:
  3048                           
  3049                           ;eusart.c: 114: EUSART_SetOverrunErrorHandler(EUSART_DefaultOverrunErrorHandler);
  3050  0130  3049               	movlw	low _EUSART_DefaultOverrunErrorHandler
  3051  0131  0020               	movlb	0	; select bank0
  3052  0132  00D2               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler
  3053  0133  3003               	movlw	high _EUSART_DefaultOverrunErrorHandler
  3054  0134  00D3               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler+1
  3055  0135  3183  2323  3181   	fcall	_EUSART_SetOverrunErrorHandler
  3056  0138                     l1618:
  3057                           
  3058                           ;eusart.c: 115: EUSART_SetErrorHandler(EUSART_DefaultErrorHandler);
  3059  0138  304D               	movlw	low _EUSART_DefaultErrorHandler
  3060  0139  0020               	movlb	0	; select bank0
  3061  013A  00D2               	movwf	EUSART_SetErrorHandler@interruptHandler
  3062  013B  3003               	movlw	high _EUSART_DefaultErrorHandler
  3063  013C  00D3               	movwf	EUSART_SetErrorHandler@interruptHandler+1
  3064  013D  3183  232F  3181   	fcall	_EUSART_SetErrorHandler
  3065                           
  3066                           ;eusart.c: 117: eusartRxLastError.status = 0;
  3067  0140  0020               	movlb	0	; select bank0
  3068  0141  01BE               	clrf	_eusartRxLastError	;volatile
  3069                           
  3070                           ;eusart.c: 120: eusartTxHead = 0;
  3071  0142  01C3               	clrf	_eusartTxHead	;volatile
  3072                           
  3073                           ;eusart.c: 121: eusartTxTail = 0;
  3074  0143  01C2               	clrf	_eusartTxTail	;volatile
  3075  0144                     l1620:
  3076                           
  3077                           ;eusart.c: 122: eusartTxBufferRemaining = sizeof(eusartTxBuffer);
  3078  0144  3008               	movlw	8
  3079  0145  00D4               	movwf	??_EUSART_Initialize
  3080  0146  0854               	movf	??_EUSART_Initialize,w
  3081  0147  00E1               	movwf	_eusartTxBufferRemaining	;volatile
  3082  0148                     l1622:
  3083                           
  3084                           ;eusart.c: 124: eusartRxHead = 0;
  3085  0148  01C1               	clrf	_eusartRxHead	;volatile
  3086  0149                     l1624:
  3087                           
  3088                           ;eusart.c: 125: eusartRxTail = 0;
  3089  0149  01C0               	clrf	_eusartRxTail	;volatile
  3090  014A                     l1626:
  3091                           
  3092                           ;eusart.c: 126: eusartRxCount = 0;
  3093  014A  01BF               	clrf	_eusartRxCount	;volatile
  3094  014B                     l1628:
  3095                           
  3096                           ;eusart.c: 129: PIE1bits.RCIE = 1;
  3097  014B  0021               	movlb	1	; select bank1
  3098  014C  1691               	bsf	17,5	;volatile
  3099  014D                     l262:
  3100  014D  0008               	return
  3101  014E                     __end_of_EUSART_Initialize:
  3102                           
  3103                           	psect	text9
  3104  0317                     __ptext9:	
  3105 ;; *************** function _EUSART_SetTxInterruptHandler *****************
  3106 ;; Defined at:
  3107 ;;		line 285 in file "mcc_generated_files/eusart.c"
  3108 ;; Parameters:    Size  Location     Type
  3109 ;;  interruptHan    2   14[BANK0 ] PTR FTN()void 
  3110 ;;		 -> EUSART_Transmit_ISR(1), 
  3111 ;; Auto vars:     Size  Location     Type
  3112 ;;		None
  3113 ;; Return value:  Size  Location     Type
  3114 ;;                  1    wreg      void 
  3115 ;; Registers used:
  3116 ;;		wreg
  3117 ;; Tracked objects:
  3118 ;;		On entry : 0/0
  3119 ;;		On exit  : 0/0
  3120 ;;		Unchanged: 0/0
  3121 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3122 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3123 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3124 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3125 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3126 ;;Total ram usage:        2 bytes
  3127 ;; Hardware stack levels used:    1
  3128 ;; Hardware stack levels required when called:    7
  3129 ;; This function calls:
  3130 ;;		Nothing
  3131 ;; This function is called by:
  3132 ;;		_EUSART_Initialize
  3133 ;; This function uses a non-reentrant model
  3134 ;;
  3135                           
  3136                           
  3137                           ;psect for function _EUSART_SetTxInterruptHandler
  3138  0317                     _EUSART_SetTxInterruptHandler:
  3139  0317                     l1506:	
  3140                           ;incstack = 0
  3141                           ; Regs used in _EUSART_SetTxInterruptHandler: [wreg]
  3142                           
  3143                           
  3144                           ;eusart.c: 286: EUSART_TxDefaultInterruptHandler = interruptHandler;
  3145  0317  0020               	movlb	0	; select bank0
  3146  0318  0853               	movf	EUSART_SetTxInterruptHandler@interruptHandler+1,w
  3147  0319  00DE               	movwf	_EUSART_TxDefaultInterruptHandler+1
  3148  031A  0852               	movf	EUSART_SetTxInterruptHandler@interruptHandler,w
  3149  031B  00DD               	movwf	_EUSART_TxDefaultInterruptHandler
  3150  031C                     l334:
  3151  031C  0008               	return
  3152  031D                     __end_of_EUSART_SetTxInterruptHandler:
  3153                           
  3154                           	psect	text10
  3155  031D                     __ptext10:	
  3156 ;; *************** function _EUSART_SetRxInterruptHandler *****************
  3157 ;; Defined at:
  3158 ;;		line 289 in file "mcc_generated_files/eusart.c"
  3159 ;; Parameters:    Size  Location     Type
  3160 ;;  interruptHan    2   14[BANK0 ] PTR FTN()void 
  3161 ;;		 -> EUSART_Receive_ISR(1), 
  3162 ;; Auto vars:     Size  Location     Type
  3163 ;;		None
  3164 ;; Return value:  Size  Location     Type
  3165 ;;                  1    wreg      void 
  3166 ;; Registers used:
  3167 ;;		wreg
  3168 ;; Tracked objects:
  3169 ;;		On entry : 0/0
  3170 ;;		On exit  : 0/0
  3171 ;;		Unchanged: 0/0
  3172 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3173 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3174 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3175 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3176 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3177 ;;Total ram usage:        2 bytes
  3178 ;; Hardware stack levels used:    1
  3179 ;; Hardware stack levels required when called:    7
  3180 ;; This function calls:
  3181 ;;		Nothing
  3182 ;; This function is called by:
  3183 ;;		_EUSART_Initialize
  3184 ;; This function uses a non-reentrant model
  3185 ;;
  3186                           
  3187                           
  3188                           ;psect for function _EUSART_SetRxInterruptHandler
  3189  031D                     _EUSART_SetRxInterruptHandler:
  3190  031D                     l1504:	
  3191                           ;incstack = 0
  3192                           ; Regs used in _EUSART_SetRxInterruptHandler: [wreg]
  3193                           
  3194                           
  3195                           ;eusart.c: 290: EUSART_RxDefaultInterruptHandler = interruptHandler;
  3196  031D  0020               	movlb	0	; select bank0
  3197  031E  0853               	movf	EUSART_SetRxInterruptHandler@interruptHandler+1,w
  3198  031F  00DC               	movwf	_EUSART_RxDefaultInterruptHandler+1
  3199  0320  0852               	movf	EUSART_SetRxInterruptHandler@interruptHandler,w
  3200  0321  00DB               	movwf	_EUSART_RxDefaultInterruptHandler
  3201  0322                     l337:
  3202  0322  0008               	return
  3203  0323                     __end_of_EUSART_SetRxInterruptHandler:
  3204                           
  3205                           	psect	text11
  3206  0323                     __ptext11:	
  3207 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  3208 ;; Defined at:
  3209 ;;		line 277 in file "mcc_generated_files/eusart.c"
  3210 ;; Parameters:    Size  Location     Type
  3211 ;;  interruptHan    2   14[BANK0 ] PTR FTN()void 
  3212 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  3213 ;; Auto vars:     Size  Location     Type
  3214 ;;		None
  3215 ;; Return value:  Size  Location     Type
  3216 ;;                  1    wreg      void 
  3217 ;; Registers used:
  3218 ;;		wreg
  3219 ;; Tracked objects:
  3220 ;;		On entry : 0/0
  3221 ;;		On exit  : 0/0
  3222 ;;		Unchanged: 0/0
  3223 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3224 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3225 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3226 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3227 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3228 ;;Total ram usage:        2 bytes
  3229 ;; Hardware stack levels used:    1
  3230 ;; Hardware stack levels required when called:    7
  3231 ;; This function calls:
  3232 ;;		Nothing
  3233 ;; This function is called by:
  3234 ;;		_EUSART_Initialize
  3235 ;; This function uses a non-reentrant model
  3236 ;;
  3237                           
  3238                           
  3239                           ;psect for function _EUSART_SetOverrunErrorHandler
  3240  0323                     _EUSART_SetOverrunErrorHandler:
  3241  0323                     l1510:	
  3242                           ;incstack = 0
  3243                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
  3244                           
  3245                           
  3246                           ;eusart.c: 278: EUSART_OverrunErrorHandler = interruptHandler;
  3247  0323  0020               	movlb	0	; select bank0
  3248  0324  0853               	movf	EUSART_SetOverrunErrorHandler@interruptHandler+1,w
  3249  0325  00D8               	movwf	_EUSART_OverrunErrorHandler+1
  3250  0326  0852               	movf	EUSART_SetOverrunErrorHandler@interruptHandler,w
  3251  0327  00D7               	movwf	_EUSART_OverrunErrorHandler
  3252  0328                     l328:
  3253  0328  0008               	return
  3254  0329                     __end_of_EUSART_SetOverrunErrorHandler:
  3255                           
  3256                           	psect	text12
  3257  0329                     __ptext12:	
  3258 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  3259 ;; Defined at:
  3260 ;;		line 273 in file "mcc_generated_files/eusart.c"
  3261 ;; Parameters:    Size  Location     Type
  3262 ;;  interruptHan    2   14[BANK0 ] PTR FTN()void 
  3263 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  3264 ;; Auto vars:     Size  Location     Type
  3265 ;;		None
  3266 ;; Return value:  Size  Location     Type
  3267 ;;                  1    wreg      void 
  3268 ;; Registers used:
  3269 ;;		wreg
  3270 ;; Tracked objects:
  3271 ;;		On entry : 0/0
  3272 ;;		On exit  : 0/0
  3273 ;;		Unchanged: 0/0
  3274 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3275 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3276 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3277 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3278 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3279 ;;Total ram usage:        2 bytes
  3280 ;; Hardware stack levels used:    1
  3281 ;; Hardware stack levels required when called:    7
  3282 ;; This function calls:
  3283 ;;		Nothing
  3284 ;; This function is called by:
  3285 ;;		_EUSART_Initialize
  3286 ;; This function uses a non-reentrant model
  3287 ;;
  3288                           
  3289                           
  3290                           ;psect for function _EUSART_SetFramingErrorHandler
  3291  0329                     _EUSART_SetFramingErrorHandler:
  3292  0329                     l1508:	
  3293                           ;incstack = 0
  3294                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
  3295                           
  3296                           
  3297                           ;eusart.c: 274: EUSART_FramingErrorHandler = interruptHandler;
  3298  0329  0020               	movlb	0	; select bank0
  3299  032A  0853               	movf	EUSART_SetFramingErrorHandler@interruptHandler+1,w
  3300  032B  00DA               	movwf	_EUSART_FramingErrorHandler+1
  3301  032C  0852               	movf	EUSART_SetFramingErrorHandler@interruptHandler,w
  3302  032D  00D9               	movwf	_EUSART_FramingErrorHandler
  3303  032E                     l325:
  3304  032E  0008               	return
  3305  032F                     __end_of_EUSART_SetFramingErrorHandler:
  3306                           
  3307                           	psect	text13
  3308  032F                     __ptext13:	
  3309 ;; *************** function _EUSART_SetErrorHandler *****************
  3310 ;; Defined at:
  3311 ;;		line 281 in file "mcc_generated_files/eusart.c"
  3312 ;; Parameters:    Size  Location     Type
  3313 ;;  interruptHan    2   14[BANK0 ] PTR FTN()void 
  3314 ;;		 -> EUSART_DefaultErrorHandler(1), 
  3315 ;; Auto vars:     Size  Location     Type
  3316 ;;		None
  3317 ;; Return value:  Size  Location     Type
  3318 ;;                  1    wreg      void 
  3319 ;; Registers used:
  3320 ;;		wreg
  3321 ;; Tracked objects:
  3322 ;;		On entry : 0/0
  3323 ;;		On exit  : 0/0
  3324 ;;		Unchanged: 0/0
  3325 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3326 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3327 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3328 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3329 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3330 ;;Total ram usage:        2 bytes
  3331 ;; Hardware stack levels used:    1
  3332 ;; Hardware stack levels required when called:    7
  3333 ;; This function calls:
  3334 ;;		Nothing
  3335 ;; This function is called by:
  3336 ;;		_EUSART_Initialize
  3337 ;; This function uses a non-reentrant model
  3338 ;;
  3339                           
  3340                           
  3341                           ;psect for function _EUSART_SetErrorHandler
  3342  032F                     _EUSART_SetErrorHandler:
  3343  032F                     l1512:	
  3344                           ;incstack = 0
  3345                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
  3346                           
  3347                           
  3348                           ;eusart.c: 282: EUSART_ErrorHandler = interruptHandler;
  3349  032F  0020               	movlb	0	; select bank0
  3350  0330  0853               	movf	EUSART_SetErrorHandler@interruptHandler+1,w
  3351  0331  00D6               	movwf	_EUSART_ErrorHandler+1
  3352  0332  0852               	movf	EUSART_SetErrorHandler@interruptHandler,w
  3353  0333  00D5               	movwf	_EUSART_ErrorHandler
  3354  0334                     l331:
  3355  0334  0008               	return
  3356  0335                     __end_of_EUSART_SetErrorHandler:
  3357                           
  3358                           	psect	text14
  3359  02FA                     __ptext14:	
  3360 ;; *************** function _ADC_Initialize *****************
  3361 ;; Defined at:
  3362 ;;		line 67 in file "mcc_generated_files/adc.c"
  3363 ;; Parameters:    Size  Location     Type
  3364 ;;		None
  3365 ;; Auto vars:     Size  Location     Type
  3366 ;;		None
  3367 ;; Return value:  Size  Location     Type
  3368 ;;                  1    wreg      void 
  3369 ;; Registers used:
  3370 ;;		wreg, status,2
  3371 ;; Tracked objects:
  3372 ;;		On entry : 0/0
  3373 ;;		On exit  : 0/0
  3374 ;;		Unchanged: 0/0
  3375 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3376 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3377 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3378 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3379 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3380 ;;Total ram usage:        0 bytes
  3381 ;; Hardware stack levels used:    1
  3382 ;; Hardware stack levels required when called:    7
  3383 ;; This function calls:
  3384 ;;		Nothing
  3385 ;; This function is called by:
  3386 ;;		_SYSTEM_Initialize
  3387 ;; This function uses a non-reentrant model
  3388 ;;
  3389                           
  3390                           
  3391                           ;psect for function _ADC_Initialize
  3392  02FA                     _ADC_Initialize:
  3393  02FA                     l1588:	
  3394                           ;incstack = 0
  3395                           ; Regs used in _ADC_Initialize: [wreg+status,2]
  3396                           
  3397                           
  3398                           ;adc.c: 72: ADCON1 = 0x42;
  3399  02FA  3042               	movlw	66
  3400  02FB  0021               	movlb	1	; select bank1
  3401  02FC  009E               	movwf	30	;volatile
  3402  02FD                     l1590:
  3403                           
  3404                           ;adc.c: 75: ADCON2 = 0x00;
  3405  02FD  019F               	clrf	31	;volatile
  3406  02FE                     l1592:
  3407                           
  3408                           ;adc.c: 78: ADRESL = 0x00;
  3409  02FE  019B               	clrf	27	;volatile
  3410  02FF                     l1594:
  3411                           
  3412                           ;adc.c: 81: ADRESH = 0x00;
  3413  02FF  019C               	clrf	28	;volatile
  3414  0300                     l1596:
  3415                           
  3416                           ;adc.c: 84: ADCON0 = 0x01;
  3417  0300  3001               	movlw	1
  3418  0301  009D               	movwf	29	;volatile
  3419  0302                     l166:
  3420  0302  0008               	return
  3421  0303                     __end_of_ADC_Initialize:
  3422                           
  3423                           	psect	intentry
  3424  0004                     __pintentry:	
  3425 ;; *************** function _INTERRUPT_InterruptManager *****************
  3426 ;; Defined at:
  3427 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  3428 ;; Parameters:    Size  Location     Type
  3429 ;;		None
  3430 ;; Auto vars:     Size  Location     Type
  3431 ;;		None
  3432 ;; Return value:  Size  Location     Type
  3433 ;;                  1    wreg      void 
  3434 ;; Registers used:
  3435 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3436 ;; Tracked objects:
  3437 ;;		On entry : 0/0
  3438 ;;		On exit  : 0/0
  3439 ;;		Unchanged: 0/0
  3440 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3441 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3442 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3443 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3444 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3445 ;;Total ram usage:        0 bytes
  3446 ;; Hardware stack levels used:    1
  3447 ;; Hardware stack levels required when called:    6
  3448 ;; This function calls:
  3449 ;;		Absolute function
  3450 ;;		_EUSART_Receive_ISR
  3451 ;;		_EUSART_Transmit_ISR
  3452 ;;		_TMR2_ISR
  3453 ;; This function is called by:
  3454 ;;		Interrupt level 1
  3455 ;; This function uses a non-reentrant model
  3456 ;;
  3457                           
  3458  0004                     _INTERRUPT_InterruptManager:
  3459                           
  3460                           ;incstack = 0
  3461  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  3462                           
  3463                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3464  0005  3180               	pagesel	$
  3465  0006                     i1l1698:
  3466                           
  3467                           ;interrupt_manager.c: 55: if(INTCONbits.PEIE == 1)
  3468  0006  1F0B               	btfss	11,6	;volatile
  3469  0007  2809               	goto	u76_21
  3470  0008  280A               	goto	u76_20
  3471  0009                     u76_21:
  3472  0009  2838               	goto	i1l362
  3473  000A                     u76_20:
  3474  000A                     i1l1700:
  3475                           
  3476                           ;interrupt_manager.c: 56: {;interrupt_manager.c: 57: if(PIE1bits.TXIE == 1 && PIR1bits.T
      +                          XIF == 1)
  3477  000A  0021               	movlb	1	; select bank1
  3478  000B  1E11               	btfss	17,4	;volatile
  3479  000C  280E               	goto	u77_21
  3480  000D  280F               	goto	u77_20
  3481  000E                     u77_21:
  3482  000E  281A               	goto	i1l355
  3483  000F                     u77_20:
  3484  000F                     i1l1702:
  3485  000F  0020               	movlb	0	; select bank0
  3486  0010  1E11               	btfss	17,4	;volatile
  3487  0011  2813               	goto	u78_21
  3488  0012  2814               	goto	u78_20
  3489  0013                     u78_21:
  3490  0013  281A               	goto	i1l355
  3491  0014                     u78_20:
  3492  0014                     i1l1704:
  3493                           
  3494                           ;interrupt_manager.c: 58: {;interrupt_manager.c: 59: EUSART_TxDefaultInterruptHandler();
  3495  0014  085E               	movf	_EUSART_TxDefaultInterruptHandler+1,w
  3496  0015  008A               	movwf	10
  3497  0016  085D               	movf	_EUSART_TxDefaultInterruptHandler,w
  3498  0017  000A               	callw
  3499  0018  3180               	pagesel	$
  3500                           
  3501                           ;interrupt_manager.c: 60: }
  3502  0019  2838               	goto	i1l362
  3503  001A                     i1l355:
  3504                           
  3505                           ;interrupt_manager.c: 61: else if(PIE1bits.RCIE == 1 && PIR1bits.RCIF == 1)
  3506  001A  0021               	movlb	1	; select bank1
  3507  001B  1E91               	btfss	17,5	;volatile
  3508  001C  281E               	goto	u79_21
  3509  001D  281F               	goto	u79_20
  3510  001E                     u79_21:
  3511  001E  282A               	goto	i1l357
  3512  001F                     u79_20:
  3513  001F                     i1l1706:
  3514  001F  0020               	movlb	0	; select bank0
  3515  0020  1E91               	btfss	17,5	;volatile
  3516  0021  2823               	goto	u80_21
  3517  0022  2824               	goto	u80_20
  3518  0023                     u80_21:
  3519  0023  282A               	goto	i1l357
  3520  0024                     u80_20:
  3521  0024                     i1l1708:
  3522                           
  3523                           ;interrupt_manager.c: 62: {;interrupt_manager.c: 63: EUSART_RxDefaultInterruptHandler();
  3524  0024  085C               	movf	_EUSART_RxDefaultInterruptHandler+1,w
  3525  0025  008A               	movwf	10
  3526  0026  085B               	movf	_EUSART_RxDefaultInterruptHandler,w
  3527  0027  000A               	callw
  3528  0028  3180               	pagesel	$
  3529                           
  3530                           ;interrupt_manager.c: 64: }
  3531  0029  2838               	goto	i1l362
  3532  002A                     i1l357:
  3533                           
  3534                           ;interrupt_manager.c: 65: else if(PIE1bits.TMR2IE == 1 && PIR1bits.TMR2IF == 1)
  3535  002A  0021               	movlb	1	; select bank1
  3536  002B  1C91               	btfss	17,1	;volatile
  3537  002C  282E               	goto	u81_21
  3538  002D  282F               	goto	u81_20
  3539  002E                     u81_21:
  3540  002E  2838               	goto	i1l356
  3541  002F                     u81_20:
  3542  002F                     i1l1710:
  3543  002F  0020               	movlb	0	; select bank0
  3544  0030  1C91               	btfss	17,1	;volatile
  3545  0031  2833               	goto	u82_21
  3546  0032  2834               	goto	u82_20
  3547  0033                     u82_21:
  3548  0033  2838               	goto	i1l356
  3549  0034                     u82_20:
  3550  0034                     i1l1712:
  3551                           
  3552                           ;interrupt_manager.c: 66: {;interrupt_manager.c: 67: TMR2_ISR();
  3553  0034  3183  2335  3180   	fcall	_TMR2_ISR
  3554                           
  3555                           ;interrupt_manager.c: 68: }
  3556  0037  2838               	goto	i1l362
  3557  0038                     i1l356:
  3558  0038                     i1l362:	
  3559                           ;interrupt_manager.c: 72: };interrupt_manager.c: 73: }
  3560                           
  3561  0038  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3562  0039  0009               	retfie
  3563  003A                     __end_of_INTERRUPT_InterruptManager:
  3564                           
  3565                           	psect	text16
  3566  0335                     __ptext16:	
  3567 ;; *************** function _TMR2_ISR *****************
  3568 ;; Defined at:
  3569 ;;		line 121 in file "mcc_generated_files/tmr2.c"
  3570 ;; Parameters:    Size  Location     Type
  3571 ;;		None
  3572 ;; Auto vars:     Size  Location     Type
  3573 ;;		None
  3574 ;; Return value:  Size  Location     Type
  3575 ;;                  1    wreg      void 
  3576 ;; Registers used:
  3577 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3578 ;; Tracked objects:
  3579 ;;		On entry : 0/0
  3580 ;;		On exit  : 0/0
  3581 ;;		Unchanged: 0/0
  3582 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3583 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3584 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3585 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3586 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3587 ;;Total ram usage:        0 bytes
  3588 ;; Hardware stack levels used:    1
  3589 ;; Hardware stack levels required when called:    5
  3590 ;; This function calls:
  3591 ;;		_TMR2_CallBack
  3592 ;; This function is called by:
  3593 ;;		_INTERRUPT_InterruptManager
  3594 ;; This function uses a non-reentrant model
  3595 ;;
  3596                           
  3597                           
  3598                           ;psect for function _TMR2_ISR
  3599  0335                     _TMR2_ISR:
  3600  0335                     i1l1634:	
  3601                           ;incstack = 0
  3602                           ; Regs used in _TMR2_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3603                           
  3604                           
  3605                           ;tmr2.c: 125: PIR1bits.TMR2IF = 0;
  3606  0335  0020               	movlb	0	; select bank0
  3607  0336  1091               	bcf	17,1	;volatile
  3608  0337                     i1l1636:
  3609                           
  3610                           ;tmr2.c: 129: TMR2_CallBack();
  3611  0337  3182  22CF  3183   	fcall	_TMR2_CallBack
  3612  033A                     i1l99:
  3613  033A  0008               	return
  3614  033B                     __end_of_TMR2_ISR:
  3615                           
  3616                           	psect	text17
  3617  02CF                     __ptext17:	
  3618 ;; *************** function _TMR2_CallBack *****************
  3619 ;; Defined at:
  3620 ;;		line 132 in file "mcc_generated_files/tmr2.c"
  3621 ;; Parameters:    Size  Location     Type
  3622 ;;		None
  3623 ;; Auto vars:     Size  Location     Type
  3624 ;;		None
  3625 ;; Return value:  Size  Location     Type
  3626 ;;                  1    wreg      void 
  3627 ;; Registers used:
  3628 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3629 ;; Tracked objects:
  3630 ;;		On entry : 0/0
  3631 ;;		On exit  : 0/0
  3632 ;;		Unchanged: 0/0
  3633 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3634 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3635 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3636 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3637 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3638 ;;Total ram usage:        0 bytes
  3639 ;; Hardware stack levels used:    1
  3640 ;; Hardware stack levels required when called:    4
  3641 ;; This function calls:
  3642 ;;		Absolute function
  3643 ;;		_TMR2_DefaultInterruptHandler
  3644 ;; This function is called by:
  3645 ;;		_TMR2_ISR
  3646 ;; This function uses a non-reentrant model
  3647 ;;
  3648                           
  3649                           
  3650                           ;psect for function _TMR2_CallBack
  3651  02CF                     _TMR2_CallBack:
  3652  02CF                     i1l1574:	
  3653                           ;incstack = 0
  3654                           ; Regs used in _TMR2_CallBack: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3655                           
  3656                           
  3657                           ;tmr2.c: 136: if(TMR2_InterruptHandler)
  3658  02CF  0020               	movlb	0	; select bank0
  3659  02D0  085F               	movf	_TMR2_InterruptHandler,w
  3660  02D1  0460               	iorwf	_TMR2_InterruptHandler+1,w
  3661  02D2  1903               	btfsc	3,2
  3662  02D3  2AD5               	goto	u68_21
  3663  02D4  2AD6               	goto	u68_20
  3664  02D5                     u68_21:
  3665  02D5  2ADB               	goto	i1l103
  3666  02D6                     u68_20:
  3667  02D6                     i1l1576:
  3668                           
  3669                           ;tmr2.c: 137: {;tmr2.c: 138: TMR2_InterruptHandler();
  3670  02D6  0860               	movf	_TMR2_InterruptHandler+1,w
  3671  02D7  008A               	movwf	10
  3672  02D8  085F               	movf	_TMR2_InterruptHandler,w
  3673  02D9  000A               	callw
  3674  02DA  3182               	pagesel	$
  3675  02DB                     i1l103:
  3676  02DB  0008               	return
  3677  02DC                     __end_of_TMR2_CallBack:
  3678                           
  3679                           	psect	text18
  3680  026B                     __ptext18:	
  3681 ;; *************** function _TMR2_DefaultInterruptHandler *****************
  3682 ;; Defined at:
  3683 ;;		line 151 in file "mcc_generated_files/tmr2.c"
  3684 ;; Parameters:    Size  Location     Type
  3685 ;;		None
  3686 ;; Auto vars:     Size  Location     Type
  3687 ;;		None
  3688 ;; Return value:  Size  Location     Type
  3689 ;;                  1    wreg      void 
  3690 ;; Registers used:
  3691 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3692 ;; Tracked objects:
  3693 ;;		On entry : 0/0
  3694 ;;		On exit  : 0/0
  3695 ;;		Unchanged: 0/0
  3696 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3697 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3698 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3699 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3700 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3701 ;;Total ram usage:        0 bytes
  3702 ;; Hardware stack levels used:    1
  3703 ;; Hardware stack levels required when called:    3
  3704 ;; This function calls:
  3705 ;;		_printf
  3706 ;; This function is called by:
  3707 ;;		_TMR2_Initialize
  3708 ;;		_TMR2_CallBack
  3709 ;; This function uses a non-reentrant model
  3710 ;;
  3711                           
  3712                           
  3713                           ;psect for function _TMR2_DefaultInterruptHandler
  3714  026B                     _TMR2_DefaultInterruptHandler:
  3715  026B                     i1l1496:	
  3716                           ;incstack = 0
  3717                           ; Regs used in _TMR2_DefaultInterruptHandler: [wreg-fsr1h+status,2+status,0+pclath+cstac
      +                          k]
  3718                           
  3719                           
  3720                           ;tmr2.c: 155: cnt++;
  3721  026B  3001               	movlw	1
  3722  026C  0020               	movlb	0	; select bank0
  3723  026D  07BC               	addwf	_cnt,f
  3724  026E  3000               	movlw	0
  3725  026F  3DBD               	addwfc	_cnt+1,f
  3726                           
  3727                           ;tmr2.c: 157: if (cnt >= 390) {
  3728  0270  3001               	movlw	1
  3729  0271  023D               	subwf	_cnt+1,w
  3730  0272  3086               	movlw	134
  3731  0273  1903               	skipnz
  3732  0274  023C               	subwf	_cnt,w
  3733  0275  1C03               	skipc
  3734  0276  2A78               	goto	u66_21
  3735  0277  2A79               	goto	u66_20
  3736  0278                     u66_21:
  3737  0278  2A8B               	goto	i1l114
  3738  0279                     u66_20:
  3739  0279                     i1l1498:
  3740                           
  3741                           ;tmr2.c: 158: printf("%d\n", sec);
  3742  0279  3041               	movlw	low (STR_1| (0+32768))
  3743  027A  00C4               	movwf	printf@f
  3744  027B  3083               	movlw	high (STR_1| (0+32768))
  3745  027C  00C5               	movwf	printf@f+1
  3746  027D  083B               	movf	_sec+1,w
  3747  027E  00C7               	movwf	?_printf+3
  3748  027F  083A               	movf	_sec,w
  3749  0280  00C6               	movwf	?_printf+2
  3750  0281  3180  2048  3182   	fcall	_printf
  3751  0284                     i1l1500:
  3752                           
  3753                           ;tmr2.c: 159: sec++;
  3754  0284  3001               	movlw	1
  3755  0285  0020               	movlb	0	; select bank0
  3756  0286  07BA               	addwf	_sec,f
  3757  0287  3000               	movlw	0
  3758  0288  3DBB               	addwfc	_sec+1,f
  3759  0289                     i1l1502:
  3760                           
  3761                           ;tmr2.c: 160: cnt = 0;
  3762  0289  01BC               	clrf	_cnt
  3763  028A  01BD               	clrf	_cnt+1
  3764  028B                     i1l114:
  3765  028B  0008               	return
  3766  028C                     __end_of_TMR2_DefaultInterruptHandler:
  3767                           
  3768                           	psect	text19
  3769  0048                     __ptext19:	
  3770 ;; *************** function _printf *****************
  3771 ;; Defined at:
  3772 ;;		line 477 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  3773 ;; Parameters:    Size  Location     Type
  3774 ;;  f               2    0[BANK0 ] PTR const unsigned char 
  3775 ;;		 -> STR_1(4), 
  3776 ;; Auto vars:     Size  Location     Type
  3777 ;;  tmpval          4    0        struct .
  3778 ;;  val             2   11[BANK0 ] unsigned int 
  3779 ;;  cp              2    0        PTR const unsigned char 
  3780 ;;  len             2    0        unsigned int 
  3781 ;;  c               1   13[BANK0 ] unsigned char 
  3782 ;;  prec            1   10[BANK0 ] char 
  3783 ;;  flag            1    9[BANK0 ] unsigned char 
  3784 ;;  ap              1    8[BANK0 ] PTR void [1]
  3785 ;;		 -> ?_printf(2), 
  3786 ;; Return value:  Size  Location     Type
  3787 ;;                  2    0[BANK0 ] int 
  3788 ;; Registers used:
  3789 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3790 ;; Tracked objects:
  3791 ;;		On entry : 0/0
  3792 ;;		On exit  : 0/0
  3793 ;;		Unchanged: 0/0
  3794 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3795 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3796 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3797 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3798 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3799 ;;Total ram usage:       14 bytes
  3800 ;; Hardware stack levels used:    1
  3801 ;; Hardware stack levels required when called:    2
  3802 ;; This function calls:
  3803 ;;		___lwdiv
  3804 ;;		___lwmod
  3805 ;;		_putch
  3806 ;; This function is called by:
  3807 ;;		_TMR2_DefaultInterruptHandler
  3808 ;; This function uses a non-reentrant model
  3809 ;;
  3810                           
  3811                           
  3812                           ;psect for function _printf
  3813  0048                     _printf:
  3814  0048                     i1l1446:	
  3815                           ;incstack = 0
  3816                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3817                           
  3818                           
  3819                           ;doprnt.c: 479: va_list ap;;doprnt.c: 512: char c;;doprnt.c: 521: signed char prec;;dopr
      +                          nt.c: 525: unsigned char flag;;doprnt.c: 540: union {;doprnt.c: 541: unsigned long vd;;d
      +                          oprnt.c: 542: double integ;;doprnt.c: 543: } tmpval;;doprnt.c: 545: unsigned int val;;do
      +                          prnt.c: 546: unsigned len;;doprnt.c: 547: const char * cp;;doprnt.c: 550: *ap = __va_sta
      +                          rt();
  3820  0048  3046               	movlw	(low ((?_printf| 0+2)))& (0+255)
  3821  0049  0020               	movlb	0	; select bank0
  3822  004A  00C8               	movwf	??_printf
  3823  004B  0848               	movf	??_printf,w
  3824  004C  00CC               	movwf	printf@ap
  3825                           
  3826                           ;doprnt.c: 553: while((c = *f++)) {
  3827  004D  28F4               	goto	i1l1492
  3828  004E                     i1l1448:
  3829                           
  3830                           ;doprnt.c: 555: if(c != '%')
  3831  004E  3025               	movlw	37
  3832  004F  0651               	xorwf	printf@c,w
  3833  0050  1903               	btfsc	3,2
  3834  0051  2853               	goto	u59_21
  3835  0052  2854               	goto	u59_20
  3836  0053                     u59_21:
  3837  0053  2859               	goto	i1l1452
  3838  0054                     u59_20:
  3839  0054                     i1l1450:
  3840                           
  3841                           ;doprnt.c: 557: {;doprnt.c: 558: (putch(c) );
  3842  0054  0851               	movf	printf@c,w
  3843  0055  3183  233B  3180   	fcall	_putch
  3844                           
  3845                           ;doprnt.c: 559: continue;
  3846  0058  28F4               	goto	i1l1492
  3847  0059                     i1l1452:
  3848                           
  3849                           ;doprnt.c: 560: };doprnt.c: 565: flag = 0;
  3850  0059  01CD               	clrf	printf@flag
  3851  005A                     i1l1456:	
  3852                           ;doprnt.c: 661: switch(c = *f++) {
  3853                           
  3854  005A  0845               	movf	printf@f+1,w
  3855  005B  00C9               	movwf	??_printf+1
  3856  005C  0844               	movf	printf@f,w
  3857  005D  00C8               	movwf	??_printf
  3858  005E  0AC4               	incf	printf@f,f
  3859  005F  1903               	skipnz
  3860  0060  0AC5               	incf	printf@f+1,f
  3861  0061  0848               	movf	??_printf,w
  3862  0062  0084               	movwf	4
  3863  0063  0849               	movf	??_printf+1,w
  3864  0064  0085               	movwf	5
  3865  0065  0800               	movf	0,w	;code access
  3866  0066  00D1               	movwf	printf@c
  3867                           
  3868                           ; Switch size 1, requested type "simple"
  3869                           ; Number of cases is 3, Range of values is 0 to 105
  3870                           ; switch strategies available:
  3871                           ; Name         Instructions Cycles
  3872                           ; simple_byte           10     6 (average)
  3873                           ; direct_byte          218     6 (fixed)
  3874                           ; jumptable            260     6 (fixed)
  3875                           ;	Chosen strategy is simple_byte
  3876  0067  3A00               	xorlw	0	; case 0
  3877  0068  1903               	skipnz
  3878  0069  2909               	goto	i1l472
  3879  006A  3A64               	xorlw	100	; case 100
  3880  006B  1903               	skipnz
  3881  006C  2871               	goto	i1l1458
  3882  006D  3A0D               	xorlw	13	; case 105
  3883  006E  1903               	skipnz
  3884  006F  2871               	goto	i1l1458
  3885  0070  28F4               	goto	i1l1492
  3886  0071                     i1l1458:
  3887                           
  3888                           ;doprnt.c: 1279: {;doprnt.c: 1285: val = (unsigned int)(*(int *)__va_arg((*(int **)ap), 
      +                          (int)0));
  3889  0071  084C               	movf	printf@ap,w
  3890  0072  0086               	movwf	6
  3891  0073  0187               	clrf	7
  3892  0074  3F40               	moviw [0]fsr1
  3893  0075  00CF               	movwf	printf@val
  3894  0076  3F41               	moviw [1]fsr1
  3895  0077  00D0               	movwf	printf@val+1
  3896  0078                     i1l1460:
  3897  0078  3002               	movlw	2
  3898  0079  00C8               	movwf	??_printf
  3899  007A  0848               	movf	??_printf,w
  3900  007B  07CC               	addwf	printf@ap,f
  3901  007C                     i1l1462:
  3902                           
  3903                           ;doprnt.c: 1287: if((int)val < 0) {
  3904  007C  1FD0               	btfss	printf@val+1,7
  3905  007D  287F               	goto	u60_21
  3906  007E  2880               	goto	u60_20
  3907  007F                     u60_21:
  3908  007F  2889               	goto	i1l1468
  3909  0080                     u60_20:
  3910  0080                     i1l1464:
  3911                           
  3912                           ;doprnt.c: 1288: flag |= 0x03;
  3913  0080  3003               	movlw	3
  3914  0081  00C8               	movwf	??_printf
  3915  0082  0848               	movf	??_printf,w
  3916  0083  04CD               	iorwf	printf@flag,f
  3917  0084                     i1l1466:
  3918                           
  3919                           ;doprnt.c: 1289: val = -val;
  3920  0084  09CF               	comf	printf@val,f
  3921  0085  09D0               	comf	printf@val+1,f
  3922  0086  0ACF               	incf	printf@val,f
  3923  0087  1903               	skipnz
  3924  0088  0AD0               	incf	printf@val+1,f
  3925  0089                     i1l1468:
  3926                           
  3927                           ;doprnt.c: 1290: };doprnt.c: 1292: };doprnt.c: 1331: for(c = 1 ; c != sizeof dpowers/siz
      +                          eof dpowers[0] ; c++)
  3928  0089  01D1               	clrf	printf@c
  3929  008A  0AD1               	incf	printf@c,f
  3930  008B                     i1l1474:
  3931                           
  3932                           ;doprnt.c: 1332: if(val < dpowers[c])
  3933  008B  0851               	movf	printf@c,w
  3934  008C  00C8               	movwf	??_printf
  3935  008D  01C9               	clrf	??_printf+1
  3936  008E  35C8               	lslf	??_printf,f
  3937  008F  0DC9               	rlf	??_printf+1,f
  3938  0090  30E7               	movlw	low (_dpowers| (0+32768))
  3939  0091  0748               	addwf	??_printf,w
  3940  0092  0084               	movwf	4
  3941  0093  3082               	movlw	high (_dpowers| (0+32768))
  3942  0094  3D49               	addwfc	??_printf+1,w
  3943  0095  0085               	movwf	5
  3944  0096  3F00               	moviw [0]fsr0
  3945  0097  00CA               	movwf	??_printf+2
  3946  0098  3F01               	moviw [1]fsr0
  3947  0099  00CB               	movwf	??_printf+3
  3948  009A  084B               	movf	??_printf+3,w
  3949  009B  0250               	subwf	printf@val+1,w
  3950  009C  1D03               	skipz
  3951  009D  28A0               	goto	u61_25
  3952  009E  084A               	movf	??_printf+2,w
  3953  009F  024F               	subwf	printf@val,w
  3954  00A0                     u61_25:
  3955  00A0  1803               	skipnc
  3956  00A1  28A3               	goto	u61_21
  3957  00A2  28A4               	goto	u61_20
  3958  00A3                     u61_21:
  3959  00A3  28A5               	goto	i1l1478
  3960  00A4                     u61_20:
  3961  00A4  28AF               	goto	i1l1480
  3962  00A5                     i1l1478:
  3963  00A5  3001               	movlw	1
  3964  00A6  00C8               	movwf	??_printf
  3965  00A7  0848               	movf	??_printf,w
  3966  00A8  07D1               	addwf	printf@c,f
  3967  00A9  3005               	movlw	5
  3968  00AA  0651               	xorwf	printf@c,w
  3969  00AB  1D03               	btfss	3,2
  3970  00AC  28AE               	goto	u62_21
  3971  00AD  28AF               	goto	u62_20
  3972  00AE                     u62_21:
  3973  00AE  288B               	goto	i1l1474
  3974  00AF                     u62_20:
  3975  00AF                     i1l1480:
  3976                           
  3977                           ;doprnt.c: 1448: {;doprnt.c: 1464: if(flag & 0x03)
  3978  00AF  084D               	movf	printf@flag,w
  3979  00B0  3903               	andlw	3
  3980  00B1  1903               	btfsc	3,2
  3981  00B2  28B4               	goto	u63_21
  3982  00B3  28B5               	goto	u63_20
  3983  00B4                     u63_21:
  3984  00B4  28B9               	goto	i1l1484
  3985  00B5                     u63_20:
  3986  00B5                     i1l1482:
  3987                           
  3988                           ;doprnt.c: 1465: (putch('-') );
  3989  00B5  302D               	movlw	45
  3990  00B6  3183  233B  3180   	fcall	_putch
  3991  00B9                     i1l1484:
  3992                           
  3993                           ;doprnt.c: 1495: };doprnt.c: 1498: prec = c;
  3994  00B9  0020               	movlb	0	; select bank0
  3995  00BA  0851               	movf	printf@c,w
  3996  00BB  00C8               	movwf	??_printf
  3997  00BC  0848               	movf	??_printf,w
  3998  00BD  00CE               	movwf	printf@prec
  3999                           
  4000                           ;doprnt.c: 1500: while(prec--) {
  4001  00BE  28EA               	goto	i1l1490
  4002  00BF                     i1l1486:
  4003                           
  4004                           ;doprnt.c: 1504: {;doprnt.c: 1515: c = (val / dpowers[(unsigned char)prec]) % 10 + '0';
  4005  00BF  300A               	movlw	10
  4006  00C0  00F8               	movwf	___lwmod@divisor
  4007  00C1  3000               	movlw	0
  4008  00C2  00F9               	movwf	___lwmod@divisor+1
  4009  00C3  084E               	movf	printf@prec,w
  4010  00C4  00C8               	movwf	??_printf
  4011  00C5  01C9               	clrf	??_printf+1
  4012  00C6  35C8               	lslf	??_printf,f
  4013  00C7  0DC9               	rlf	??_printf+1,f
  4014  00C8  30E7               	movlw	low (_dpowers| (0+32768))
  4015  00C9  0748               	addwf	??_printf,w
  4016  00CA  0084               	movwf	4
  4017  00CB  3082               	movlw	high (_dpowers| (0+32768))
  4018  00CC  3D49               	addwfc	??_printf+1,w
  4019  00CD  0085               	movwf	5
  4020  00CE  3F00               	moviw [0]fsr0
  4021  00CF  00F0               	movwf	___lwdiv@divisor
  4022  00D0  3F01               	moviw [1]fsr0
  4023  00D1  00F1               	movwf	___lwdiv@divisor+1
  4024  00D2  0850               	movf	printf@val+1,w
  4025  00D3  00F3               	movwf	___lwdiv@dividend+1
  4026  00D4  084F               	movf	printf@val,w
  4027  00D5  00F2               	movwf	___lwdiv@dividend
  4028  00D6  3181  214E  3180   	fcall	___lwdiv
  4029  00D9  0871               	movf	?___lwdiv+1,w
  4030  00DA  00FB               	movwf	___lwmod@dividend+1
  4031  00DB  0870               	movf	?___lwdiv,w
  4032  00DC  00FA               	movwf	___lwmod@dividend
  4033  00DD  3181  21C4  3180   	fcall	___lwmod
  4034  00E0  0878               	movf	?___lwmod,w
  4035  00E1  3E30               	addlw	48
  4036  00E2  0020               	movlb	0	; select bank0
  4037  00E3  00CA               	movwf	??_printf+2
  4038  00E4  084A               	movf	??_printf+2,w
  4039  00E5  00D1               	movwf	printf@c
  4040  00E6                     i1l1488:
  4041                           
  4042                           ;doprnt.c: 1549: };doprnt.c: 1550: (putch(c) );
  4043  00E6  0851               	movf	printf@c,w
  4044  00E7  3183  233B  3180   	fcall	_putch
  4045  00EA                     i1l1490:
  4046  00EA  30FF               	movlw	255
  4047  00EB  0020               	movlb	0	; select bank0
  4048  00EC  00C8               	movwf	??_printf
  4049  00ED  0848               	movf	??_printf,w
  4050  00EE  07CE               	addwf	printf@prec,f
  4051  00EF  0A4E               	incf	printf@prec,w
  4052  00F0  1D03               	btfss	3,2
  4053  00F1  28F3               	goto	u64_21
  4054  00F2  28F4               	goto	u64_20
  4055  00F3                     u64_21:
  4056  00F3  28BF               	goto	i1l1486
  4057  00F4                     u64_20:
  4058  00F4                     i1l1492:
  4059  00F4  0020               	movlb	0	; select bank0
  4060  00F5  0845               	movf	printf@f+1,w
  4061  00F6  00C9               	movwf	??_printf+1
  4062  00F7  0844               	movf	printf@f,w
  4063  00F8  00C8               	movwf	??_printf
  4064  00F9  0AC4               	incf	printf@f,f
  4065  00FA  1903               	skipnz
  4066  00FB  0AC5               	incf	printf@f+1,f
  4067  00FC  0848               	movf	??_printf,w
  4068  00FD  0084               	movwf	4
  4069  00FE  0849               	movf	??_printf+1,w
  4070  00FF  0085               	movwf	5
  4071  0100  0800               	movf	0,w	;code access
  4072  0101  00CA               	movwf	??_printf+2
  4073  0102  084A               	movf	??_printf+2,w
  4074  0103  00D1               	movwf	printf@c
  4075  0104  0851               	movf	printf@c,w
  4076  0105  1D03               	btfss	3,2
  4077  0106  2908               	goto	u65_21
  4078  0107  2909               	goto	u65_20
  4079  0108                     u65_21:
  4080  0108  284E               	goto	i1l1448
  4081  0109                     u65_20:
  4082  0109                     i1l472:
  4083  0109  0008               	return
  4084  010A                     __end_of_printf:
  4085                           
  4086                           	psect	text20
  4087  033B                     __ptext20:	
  4088 ;; *************** function _putch *****************
  4089 ;; Defined at:
  4090 ;;		line 201 in file "mcc_generated_files/eusart.c"
  4091 ;; Parameters:    Size  Location     Type
  4092 ;;  txData          1    wreg     unsigned char 
  4093 ;; Auto vars:     Size  Location     Type
  4094 ;;  txData          1    2[COMMON] unsigned char 
  4095 ;; Return value:  Size  Location     Type
  4096 ;;                  1    wreg      void 
  4097 ;; Registers used:
  4098 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4099 ;; Tracked objects:
  4100 ;;		On entry : 0/0
  4101 ;;		On exit  : 0/0
  4102 ;;		Unchanged: 0/0
  4103 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4104 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4105 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4106 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4107 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4108 ;;Total ram usage:        1 bytes
  4109 ;; Hardware stack levels used:    1
  4110 ;; Hardware stack levels required when called:    1
  4111 ;; This function calls:
  4112 ;;		_EUSART_Write
  4113 ;; This function is called by:
  4114 ;;		_printf
  4115 ;; This function uses a non-reentrant model
  4116 ;;
  4117                           
  4118                           
  4119                           ;psect for function _putch
  4120  033B                     _putch:
  4121                           
  4122                           ;incstack = 0
  4123                           ; Regs used in _putch: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4124                           ;putch@txData stored from wreg
  4125  033B  00F2               	movwf	putch@txData
  4126  033C                     i1l1396:
  4127                           
  4128                           ;eusart.c: 203: EUSART_Write(txData);
  4129  033C  0872               	movf	putch@txData,w
  4130  033D  3181  21F8  3183   	fcall	_EUSART_Write
  4131  0340                     i1l296:
  4132  0340  0008               	return
  4133  0341                     __end_of_putch:
  4134                           
  4135                           	psect	text21
  4136  01F8                     __ptext21:	
  4137 ;; *************** function _EUSART_Write *****************
  4138 ;; Defined at:
  4139 ;;		line 173 in file "mcc_generated_files/eusart.c"
  4140 ;; Parameters:    Size  Location     Type
  4141 ;;  txData          1    wreg     unsigned char 
  4142 ;; Auto vars:     Size  Location     Type
  4143 ;;  txData          1    1[COMMON] unsigned char 
  4144 ;; Return value:  Size  Location     Type
  4145 ;;                  1    wreg      void 
  4146 ;; Registers used:
  4147 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4148 ;; Tracked objects:
  4149 ;;		On entry : 0/0
  4150 ;;		On exit  : 0/0
  4151 ;;		Unchanged: 0/0
  4152 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4153 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4154 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4155 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4156 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4157 ;;Total ram usage:        2 bytes
  4158 ;; Hardware stack levels used:    1
  4159 ;; This function calls:
  4160 ;;		Nothing
  4161 ;; This function is called by:
  4162 ;;		_putch
  4163 ;; This function uses a non-reentrant model
  4164 ;;
  4165                           
  4166                           
  4167                           ;psect for function _EUSART_Write
  4168  01F8                     _EUSART_Write:
  4169                           
  4170                           ;incstack = 0
  4171                           ; Regs used in _EUSART_Write: [wreg+fsr1l+fsr1h+status,2+status,0]
  4172                           ;EUSART_Write@txData stored from wreg
  4173  01F8  00F1               	movwf	EUSART_Write@txData
  4174  01F9                     i1l1378:
  4175  01F9                     i1l1380:	
  4176                           ;eusart.c: 175: while(0 == eusartTxBufferRemaining)
  4177                           
  4178  01F9  0020               	movlb	0	; select bank0
  4179  01FA  0861               	movf	_eusartTxBufferRemaining,w	;volatile
  4180  01FB  1903               	btfsc	3,2
  4181  01FC  29FE               	goto	u43_21
  4182  01FD  29FF               	goto	u43_20
  4183  01FE                     u43_21:
  4184  01FE  29F9               	goto	i1l1380
  4185  01FF                     u43_20:
  4186  01FF                     i1l286:
  4187                           
  4188                           ;eusart.c: 177: };eusart.c: 179: if(0 == PIE1bits.TXIE)
  4189  01FF  0021               	movlb	1	; select bank1
  4190  0200  1A11               	btfsc	17,4	;volatile
  4191  0201  2A03               	goto	u44_21
  4192  0202  2A04               	goto	u44_20
  4193  0203                     u44_21:
  4194  0203  2A08               	goto	i1l287
  4195  0204                     u44_20:
  4196  0204                     i1l1382:
  4197                           
  4198                           ;eusart.c: 180: {;eusart.c: 181: TX1REG = txData;
  4199  0204  0871               	movf	EUSART_Write@txData,w
  4200  0205  0023               	movlb	3	; select bank3
  4201  0206  009A               	movwf	26	;volatile
  4202                           
  4203                           ;eusart.c: 182: }
  4204  0207  2A1F               	goto	i1l1394
  4205  0208                     i1l287:
  4206                           
  4207                           ;eusart.c: 183: else;eusart.c: 184: {;eusart.c: 185: PIE1bits.TXIE = 0;
  4208  0208  1211               	bcf	17,4	;volatile
  4209  0209                     i1l1384:
  4210                           
  4211                           ;eusart.c: 186: eusartTxBuffer[eusartTxHead++] = txData;
  4212  0209  0871               	movf	EUSART_Write@txData,w
  4213  020A  00F0               	movwf	??_EUSART_Write
  4214  020B  0020               	movlb	0	; select bank0
  4215  020C  0843               	movf	_eusartTxHead,w
  4216  020D  3E30               	addlw	(low (_eusartTxBuffer| 0))& (0+255)
  4217  020E  0086               	movwf	6
  4218  020F  0187               	clrf	7
  4219  0210  0870               	movf	??_EUSART_Write,w
  4220  0211  0081               	movwf	1
  4221  0212                     i1l1386:
  4222  0212  3001               	movlw	1
  4223  0213  00F0               	movwf	??_EUSART_Write
  4224  0214  0870               	movf	??_EUSART_Write,w
  4225  0215  07C3               	addwf	_eusartTxHead,f	;volatile
  4226  0216                     i1l1388:
  4227                           
  4228                           ;eusart.c: 187: if(sizeof(eusartTxBuffer) <= eusartTxHead)
  4229  0216  3008               	movlw	8
  4230  0217  0243               	subwf	_eusartTxHead,w	;volatile
  4231  0218  1C03               	skipc
  4232  0219  2A1B               	goto	u45_21
  4233  021A  2A1C               	goto	u45_20
  4234  021B                     u45_21:
  4235  021B  2A1D               	goto	i1l1392
  4236  021C                     u45_20:
  4237  021C                     i1l1390:
  4238                           
  4239                           ;eusart.c: 188: {;eusart.c: 189: eusartTxHead = 0;
  4240  021C  01C3               	clrf	_eusartTxHead	;volatile
  4241  021D                     i1l1392:
  4242                           
  4243                           ;eusart.c: 190: };eusart.c: 191: eusartTxBufferRemaining--;
  4244  021D  3001               	movlw	1
  4245  021E  02E1               	subwf	_eusartTxBufferRemaining,f	;volatile
  4246  021F                     i1l1394:
  4247                           
  4248                           ;eusart.c: 192: };eusart.c: 193: PIE1bits.TXIE = 1;
  4249  021F  0021               	movlb	1	; select bank1
  4250  0220  1611               	bsf	17,4	;volatile
  4251  0221                     i1l290:
  4252  0221  0008               	return
  4253  0222                     __end_of_EUSART_Write:
  4254                           
  4255                           	psect	text22
  4256  01C4                     __ptext22:	
  4257 ;; *************** function ___lwmod *****************
  4258 ;; Defined at:
  4259 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  4260 ;; Parameters:    Size  Location     Type
  4261 ;;  divisor         2    8[COMMON] unsigned int 
  4262 ;;  dividend        2   10[COMMON] unsigned int 
  4263 ;; Auto vars:     Size  Location     Type
  4264 ;;  counter         1   13[COMMON] unsigned char 
  4265 ;; Return value:  Size  Location     Type
  4266 ;;                  2    8[COMMON] unsigned int 
  4267 ;; Registers used:
  4268 ;;		wreg, status,2, status,0
  4269 ;; Tracked objects:
  4270 ;;		On entry : 0/0
  4271 ;;		On exit  : 0/0
  4272 ;;		Unchanged: 0/0
  4273 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4274 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4275 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4276 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4277 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4278 ;;Total ram usage:        6 bytes
  4279 ;; Hardware stack levels used:    1
  4280 ;; This function calls:
  4281 ;;		Nothing
  4282 ;; This function is called by:
  4283 ;;		_printf
  4284 ;; This function uses a non-reentrant model
  4285 ;;
  4286                           
  4287                           
  4288                           ;psect for function ___lwmod
  4289  01C4                     ___lwmod:
  4290  01C4                     i1l1424:	
  4291                           ;incstack = 0
  4292                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  4293                           
  4294  01C4  0878               	movf	___lwmod@divisor,w
  4295  01C5  0479               	iorwf	___lwmod@divisor+1,w
  4296  01C6  1903               	btfsc	3,2
  4297  01C7  29C9               	goto	u53_21
  4298  01C8  29CA               	goto	u53_20
  4299  01C9                     u53_21:
  4300  01C9  29F3               	goto	i1l1442
  4301  01CA                     u53_20:
  4302  01CA                     i1l1426:
  4303  01CA  01FD               	clrf	___lwmod@counter
  4304  01CB  0AFD               	incf	___lwmod@counter,f
  4305  01CC  29D6               	goto	i1l1432
  4306  01CD                     i1l1428:
  4307  01CD  3001               	movlw	1
  4308  01CE                     u54_25:
  4309  01CE  35F8               	lslf	___lwmod@divisor,f
  4310  01CF  0DF9               	rlf	___lwmod@divisor+1,f
  4311  01D0  0B89               	decfsz	9,f
  4312  01D1  29CE               	goto	u54_25
  4313  01D2                     i1l1430:
  4314  01D2  3001               	movlw	1
  4315  01D3  00FC               	movwf	??___lwmod
  4316  01D4  087C               	movf	??___lwmod,w
  4317  01D5  07FD               	addwf	___lwmod@counter,f
  4318  01D6                     i1l1432:
  4319  01D6  1FF9               	btfss	___lwmod@divisor+1,7
  4320  01D7  29D9               	goto	u55_21
  4321  01D8  29DA               	goto	u55_20
  4322  01D9                     u55_21:
  4323  01D9  29CD               	goto	i1l1428
  4324  01DA                     u55_20:
  4325  01DA                     i1l1434:
  4326  01DA  0879               	movf	___lwmod@divisor+1,w
  4327  01DB  027B               	subwf	___lwmod@dividend+1,w
  4328  01DC  1D03               	skipz
  4329  01DD  29E0               	goto	u56_25
  4330  01DE  0878               	movf	___lwmod@divisor,w
  4331  01DF  027A               	subwf	___lwmod@dividend,w
  4332  01E0                     u56_25:
  4333  01E0  1C03               	skipc
  4334  01E1  29E3               	goto	u56_21
  4335  01E2  29E4               	goto	u56_20
  4336  01E3                     u56_21:
  4337  01E3  29E8               	goto	i1l1438
  4338  01E4                     u56_20:
  4339  01E4                     i1l1436:
  4340  01E4  0878               	movf	___lwmod@divisor,w
  4341  01E5  02FA               	subwf	___lwmod@dividend,f
  4342  01E6  0879               	movf	___lwmod@divisor+1,w
  4343  01E7  3BFB               	subwfb	___lwmod@dividend+1,f
  4344  01E8                     i1l1438:
  4345  01E8  3001               	movlw	1
  4346  01E9                     u57_25:
  4347  01E9  36F9               	lsrf	___lwmod@divisor+1,f
  4348  01EA  0CF8               	rrf	___lwmod@divisor,f
  4349  01EB  0B89               	decfsz	9,f
  4350  01EC  29E9               	goto	u57_25
  4351  01ED                     i1l1440:
  4352  01ED  3001               	movlw	1
  4353  01EE  02FD               	subwf	___lwmod@counter,f
  4354  01EF  1D03               	btfss	3,2
  4355  01F0  29F2               	goto	u58_21
  4356  01F1  29F3               	goto	u58_20
  4357  01F2                     u58_21:
  4358  01F2  29DA               	goto	i1l1434
  4359  01F3                     u58_20:
  4360  01F3                     i1l1442:
  4361  01F3  087B               	movf	___lwmod@dividend+1,w
  4362  01F4  00F9               	movwf	?___lwmod+1
  4363  01F5  087A               	movf	___lwmod@dividend,w
  4364  01F6  00F8               	movwf	?___lwmod
  4365  01F7                     i1l758:
  4366  01F7  0008               	return
  4367  01F8                     __end_of___lwmod:
  4368                           
  4369                           	psect	text23
  4370  014E                     __ptext23:	
  4371 ;; *************** function ___lwdiv *****************
  4372 ;; Defined at:
  4373 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  4374 ;; Parameters:    Size  Location     Type
  4375 ;;  divisor         2    0[COMMON] unsigned int 
  4376 ;;  dividend        2    2[COMMON] unsigned int 
  4377 ;; Auto vars:     Size  Location     Type
  4378 ;;  quotient        2    5[COMMON] unsigned int 
  4379 ;;  counter         1    7[COMMON] unsigned char 
  4380 ;; Return value:  Size  Location     Type
  4381 ;;                  2    0[COMMON] unsigned int 
  4382 ;; Registers used:
  4383 ;;		wreg, status,2, status,0
  4384 ;; Tracked objects:
  4385 ;;		On entry : 0/0
  4386 ;;		On exit  : 0/0
  4387 ;;		Unchanged: 0/0
  4388 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4389 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4390 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4391 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4392 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4393 ;;Total ram usage:        8 bytes
  4394 ;; Hardware stack levels used:    1
  4395 ;; This function calls:
  4396 ;;		Nothing
  4397 ;; This function is called by:
  4398 ;;		_printf
  4399 ;; This function uses a non-reentrant model
  4400 ;;
  4401                           
  4402                           
  4403                           ;psect for function ___lwdiv
  4404  014E                     ___lwdiv:
  4405  014E                     i1l1398:	
  4406                           ;incstack = 0
  4407                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4408                           
  4409  014E  01F5               	clrf	___lwdiv@quotient
  4410  014F  01F6               	clrf	___lwdiv@quotient+1
  4411  0150                     i1l1400:
  4412  0150  0870               	movf	___lwdiv@divisor,w
  4413  0151  0471               	iorwf	___lwdiv@divisor+1,w
  4414  0152  1903               	btfsc	3,2
  4415  0153  2955               	goto	u46_21
  4416  0154  2956               	goto	u46_20
  4417  0155                     u46_21:
  4418  0155  2985               	goto	i1l1420
  4419  0156                     u46_20:
  4420  0156                     i1l1402:
  4421  0156  01F7               	clrf	___lwdiv@counter
  4422  0157  0AF7               	incf	___lwdiv@counter,f
  4423  0158  2962               	goto	i1l1408
  4424  0159                     i1l1404:
  4425  0159  3001               	movlw	1
  4426  015A                     u47_25:
  4427  015A  35F0               	lslf	___lwdiv@divisor,f
  4428  015B  0DF1               	rlf	___lwdiv@divisor+1,f
  4429  015C  0B89               	decfsz	9,f
  4430  015D  295A               	goto	u47_25
  4431  015E                     i1l1406:
  4432  015E  3001               	movlw	1
  4433  015F  00F4               	movwf	??___lwdiv
  4434  0160  0874               	movf	??___lwdiv,w
  4435  0161  07F7               	addwf	___lwdiv@counter,f
  4436  0162                     i1l1408:
  4437  0162  1FF1               	btfss	___lwdiv@divisor+1,7
  4438  0163  2965               	goto	u48_21
  4439  0164  2966               	goto	u48_20
  4440  0165                     u48_21:
  4441  0165  2959               	goto	i1l1404
  4442  0166                     u48_20:
  4443  0166                     i1l1410:
  4444  0166  3001               	movlw	1
  4445  0167                     u49_25:
  4446  0167  35F5               	lslf	___lwdiv@quotient,f
  4447  0168  0DF6               	rlf	___lwdiv@quotient+1,f
  4448  0169  0B89               	decfsz	9,f
  4449  016A  2967               	goto	u49_25
  4450  016B  0871               	movf	___lwdiv@divisor+1,w
  4451  016C  0273               	subwf	___lwdiv@dividend+1,w
  4452  016D  1D03               	skipz
  4453  016E  2971               	goto	u50_25
  4454  016F  0870               	movf	___lwdiv@divisor,w
  4455  0170  0272               	subwf	___lwdiv@dividend,w
  4456  0171                     u50_25:
  4457  0171  1C03               	skipc
  4458  0172  2974               	goto	u50_21
  4459  0173  2975               	goto	u50_20
  4460  0174                     u50_21:
  4461  0174  297A               	goto	i1l1416
  4462  0175                     u50_20:
  4463  0175                     i1l1412:
  4464  0175  0870               	movf	___lwdiv@divisor,w
  4465  0176  02F2               	subwf	___lwdiv@dividend,f
  4466  0177  0871               	movf	___lwdiv@divisor+1,w
  4467  0178  3BF3               	subwfb	___lwdiv@dividend+1,f
  4468  0179                     i1l1414:
  4469  0179  1475               	bsf	___lwdiv@quotient,0
  4470  017A                     i1l1416:
  4471  017A  3001               	movlw	1
  4472  017B                     u51_25:
  4473  017B  36F1               	lsrf	___lwdiv@divisor+1,f
  4474  017C  0CF0               	rrf	___lwdiv@divisor,f
  4475  017D  0B89               	decfsz	9,f
  4476  017E  297B               	goto	u51_25
  4477  017F                     i1l1418:
  4478  017F  3001               	movlw	1
  4479  0180  02F7               	subwf	___lwdiv@counter,f
  4480  0181  1D03               	btfss	3,2
  4481  0182  2984               	goto	u52_21
  4482  0183  2985               	goto	u52_20
  4483  0184                     u52_21:
  4484  0184  2966               	goto	i1l1410
  4485  0185                     u52_20:
  4486  0185                     i1l1420:
  4487  0185  0876               	movf	___lwdiv@quotient+1,w
  4488  0186  00F1               	movwf	?___lwdiv+1
  4489  0187  0875               	movf	___lwdiv@quotient,w
  4490  0188  00F0               	movwf	?___lwdiv
  4491  0189                     i1l748:
  4492  0189  0008               	return
  4493  018A                     __end_of___lwdiv:
  4494                           
  4495                           	psect	text24
  4496  0249                     __ptext24:	
  4497 ;; *************** function _EUSART_Transmit_ISR *****************
  4498 ;; Defined at:
  4499 ;;		line 206 in file "mcc_generated_files/eusart.c"
  4500 ;; Parameters:    Size  Location     Type
  4501 ;;		None
  4502 ;; Auto vars:     Size  Location     Type
  4503 ;;		None
  4504 ;; Return value:  Size  Location     Type
  4505 ;;                  1    wreg      void 
  4506 ;; Registers used:
  4507 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4508 ;; Tracked objects:
  4509 ;;		On entry : 0/0
  4510 ;;		On exit  : 0/0
  4511 ;;		Unchanged: 0/0
  4512 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4513 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4514 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4515 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4516 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4517 ;;Total ram usage:        1 bytes
  4518 ;; Hardware stack levels used:    1
  4519 ;; This function calls:
  4520 ;;		Nothing
  4521 ;; This function is called by:
  4522 ;;		_EUSART_Initialize
  4523 ;;		_INTERRUPT_InterruptManager
  4524 ;; This function uses a non-reentrant model
  4525 ;;
  4526                           
  4527                           
  4528                           ;psect for function _EUSART_Transmit_ISR
  4529  0249                     _EUSART_Transmit_ISR:
  4530  0249                     i1l1662:	
  4531                           ;incstack = 0
  4532                           ; Regs used in _EUSART_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
  4533                           
  4534                           
  4535                           ;eusart.c: 210: if(sizeof(eusartTxBuffer) > eusartTxBufferRemaining)
  4536  0249  3008               	movlw	8
  4537  024A  0020               	movlb	0	; select bank0
  4538  024B  0261               	subwf	_eusartTxBufferRemaining,w	;volatile
  4539  024C  1803               	skipnc
  4540  024D  2A4F               	goto	u71_21
  4541  024E  2A50               	goto	u71_20
  4542  024F                     u71_21:
  4543  024F  2A68               	goto	i1l299
  4544  0250                     u71_20:
  4545  0250                     i1l1664:
  4546                           
  4547                           ;eusart.c: 211: {;eusart.c: 212: TX1REG = eusartTxBuffer[eusartTxTail++];
  4548  0250  0842               	movf	_eusartTxTail,w
  4549  0251  3E30               	addlw	(low (_eusartTxBuffer| 0))& (0+255)
  4550  0252  0086               	movwf	6
  4551  0253  0187               	clrf	7
  4552  0254  0801               	movf	1,w
  4553  0255  0023               	movlb	3	; select bank3
  4554  0256  009A               	movwf	26	;volatile
  4555  0257                     i1l1666:
  4556  0257  3001               	movlw	1
  4557  0258  00F0               	movwf	??_EUSART_Transmit_ISR
  4558  0259  0870               	movf	??_EUSART_Transmit_ISR,w
  4559  025A  0020               	movlb	0	; select bank0
  4560  025B  07C2               	addwf	_eusartTxTail,f	;volatile
  4561  025C                     i1l1668:
  4562                           
  4563                           ;eusart.c: 213: if(sizeof(eusartTxBuffer) <= eusartTxTail)
  4564  025C  3008               	movlw	8
  4565  025D  0242               	subwf	_eusartTxTail,w	;volatile
  4566  025E  1C03               	skipc
  4567  025F  2A61               	goto	u72_21
  4568  0260  2A62               	goto	u72_20
  4569  0261                     u72_21:
  4570  0261  2A63               	goto	i1l1672
  4571  0262                     u72_20:
  4572  0262                     i1l1670:
  4573                           
  4574                           ;eusart.c: 214: {;eusart.c: 215: eusartTxTail = 0;
  4575  0262  01C2               	clrf	_eusartTxTail	;volatile
  4576  0263                     i1l1672:
  4577                           
  4578                           ;eusart.c: 216: };eusart.c: 217: eusartTxBufferRemaining++;
  4579  0263  3001               	movlw	1
  4580  0264  00F0               	movwf	??_EUSART_Transmit_ISR
  4581  0265  0870               	movf	??_EUSART_Transmit_ISR,w
  4582  0266  07E1               	addwf	_eusartTxBufferRemaining,f	;volatile
  4583                           
  4584                           ;eusart.c: 218: }
  4585  0267  2A6A               	goto	i1l302
  4586  0268                     i1l299:
  4587                           
  4588                           ;eusart.c: 219: else;eusart.c: 220: {;eusart.c: 221: PIE1bits.TXIE = 0;
  4589  0268  0021               	movlb	1	; select bank1
  4590  0269  1211               	bcf	17,4	;volatile
  4591  026A                     i1l302:
  4592  026A  0008               	return
  4593  026B                     __end_of_EUSART_Transmit_ISR:
  4594                           
  4595                           	psect	text25
  4596  018A                     __ptext25:	
  4597 ;; *************** function _EUSART_Receive_ISR *****************
  4598 ;; Defined at:
  4599 ;;		line 225 in file "mcc_generated_files/eusart.c"
  4600 ;; Parameters:    Size  Location     Type
  4601 ;;		None
  4602 ;; Auto vars:     Size  Location     Type
  4603 ;;		None
  4604 ;; Return value:  Size  Location     Type
  4605 ;;                  1    wreg      void 
  4606 ;; Registers used:
  4607 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4608 ;; Tracked objects:
  4609 ;;		On entry : 0/0
  4610 ;;		On exit  : 0/0
  4611 ;;		Unchanged: 0/0
  4612 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4613 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4614 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4615 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4616 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4617 ;;Total ram usage:        0 bytes
  4618 ;; Hardware stack levels used:    1
  4619 ;; Hardware stack levels required when called:    2
  4620 ;; This function calls:
  4621 ;;		Absolute function
  4622 ;;		_EUSART_DefaultErrorHandler
  4623 ;;		_EUSART_DefaultFramingErrorHandler
  4624 ;;		_EUSART_DefaultOverrunErrorHandler
  4625 ;;		_EUSART_RxDataHandler
  4626 ;; This function is called by:
  4627 ;;		_EUSART_Initialize
  4628 ;;		_INTERRUPT_InterruptManager
  4629 ;; This function uses a non-reentrant model
  4630 ;;
  4631                           
  4632                           
  4633                           ;psect for function _EUSART_Receive_ISR
  4634  018A                     _EUSART_Receive_ISR:
  4635  018A                     i1l1674:	
  4636                           ;incstack = 0
  4637                           ; Regs used in _EUSART_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4638                           
  4639                           
  4640                           ;eusart.c: 228: eusartRxStatusBuffer[eusartRxHead].status = 0;
  4641  018A  0020               	movlb	0	; select bank0
  4642  018B  0841               	movf	_eusartRxHead,w	;volatile
  4643  018C  3E20               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  4644  018D  0086               	movwf	6
  4645  018E  0187               	clrf	7
  4646  018F  0181               	clrf	1
  4647  0190                     i1l1676:
  4648                           
  4649                           ;eusart.c: 230: if(RC1STAbits.FERR){
  4650  0190  0023               	movlb	3	; select bank3
  4651  0191  1D1D               	btfss	29,2	;volatile
  4652  0192  2994               	goto	u73_21
  4653  0193  2995               	goto	u73_20
  4654  0194                     u73_21:
  4655  0194  29A0               	goto	i1l1682
  4656  0195                     u73_20:
  4657  0195                     i1l1678:
  4658                           
  4659                           ;eusart.c: 231: eusartRxStatusBuffer[eusartRxHead].ferr = 1;
  4660  0195  0020               	movlb	0	; select bank0
  4661  0196  0841               	movf	_eusartRxHead,w	;volatile
  4662  0197  3E20               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  4663  0198  0086               	movwf	6
  4664  0199  0187               	clrf	7
  4665  019A  1481               	bsf	1,1
  4666  019B                     i1l1680:
  4667                           
  4668                           ;eusart.c: 232: EUSART_FramingErrorHandler();
  4669  019B  085A               	movf	_EUSART_FramingErrorHandler+1,w
  4670  019C  008A               	movwf	10
  4671  019D  0859               	movf	_EUSART_FramingErrorHandler,w
  4672  019E  000A               	callw
  4673  019F  3181               	pagesel	$
  4674  01A0                     i1l1682:
  4675                           
  4676                           ;eusart.c: 233: };eusart.c: 235: if(RC1STAbits.OERR){
  4677  01A0  0023               	movlb	3	; select bank3
  4678  01A1  1C9D               	btfss	29,1	;volatile
  4679  01A2  29A4               	goto	u74_21
  4680  01A3  29A5               	goto	u74_20
  4681  01A4                     u74_21:
  4682  01A4  29B0               	goto	i1l1688
  4683  01A5                     u74_20:
  4684  01A5                     i1l1684:
  4685                           
  4686                           ;eusart.c: 236: eusartRxStatusBuffer[eusartRxHead].oerr = 1;
  4687  01A5  0020               	movlb	0	; select bank0
  4688  01A6  0841               	movf	_eusartRxHead,w	;volatile
  4689  01A7  3E20               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  4690  01A8  0086               	movwf	6
  4691  01A9  0187               	clrf	7
  4692  01AA  1501               	bsf	1,2
  4693  01AB                     i1l1686:
  4694                           
  4695                           ;eusart.c: 237: EUSART_OverrunErrorHandler();
  4696  01AB  0858               	movf	_EUSART_OverrunErrorHandler+1,w
  4697  01AC  008A               	movwf	10
  4698  01AD  0857               	movf	_EUSART_OverrunErrorHandler,w
  4699  01AE  000A               	callw
  4700  01AF  3181               	pagesel	$
  4701  01B0                     i1l1688:
  4702                           
  4703                           ;eusart.c: 238: };eusart.c: 240: if(eusartRxStatusBuffer[eusartRxHead].status){
  4704  01B0  0020               	movlb	0	; select bank0
  4705  01B1  0841               	movf	_eusartRxHead,w	;volatile
  4706  01B2  3E20               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  4707  01B3  0086               	movwf	6
  4708  01B4  0187               	clrf	7
  4709  01B5  0801               	movf	1,w
  4710  01B6  1903               	btfsc	3,2
  4711  01B7  29B9               	goto	u75_21
  4712  01B8  29BA               	goto	u75_20
  4713  01B9                     u75_21:
  4714  01B9  29C0               	goto	i1l1692
  4715  01BA                     u75_20:
  4716  01BA                     i1l1690:
  4717                           
  4718                           ;eusart.c: 241: EUSART_ErrorHandler();
  4719  01BA  0856               	movf	_EUSART_ErrorHandler+1,w
  4720  01BB  008A               	movwf	10
  4721  01BC  0855               	movf	_EUSART_ErrorHandler,w
  4722  01BD  000A               	callw
  4723  01BE  3181               	pagesel	$
  4724                           
  4725                           ;eusart.c: 242: } else {
  4726  01BF  29C3               	goto	i1l309
  4727  01C0                     i1l1692:
  4728                           
  4729                           ;eusart.c: 243: EUSART_RxDataHandler();
  4730  01C0  3182  228C  3181   	fcall	_EUSART_RxDataHandler
  4731  01C3                     i1l309:
  4732  01C3  0008               	return
  4733  01C4                     __end_of_EUSART_Receive_ISR:
  4734                           
  4735                           	psect	text26
  4736  0349                     __ptext26:	
  4737 ;; *************** function _EUSART_DefaultOverrunErrorHandler *****************
  4738 ;; Defined at:
  4739 ;;		line 261 in file "mcc_generated_files/eusart.c"
  4740 ;; Parameters:    Size  Location     Type
  4741 ;;		None
  4742 ;; Auto vars:     Size  Location     Type
  4743 ;;		None
  4744 ;; Return value:  Size  Location     Type
  4745 ;;                  1    wreg      void 
  4746 ;; Registers used:
  4747 ;;		None
  4748 ;; Tracked objects:
  4749 ;;		On entry : 0/0
  4750 ;;		On exit  : 0/0
  4751 ;;		Unchanged: 0/0
  4752 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4753 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4754 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4755 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4756 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4757 ;;Total ram usage:        0 bytes
  4758 ;; Hardware stack levels used:    1
  4759 ;; This function calls:
  4760 ;;		Nothing
  4761 ;; This function is called by:
  4762 ;;		_EUSART_Initialize
  4763 ;;		_EUSART_Receive_ISR
  4764 ;; This function uses a non-reentrant model
  4765 ;;
  4766                           
  4767                           
  4768                           ;psect for function _EUSART_DefaultOverrunErrorHandler
  4769  0349                     _EUSART_DefaultOverrunErrorHandler:
  4770  0349                     i1l1630:	
  4771                           ;incstack = 0
  4772                           ; Regs used in _EUSART_DefaultOverrunErrorHandler: []
  4773                           
  4774                           
  4775                           ;eusart.c: 264: RC1STAbits.CREN = 0;
  4776  0349  0023               	movlb	3	; select bank3
  4777  034A  121D               	bcf	29,4	;volatile
  4778                           
  4779                           ;eusart.c: 265: RC1STAbits.CREN = 1;
  4780  034B  161D               	bsf	29,4	;volatile
  4781  034C                     i1l319:
  4782  034C  0008               	return
  4783  034D                     __end_of_EUSART_DefaultOverrunErrorHandler:
  4784                           
  4785                           	psect	text27
  4786  0351                     __ptext27:	
  4787 ;; *************** function _EUSART_DefaultFramingErrorHandler *****************
  4788 ;; Defined at:
  4789 ;;		line 259 in file "mcc_generated_files/eusart.c"
  4790 ;; Parameters:    Size  Location     Type
  4791 ;;		None
  4792 ;; Auto vars:     Size  Location     Type
  4793 ;;		None
  4794 ;; Return value:  Size  Location     Type
  4795 ;;                  1    wreg      void 
  4796 ;; Registers used:
  4797 ;;		None
  4798 ;; Tracked objects:
  4799 ;;		On entry : 0/0
  4800 ;;		On exit  : 0/0
  4801 ;;		Unchanged: 0/0
  4802 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4803 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4804 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4805 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4806 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4807 ;;Total ram usage:        0 bytes
  4808 ;; Hardware stack levels used:    1
  4809 ;; This function calls:
  4810 ;;		Nothing
  4811 ;; This function is called by:
  4812 ;;		_EUSART_Initialize
  4813 ;;		_EUSART_Receive_ISR
  4814 ;; This function uses a non-reentrant model
  4815 ;;
  4816                           
  4817                           
  4818                           ;psect for function _EUSART_DefaultFramingErrorHandler
  4819  0351                     _EUSART_DefaultFramingErrorHandler:
  4820  0351                     i1l316:	
  4821                           ;incstack = 0
  4822                           ; Regs used in _EUSART_DefaultFramingErrorHandler: []
  4823                           
  4824  0351  0008               	return
  4825  0352                     __end_of_EUSART_DefaultFramingErrorHandler:
  4826                           
  4827                           	psect	text28
  4828  034D                     __ptext28:	
  4829 ;; *************** function _EUSART_DefaultErrorHandler *****************
  4830 ;; Defined at:
  4831 ;;		line 269 in file "mcc_generated_files/eusart.c"
  4832 ;; Parameters:    Size  Location     Type
  4833 ;;		None
  4834 ;; Auto vars:     Size  Location     Type
  4835 ;;		None
  4836 ;; Return value:  Size  Location     Type
  4837 ;;                  1    wreg      void 
  4838 ;; Registers used:
  4839 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4840 ;; Tracked objects:
  4841 ;;		On entry : 0/0
  4842 ;;		On exit  : 0/0
  4843 ;;		Unchanged: 0/0
  4844 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4845 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4846 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4847 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4848 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4849 ;;Total ram usage:        0 bytes
  4850 ;; Hardware stack levels used:    1
  4851 ;; Hardware stack levels required when called:    1
  4852 ;; This function calls:
  4853 ;;		_EUSART_RxDataHandler
  4854 ;; This function is called by:
  4855 ;;		_EUSART_Initialize
  4856 ;;		_EUSART_Receive_ISR
  4857 ;; This function uses a non-reentrant model
  4858 ;;
  4859                           
  4860                           
  4861                           ;psect for function _EUSART_DefaultErrorHandler
  4862  034D                     _EUSART_DefaultErrorHandler:
  4863  034D                     i1l1632:	
  4864                           ;incstack = 0
  4865                           ; Regs used in _EUSART_DefaultErrorHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
  4866                           
  4867                           
  4868                           ;eusart.c: 270: EUSART_RxDataHandler();
  4869  034D  3182  228C  3183   	fcall	_EUSART_RxDataHandler
  4870  0350                     i1l322:
  4871  0350  0008               	return
  4872  0351                     __end_of_EUSART_DefaultErrorHandler:
  4873                           
  4874                           	psect	text29
  4875  028C                     __ptext29:	
  4876 ;; *************** function _EUSART_RxDataHandler *****************
  4877 ;; Defined at:
  4878 ;;		line 249 in file "mcc_generated_files/eusart.c"
  4879 ;; Parameters:    Size  Location     Type
  4880 ;;		None
  4881 ;; Auto vars:     Size  Location     Type
  4882 ;;		None
  4883 ;; Return value:  Size  Location     Type
  4884 ;;                  1    wreg      void 
  4885 ;; Registers used:
  4886 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4887 ;; Tracked objects:
  4888 ;;		On entry : 0/0
  4889 ;;		On exit  : 0/0
  4890 ;;		Unchanged: 0/0
  4891 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4892 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4893 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4894 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4895 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4896 ;;Total ram usage:        1 bytes
  4897 ;; Hardware stack levels used:    1
  4898 ;; This function calls:
  4899 ;;		Nothing
  4900 ;; This function is called by:
  4901 ;;		_EUSART_Receive_ISR
  4902 ;;		_EUSART_DefaultErrorHandler
  4903 ;; This function uses a non-reentrant model
  4904 ;;
  4905                           
  4906                           
  4907                           ;psect for function _EUSART_RxDataHandler
  4908  028C                     _EUSART_RxDataHandler:
  4909  028C                     i1l1514:	
  4910                           ;incstack = 0
  4911                           ; Regs used in _EUSART_RxDataHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
  4912                           
  4913                           
  4914                           ;eusart.c: 251: eusartRxBuffer[eusartRxHead++] = RC1REG;
  4915  028C  0023               	movlb	3	; select bank3
  4916  028D  0819               	movf	25,w	;volatile
  4917  028E  00F0               	movwf	??_EUSART_RxDataHandler
  4918  028F  0020               	movlb	0	; select bank0
  4919  0290  0841               	movf	_eusartRxHead,w
  4920  0291  3E28               	addlw	(low (_eusartRxBuffer| 0))& (0+255)
  4921  0292  0086               	movwf	6
  4922  0293  0187               	clrf	7
  4923  0294  0870               	movf	??_EUSART_RxDataHandler,w
  4924  0295  0081               	movwf	1
  4925  0296                     i1l1516:
  4926  0296  3001               	movlw	1
  4927  0297  00F0               	movwf	??_EUSART_RxDataHandler
  4928  0298  0870               	movf	??_EUSART_RxDataHandler,w
  4929  0299  07C1               	addwf	_eusartRxHead,f	;volatile
  4930  029A                     i1l1518:
  4931                           
  4932                           ;eusart.c: 252: if(sizeof(eusartRxBuffer) <= eusartRxHead)
  4933  029A  3008               	movlw	8
  4934  029B  0241               	subwf	_eusartRxHead,w	;volatile
  4935  029C  1C03               	skipc
  4936  029D  2A9F               	goto	u67_21
  4937  029E  2AA0               	goto	u67_20
  4938  029F                     u67_21:
  4939  029F  2AA1               	goto	i1l1522
  4940  02A0                     u67_20:
  4941  02A0                     i1l1520:
  4942                           
  4943                           ;eusart.c: 253: {;eusart.c: 254: eusartRxHead = 0;
  4944  02A0  01C1               	clrf	_eusartRxHead	;volatile
  4945  02A1                     i1l1522:
  4946                           
  4947                           ;eusart.c: 255: };eusart.c: 256: eusartRxCount++;
  4948  02A1  3001               	movlw	1
  4949  02A2  00F0               	movwf	??_EUSART_RxDataHandler
  4950  02A3  0870               	movf	??_EUSART_RxDataHandler,w
  4951  02A4  07BF               	addwf	_eusartRxCount,f	;volatile
  4952  02A5                     i1l313:
  4953  02A5  0008               	return
  4954  02A6                     __end_of_EUSART_RxDataHandler:
  4955  007E                     btemp	set	126	;btemp
  4956  007E                     int$flags	set	126
  4957  007E                     wtemp0	set	126
  4958                           
  4959                           	psect	config
  4960                           
  4961                           ;Config register CONFIG1 @ 0x8007
  4962                           ;	Oscillator Selection Bits
  4963                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  4964                           ;	Watchdog Timer Enable
  4965                           ;	WDTE = OFF, WDT disabled
  4966                           ;	Power-up Timer Enable
  4967                           ;	PWRTE = OFF, PWRT disabled
  4968                           ;	MCLR Pin Function Select
  4969                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  4970                           ;	Flash Program Memory Code Protection
  4971                           ;	CP = OFF, Program memory code protection is disabled
  4972                           ;	Brown-out Reset Enable
  4973                           ;	BOREN = OFF, Brown-out Reset disabled
  4974                           ;	Clock Out Enable
  4975                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  4976                           ;	Internal/External Switchover Mode
  4977                           ;	IESO = ON, Internal/External Switchover Mode is enabled
  4978                           ;	Fail-Safe Clock Monitor Enable
  4979                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  4980  8007                     	org	32775
  4981  8007  39E4               	dw	14820
  4982                           
  4983                           ;Config register CONFIG2 @ 0x8008
  4984                           ;	Flash Memory Self-Write Protection
  4985                           ;	WRT = OFF, Write protection off
  4986                           ;	Peripheral Pin Select one-way control
  4987                           ;	PPS1WAY = ON, The PPSLOCK bit cannot be cleared once it is set by software
  4988                           ;	Zero-cross detect disable
  4989                           ;	ZCDDIS = ON, Zero-cross detect circuit is disabled at POR
  4990                           ;	Phase Lock Loop enable
  4991                           ;	PLLEN = OFF, 4x PLL is enabled when software sets the SPLLEN bit
  4992                           ;	Stack Overflow/Underflow Reset Enable
  4993                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  4994                           ;	Brown-out Reset Voltage Selection
  4995                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  4996                           ;	Low-Power Brown Out Reset
  4997                           ;	LPBOR = OFF, Low-Power BOR is disabled
  4998                           ;	Low-Voltage Programming Enable
  4999                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  5000  8008                     	org	32776
  5001  8008  1EFF               	dw	7935

Data Sizes:
    Strings     4
    Constant    10
    Data        0
    BSS         36
    Persistent  45
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     17      66
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    printf@f	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_1(CODE[4]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    EUSART_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Receive_ISR(), 

    EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Receive_ISR(), Absolute function(), 

    EUSART_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Transmit_ISR(), 

    EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Transmit_ISR(), Absolute function(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), Absolute function(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), Absolute function(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), Absolute function(), 

    TMR2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR2_DefaultInterruptHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR2_DefaultInterruptHandler(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _printf->___lwmod
    _putch->_EUSART_Write
    ___lwmod->___lwdiv
    _EUSART_Receive_ISR->_EUSART_RxDataHandler
    _EUSART_DefaultErrorHandler->_EUSART_RxDataHandler

Critical Paths under _main in BANK0

    _SYSTEM_Initialize->_EUSART_Initialize
    _TMR2_Initialize->_TMR2_SetInterruptHandler
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler
    _EUSART_Initialize->_EUSART_SetRxInterruptHandler
    _EUSART_Initialize->_EUSART_SetTxInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _TMR2_DefaultInterruptHandler->_printf

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     588
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     588
                     _ADC_Initialize
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _PWM1_Initialize
                    _TMR2_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0      98
           _TMR2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR2_SetInterruptHandler                             2     0      2      98
                                             14 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PWM1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    1     1      0     490
                                             16 BANK0      1     1      0
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetTxInterruptHandler                         2     0      2      98
                                             14 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetRxInterruptHandler                         2     0      2      98
                                             14 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2      98
                                             14 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2      98
                                             14 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2      98
                                             14 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           0     0      0    1153
                   Absolute function *
                 _EUSART_Receive_ISR *
                _EUSART_Transmit_ISR *
                           _TMR2_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR2_ISR                                             0     0      0    1153
                      _TMR2_CallBack
 ---------------------------------------------------------------------------------
 (6) _TMR2_CallBack                                        0     0      0    1153
                   Absolute function *
       _TMR2_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (7) _TMR2_DefaultInterruptHandler                         0     0      0    1153
                             _printf
 ---------------------------------------------------------------------------------
 (8) _printf                                              22    18      4    1153
                                              0 BANK0     14    10      4
                            ___lwdiv
                            ___lwmod
                              _putch
 ---------------------------------------------------------------------------------
 (9) _putch                                                1     1      0      66
                                              2 COMMON     1     1      0
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (10) _EUSART_Write                                        2     2      0      44
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (9) ___lwmod                                              6     2      4     311
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (9) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (5) _EUSART_Transmit_ISR                                  1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _EUSART_Receive_ISR                                   0     0      0       0
                   Absolute function *
         _EUSART_DefaultErrorHandler *
  _EUSART_DefaultFramingErrorHandler *
  _EUSART_DefaultOverrunErrorHandler *
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (6) _EUSART_DefaultOverrunErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _EUSART_DefaultFramingErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _EUSART_DefaultErrorHandler                           0     0      0       0
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (6) _EUSART_RxDataHandler                                 1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADC_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PWM1_Initialize
     _TMR2_Initialize
       _TMR2_SetInterruptHandler
     _WDT_Initialize

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _EUSART_Receive_ISR *
     Absolute function(Fake) *
     _EUSART_DefaultErrorHandler *
       _EUSART_RxDataHandler
     _EUSART_DefaultFramingErrorHandler *
     _EUSART_DefaultOverrunErrorHandler *
     _EUSART_RxDataHandler *
   _EUSART_Transmit_ISR *
   _TMR2_ISR *
     _TMR2_CallBack
       Absolute function(Fake) *
       _TMR2_DefaultInterruptHandler *
         _printf
           ___lwdiv
           ___lwmod
             ___lwdiv (ARG)
           _putch
             _EUSART_Write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     11      42       5       82.5%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      50      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      50      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Fri Feb 05 15:44:53 2021

                ?_EUSART_SetRxInterruptHandler 0052               __end_of_TMR2_SetInterruptHandler 0317  
                                           l53 02F9                                             l39 0248  
                                           l81 02CE                                            l106 0316  
                                          l141 02BB                                            l144 030A  
                                          l331 0334                                            l147 0348  
                                          l325 032E                                            l166 0302  
                                          l334 031C                                            l262 014D  
                                          l328 0328                                            l337 0322  
                                          l375 02E4                                            l376 02E4  
                                          _PR2 001B                         ??_EUSART_RxDataHandler 0070  
                                          _cnt 003C                                            _sec 003A  
               ?_EUSART_SetFramingErrorHandler 0052                                _TMR2_Initialize 02BC  
                                          wreg 0009                                           l1510 0323  
                                         l1512 032F                                           l1504 031D  
                                         l1600 010C                                           l1506 0317  
                                         l1610 0125                                           l1602 0114  
                                         l1530 022C                                           l1508 0329  
                                         l1620 0144                                           l1612 0127  
                                         l1604 011E                                           l1540 0235  
                                         l1532 022E                                           l1524 0222  
                                         l1622 0148                                           l1614 0128  
                                         l1606 0121                                           l1550 0240  
                                         l1542 0236                                           l1534 0230  
                                         l1526 0225                                           l1624 0149  
                                         l1616 0130                                           l1608 0123  
                                         l1552 0243                                           l1544 0239  
                                         l1536 0231                                           l1528 0228  
                                         l1560 02F7                                           l1720 02E3  
                                         l1626 014A                                           l1618 0138  
                                         l1554 0246                                           l1546 023B  
                                         l1538 0233                                           l1570 02C3  
                                         l1562 02BC                                           l1714 02DC  
                                         l1628 014B                                           l1580 0306  
                                         l1548 023E                                           l1556 02F1  
                                         l1572 02CB                                           l1564 02BF  
                                         l1716 02DF                                           l1590 02FD  
                                         l1582 0307                                           l1558 02F6  
                                         l1494 0311                                           l1566 02C0  
                                         l1638 02A6                                           l1718 02E2  
                                         l1592 02FE                                           l1584 0308  
                                         l1568 02C1                                           l1594 02FF  
                                         l1578 0303                                           l1586 0345  
                                         l1596 0300                                           l1588 02FA  
                                         l1598 010A                                           STR_1 0341  
                      __end_of_PWM1_Initialize 02FA                                           _LATA 010C  
                                         _LATC 010E                                           i1l99 033A  
                                         _TMR2 001A                                           _WPUA 020C  
                                         _WPUC 020E                                           _main 02DC  
                                         fsr0h 0005                                           fsr1h 0007  
                                         indf0 0000                                           fsr0l 0004  
                                         indf1 0001                                           fsr1l 0006  
                                         btemp 007E                                           start 003A  
                                ?_EUSART_Write 0070                 __size_of_OSCILLATOR_Initialize 0008  
                __end_of_OSCILLATOR_Initialize 030B                                          ?_main 0070  
                                        _T2CON 001C                                __end_of___lwdiv 018A  
                                        i1l103 02DB                                          i1l114 028B  
                                        i1l302 026A                                          i1l313 02A5  
                                        i1l322 0350                                          i1l316 0351  
                                        i1l309 01C3                                          i1l319 034C  
                              __end_of___lwmod 01F8                                          i1l290 0221  
                                        i1l362 0038                                          i1l355 001A  
                                        i1l356 0038                                          i1l357 002A  
                                        i1l286 01FF                                          i1l287 0208  
                                        i1l296 0340                                          i1l472 0109  
                                        i1l299 0268                                          i1l748 0189  
                                        i1l758 01F7                                          u50_20 0175  
                                        u50_21 0174                                          u50_25 0171  
                                        u43_20 01FF                                          u43_21 01FE  
                                        u51_25 017B                                          u52_20 0185  
                                        u44_20 0204                                          u60_20 0080  
                                        u52_21 0184                                          u44_21 0203  
                                        u60_21 007F                                          u53_20 01CA  
                                        u45_20 021C                                          u61_20 00A4  
                                        u53_21 01C9                                          u45_21 021B  
                                        u61_21 00A3                                          u61_25 00A0  
                                        u46_20 0156                                          u62_20 00AF  
                                        u46_21 0155                                          u62_21 00AE  
                                        u54_25 01CE                                          u71_20 0250  
                                        u55_20 01DA                                          u63_20 00B5  
                                        u71_21 024F                                          u55_21 01D9  
                                        u63_21 00B4                                          u47_25 015A  
                                        u72_20 0262                                          u48_20 0166  
                                        u56_20 01E4                                          u64_20 00F4  
                                        u80_20 0024                                          u72_21 0261  
                                        u48_21 0165                                          u56_21 01E3  
                                        u64_21 00F3                                          u80_21 0023  
                                        u56_25 01E0                                          u73_20 0195  
                                        u65_20 0109                                          u81_20 002F  
                                        u73_21 0194                                          u65_21 0108  
                                        u81_21 002E                                          _TRISA 008C  
                                        u49_25 0167                                          u57_25 01E9  
                                        _TRISC 008E                                          u74_20 01A5  
                                        u58_20 01F3                                          u66_20 0279  
                                        u82_20 0034                                          u74_21 01A4  
                                        u58_21 01F2                                          u66_21 0278  
                                        u82_21 0033                                          u67_20 02A0  
                                        u75_20 01BA                                          u59_20 0054  
                                        u67_21 029F                                          u75_21 01B9  
                                        u59_21 0053                                          u68_20 02D6  
                                        u76_20 000A                                          u68_21 02D5  
                                        u76_21 0009                                          u77_20 000F  
                                        u77_21 000E                                          u78_20 0014  
                                        u78_21 0013                                          u79_20 001F  
                                        u79_21 001E                                          _RXPPS 0E24  
                             __end_of_TMR2_ISR 033B                                __end_of_dpowers 02F1  
                               _WDT_Initialize 0345                                          _putch 033B  
                                        pclath 000A                                          status 0003  
                                        wtemp0 007E                                __initialization 003C  
                                 __end_of_main 02E7                                 ??_EUSART_Write 0070  
                      __end_of_TMR2_Initialize 02CF                    ?_INTERRUPT_InterruptManager 0070  
               ??_EUSART_SetRxInterruptHandler 0054                       _TMR2_SetInterruptHandler 0311  
                                       ??_main 0055                         __end_of_WDT_Initialize 0349  
    __end_of_EUSART_DefaultFramingErrorHandler 0352     __size_of_EUSART_DefaultFramingErrorHandler 0001  
          ??_EUSART_DefaultFramingErrorHandler 0070             ?_EUSART_DefaultFramingErrorHandler 0070  
            _EUSART_DefaultFramingErrorHandler 0351                                         _ADCON0 009D  
                                       _ADCON1 009E                                         _ADCON2 009F  
                   _EUSART_OverrunErrorHandler 0057                                         _ADRESH 009C  
                                       _ADRESL 009B                                         _CCPR1H 0292  
                                       _CCPR1L 0291                                         _ANSELA 018C  
                                       ?_putch 0070                                         _ANSELC 018E  
                                       _BORCON 0116                                         _RC1REG 0199  
                                       _RC1PPS 0EA1                                         _RC1STA 019D  
                                       _RC4PPS 0EA4                               ?_PWM1_Initialize 0070  
                                       i1l1400 0150                                         i1l1410 0166  
                                       i1l1402 0156                                         i1l1412 0175  
                                       i1l1404 0159                                         i1l1420 0185  
                                       i1l1500 0284                                         i1l1414 0179  
                                       i1l1406 015E                                         i1l1430 01D2  
                                       i1l1502 0289                                         i1l1520 02A0  
                                       i1l1416 017A                                         i1l1408 0162  
                                       i1l1440 01ED                                         i1l1432 01D6  
                                       i1l1424 01C4                                         _ODCONA 028C  
                                       i1l1522 02A1                                         i1l1514 028C  
                                       i1l1418 017F                                         i1l1434 01DA  
                                       i1l1426 01CA                                         i1l1442 01F3  
                                       i1l1450 0054                                         _ODCONC 028E  
                                       i1l1516 0296                                         i1l1436 01E4  
                                       i1l1428 01CD                                         i1l1380 01F9  
                                       i1l1460 0078                                         i1l1452 0059  
                                       i1l1700 000A                                         i1l1518 029A  
                                       i1l1630 0349                                         i1l1438 01E8  
                                       i1l1390 021C                                         i1l1382 0204  
                                       i1l1462 007C                                         i1l1446 0048  
                                       i1l1710 002F                                         i1l1702 000F  
                                       i1l1632 034D                                         i1l1392 021D  
                                       i1l1384 0209                                         i1l1480 00AF  
                                       i1l1464 0080                                         i1l1456 005A  
                                       i1l1448 004E                                         i1l1712 0034  
                                       i1l1704 0014                                         i1l1386 0212  
                                       i1l1394 021F                                         i1l1378 01F9  
                                       i1l1490 00EA                                         i1l1482 00B5  
                                       i1l1474 008B                                         i1l1466 0084  
                                       i1l1458 0071                                         i1l1634 0335  
                                       i1l1706 001F                                         i1l1388 0216  
                                       i1l1396 033C                                         i1l1484 00B9  
                                       i1l1468 0089                                         i1l1492 00F4  
                                       i1l1636 0337                                         i1l1708 0024  
                                       i1l1670 0262                                         i1l1662 0249  
                                       i1l1398 014E                                         i1l1486 00BF  
                                       i1l1478 00A5                                         i1l1574 02CF  
                                       i1l1680 019B                                         i1l1672 0263  
                                       i1l1664 0250                                         i1l1488 00E6  
                                       i1l1496 026B                                         i1l1576 02D6  
                                       i1l1690 01BA                                         i1l1682 01A0  
                                       i1l1674 018A                                         i1l1666 0257  
                                       i1l1498 0279                                         i1l1692 01C0  
                                       i1l1684 01A5                                         i1l1676 0190  
                                       i1l1668 025C                                         i1l1686 01AB  
                                       i1l1678 0195                                         i1l1688 01B0  
                                       i1l1698 0006                                         _INLVLA 038C  
                                       _INLVLC 038E                                         _OSCCON 0099  
                                       _TX1REG 019A                                         _WDTCON 0097  
                                       _TX1STA 019E                                      ??___lwdiv 0074  
                                    ??___lwmod 007C                            _EUSART_Transmit_ISR 0249  
                                       _printf 0048                                ?_WDT_Initialize 0070  
     TMR2_SetInterruptHandler@InterruptHandler 0052                           ?_EUSART_Transmit_ISR 0070  
                            _SYSTEM_Initialize 02A6                        __end_of__initialization 0044  
                        __end_of_TMR2_CallBack 02DC                             ?_SYSTEM_Initialize 0070  
         __end_of_EUSART_SetTxInterruptHandler 031D          __size_of_EUSART_SetTxInterruptHandler 0006  
                 _EUSART_SetTxInterruptHandler 0317                                 __pcstackCOMMON 0070  
                          ??_SYSTEM_Initialize 0055                                      ?_TMR2_ISR 0070  
                                __end_of_putch 0341                               ?_TMR2_Initialize 0070  
                               _OPTION_REGbits 0095                           _eusartRxStatusBuffer 0020  
              ??_EUSART_SetOverrunErrorHandler 0054                      __end_of_SYSTEM_Initialize 02BC  
                        ??_EUSART_Transmit_ISR 0070                                        ??_putch 0072  
                                   __pbssBANK0 0020                           __end_of_EUSART_Write 0222  
                  __size_of_EUSART_Receive_ISR 003A                                     __pmaintext 02DC  
                ?_EUSART_SetTxInterruptHandler 0052               _EUSART_TxDefaultInterruptHandler 005D  
                                   ??_TMR2_ISR 007E                                     __pintentry 0004  
                                      _CCP1CON 0293                   ??_EUSART_DefaultErrorHandler 0071  
                                      ?_printf 0044                        __size_of_ADC_Initialize 0009  
                                _eusartRxCount 003F                                        _SP1BRGH 019C  
                                      _SP1BRGL 019B                  __size_of_EUSART_RxDataHandler 001A  
                                      _OSCSTAT 009A                                        _OSCTUNE 0098  
                                      _SLRCONA 030C                                        _SLRCONC 030E  
                     ??_EUSART_SetErrorHandler 0054                           _ADC_InterruptHandler 0038  
          __size_of_EUSART_DefaultErrorHandler 0004                     ??_TMR2_SetInterruptHandler 0054  
                                      ___lwdiv 014E                                        ___lwmod 01C4  
                                      __ptext1 02A6                                        __ptext2 0345  
                                      __ptext3 02BC                                        __ptext4 0311  
                                      __ptext5 02F1                                        __ptext6 0222  
                                      __ptext7 0303                                        __ptext8 010A  
                                      __ptext9 0317                                __size_of_printf 00C2  
                                      _dpowers 02E7                          _OSCILLATOR_Initialize 0303  
                                    _T2CONbits 001C                       ??_PIN_MANAGER_Initialize 0052  
                   __size_of_SYSTEM_Initialize 0016                                        clrloop0 030C  
                         end_of_initialization 0044          __end_of_EUSART_SetOverrunErrorHandler 0329  
       __size_of_EUSART_SetOverrunErrorHandler 0006                  _EUSART_SetOverrunErrorHandler 0323  
                            _EUSART_Initialize 010A                             ?_EUSART_Initialize 0070  
                                    _RCSTAbits 019D                                        printf@c 0051  
                                      printf@f 0044                            ??_EUSART_Initialize 0054  
                             ??_WDT_Initialize 0052                 ??_EUSART_SetTxInterruptHandler 0054  
                        __size_of_EUSART_Write 002A                __size_of_EUSART_SetErrorHandler 0006  
                    __end_of_EUSART_Initialize 014E                                      _TXSTAbits 019E  
                     __size_of_PWM1_Initialize 0009           __end_of_TMR2_DefaultInterruptHandler 028C  
        __size_of_TMR2_DefaultInterruptHandler 0021                   _TMR2_DefaultInterruptHandler 026B  
           __end_of_EUSART_DefaultErrorHandler 0351                     _EUSART_DefaultErrorHandler 034D  
                                 _EUSART_Write 01F8                              __size_of_TMR2_ISR 0006  
                               _ADC_Initialize 02FA                         ?_OSCILLATOR_Initialize 0070  
                               __end_of_printf 010A                            start_initialization 003C  
              __size_of_PIN_MANAGER_Initialize 0027   EUSART_SetRxInterruptHandler@interruptHandler 0052  
 EUSART_SetTxInterruptHandler@interruptHandler 0052                                    putch@txData 0072  
               ?_EUSART_SetOverrunErrorHandler 0052                     _EUSART_FramingErrorHandler 0059  
                       _EUSART_SetErrorHandler 032F                                    _CCPTMRSbits 029E  
                       __end_of_ADC_Initialize 0303                  ?_TMR2_DefaultInterruptHandler 0070  
                                     ??_printf 0048                         __size_of_TMR2_CallBack 000D  
                  __end_of_EUSART_Transmit_ISR 026B                                      ___latbits 0002  
                                __pcstackBANK0 0044                       __size_of_TMR2_Initialize 0013  
                   __end_of_EUSART_Receive_ISR 01C4                     __size_of_EUSART_Initialize 0044  
             _EUSART_RxDefaultInterruptHandler 005B                                      __pnvBANK0 0055  
                 __end_of_EUSART_RxDataHandler 02A6                               ___lwdiv@dividend 0072  
                       _PIN_MANAGER_Initialize 0222                                       ?___lwdiv 0070  
                                     ?___lwmod 0078                                ?_ADC_Initialize 0070  
                                 _eusartRxHead 0041                                   _eusartTxHead 0043  
                                 _eusartRxTail 0040                                   _eusartTxTail 0042  
                            ??_PWM1_Initialize 0052                   ??_INTERRUPT_InterruptManager 007E  
                      _eusartTxBufferRemaining 0061                                       _BAUD1CON 019F  
                             ___lwdiv@quotient 0075                                 __size_of_putch 0006  
                               _eusartRxBuffer 0028                                 _eusartTxBuffer 0030  
       EUSART_SetErrorHandler@interruptHandler 0052                                      clear_ram0 030B  
                                _TMR2_CallBack 02CF                                       _PIE1bits 0091  
                            _eusartRxLastError 003E            __size_of_INTERRUPT_InterruptManager 0036  
                                     _PIR1bits 0011                ??_EUSART_SetFramingErrorHandler 0054  
    __end_of_EUSART_DefaultOverrunErrorHandler 034D     __size_of_EUSART_DefaultOverrunErrorHandler 0004  
          ??_EUSART_DefaultOverrunErrorHandler 0070             ?_EUSART_DefaultOverrunErrorHandler 0070  
            _EUSART_DefaultOverrunErrorHandler 0349                                       _TMR2_ISR 0335  
                                   _ADCON0bits 009D                                     printf@flag 004D  
                                   printf@prec 004E                 ??_TMR2_DefaultInterruptHandler 007E  
            __size_of_TMR2_SetInterruptHandler 0006                      ?_TMR2_SetInterruptHandler 0052  
                            ??_TMR2_Initialize 0054                                 ?_TMR2_CallBack 0070  
                      ??_OSCILLATOR_Initialize 0052                            _EUSART_ErrorHandler 0055  
                  ?_EUSART_DefaultErrorHandler 0070                               __size_of___lwdiv 003C  
                             __size_of___lwmod 0034                                ___lwdiv@divisor 0070  
                         _EUSART_RxDataHandler 028C                                ___lwdiv@counter 0077  
                                     __ptext10 031D                                       __ptext11 0323  
                                     __ptext20 033B                                       __ptext12 0329  
                                     __ptext21 01F8                                       __ptext13 032F  
                                     __ptext22 01C4                                       __ptext14 02FA  
                                     __ptext23 014E                                       __ptext24 0249  
                                     __ptext16 0335                                       __ptext25 018A  
                                     __ptext17 02CF                                       __ptext26 0349  
                                     __ptext18 026B                                       __ptext27 0351  
                                     __ptext19 0048                                       __ptext28 034D  
                                     __ptext29 028C                                  __size_of_main 000B  
                      ?_EUSART_SetErrorHandler 0052                                     _RC1STAbits 019D  
EUSART_SetOverrunErrorHandler@interruptHandler 0052                                       int$flags 007E  
           __end_of_INTERRUPT_InterruptManager 003A                     _INTERRUPT_InterruptManager 0004  
        __end_of_EUSART_SetFramingErrorHandler 032F         __size_of_EUSART_SetFramingErrorHandler 0006  
                _EUSART_SetFramingErrorHandler 0329                                      printf@val 004F  
                                   _INTCONbits 000B                          ?_EUSART_RxDataHandler 0070  
                      __size_of_WDT_Initialize 0004                                       intlevel1 0000  
                              ??_TMR2_CallBack 007E                               ___lwmod@dividend 007A  
                      ?_PIN_MANAGER_Initialize 0070                 __end_of_EUSART_SetErrorHandler 0335  
                              _PWM1_Initialize 02F1                               ??_ADC_Initialize 0052  
         __end_of_EUSART_SetRxInterruptHandler 0323          __size_of_EUSART_SetRxInterruptHandler 0006  
                 _EUSART_SetRxInterruptHandler 031D                                       printf@ap 004C  
                           _EUSART_Receive_ISR 018A  EUSART_SetFramingErrorHandler@interruptHandler 0052  
                                __pstringtext1 02E7                                  __pstringtext2 0341  
                                __pstringtext3 0000                            ?_EUSART_Receive_ISR 0070  
                              ___lwmod@divisor 0078                                ___lwmod@counter 007D  
                                   _TX1STAbits 019E                             EUSART_Write@txData 0071  
                 __size_of_EUSART_Transmit_ISR 0022                 __end_of_PIN_MANAGER_Initialize 0249  
                         ??_EUSART_Receive_ISR 0071                          _TMR2_InterruptHandler 005F  
