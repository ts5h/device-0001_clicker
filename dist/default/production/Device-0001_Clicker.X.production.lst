

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Fri Feb 05 16:18:56 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F1705
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2
    28                           	psect	intentry,global,class=CODE,delta=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    33                           	psect	text20,local,class=CODE,merge=1,delta=2
    34                           	psect	text21,local,class=CODE,merge=1,delta=2
    35                           	psect	text22,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text23,local,class=CODE,merge=1,delta=2,group=2
    37                           	psect	text24,local,class=CODE,merge=1,delta=2
    38                           	psect	text25,local,class=CODE,merge=1,delta=2
    39                           	psect	text26,local,class=CODE,merge=1,delta=2
    40                           	psect	text27,local,class=CODE,merge=1,delta=2
    41                           	psect	text28,local,class=CODE,merge=1,delta=2
    42                           	psect	text29,local,class=CODE,merge=1,delta=2
    43                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    44                           	dabs	1,0x7E,2
    45  0000                     
    46                           ; Version 2.20
    47                           ; Generated 12/02/2020 GMT
    48                           ; 
    49                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    50                           ; All rights reserved.
    51                           ; 
    52                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    53                           ; 
    54                           ; Redistribution and use in source and binary forms, with or without modification, are
    55                           ; permitted provided that the following conditions are met:
    56                           ; 
    57                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    58                           ;        conditions and the following disclaimer.
    59                           ; 
    60                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    61                           ;        of conditions and the following disclaimer in the documentation and/or other
    62                           ;        materials provided with the distribution.
    63                           ; 
    64                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    65                           ;        software without specific prior written permission.
    66                           ; 
    67                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    68                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    69                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    70                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    71                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    72                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    73                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    74                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    75                           ; 
    76                           ; 
    77                           ; Code-generator required, PIC16F1705 Definitions
    78                           ; 
    79                           ; SFR Addresses
    80  0000                     	;# 
    81  0001                     	;# 
    82  0002                     	;# 
    83  0003                     	;# 
    84  0004                     	;# 
    85  0005                     	;# 
    86  0006                     	;# 
    87  0007                     	;# 
    88  0008                     	;# 
    89  0009                     	;# 
    90  000A                     	;# 
    91  000B                     	;# 
    92  000C                     	;# 
    93  000E                     	;# 
    94  0011                     	;# 
    95  0012                     	;# 
    96  0013                     	;# 
    97  0015                     	;# 
    98  0016                     	;# 
    99  0016                     	;# 
   100  0017                     	;# 
   101  0018                     	;# 
   102  0019                     	;# 
   103  001A                     	;# 
   104  001B                     	;# 
   105  001C                     	;# 
   106  008C                     	;# 
   107  008E                     	;# 
   108  0091                     	;# 
   109  0092                     	;# 
   110  0093                     	;# 
   111  0095                     	;# 
   112  0096                     	;# 
   113  0097                     	;# 
   114  0098                     	;# 
   115  0099                     	;# 
   116  009A                     	;# 
   117  009B                     	;# 
   118  009B                     	;# 
   119  009C                     	;# 
   120  009D                     	;# 
   121  009E                     	;# 
   122  009F                     	;# 
   123  010C                     	;# 
   124  010E                     	;# 
   125  0111                     	;# 
   126  0112                     	;# 
   127  0113                     	;# 
   128  0114                     	;# 
   129  0115                     	;# 
   130  0116                     	;# 
   131  0117                     	;# 
   132  0118                     	;# 
   133  0119                     	;# 
   134  011C                     	;# 
   135  018C                     	;# 
   136  018E                     	;# 
   137  0191                     	;# 
   138  0191                     	;# 
   139  0192                     	;# 
   140  0193                     	;# 
   141  0193                     	;# 
   142  0194                     	;# 
   143  0195                     	;# 
   144  0196                     	;# 
   145  0197                     	;# 
   146  0199                     	;# 
   147  0199                     	;# 
   148  0199                     	;# 
   149  019A                     	;# 
   150  019A                     	;# 
   151  019A                     	;# 
   152  019B                     	;# 
   153  019B                     	;# 
   154  019B                     	;# 
   155  019B                     	;# 
   156  019B                     	;# 
   157  019C                     	;# 
   158  019C                     	;# 
   159  019C                     	;# 
   160  019D                     	;# 
   161  019D                     	;# 
   162  019D                     	;# 
   163  019E                     	;# 
   164  019E                     	;# 
   165  019E                     	;# 
   166  019F                     	;# 
   167  019F                     	;# 
   168  019F                     	;# 
   169  019F                     	;# 
   170  019F                     	;# 
   171  020C                     	;# 
   172  020E                     	;# 
   173  0211                     	;# 
   174  0211                     	;# 
   175  0212                     	;# 
   176  0212                     	;# 
   177  0213                     	;# 
   178  0213                     	;# 
   179  0214                     	;# 
   180  0214                     	;# 
   181  0215                     	;# 
   182  0215                     	;# 
   183  0215                     	;# 
   184  0215                     	;# 
   185  0216                     	;# 
   186  0216                     	;# 
   187  0217                     	;# 
   188  0217                     	;# 
   189  028C                     	;# 
   190  028E                     	;# 
   191  0291                     	;# 
   192  0291                     	;# 
   193  0292                     	;# 
   194  0293                     	;# 
   195  0293                     	;# 
   196  0298                     	;# 
   197  0298                     	;# 
   198  0299                     	;# 
   199  029A                     	;# 
   200  029A                     	;# 
   201  029E                     	;# 
   202  030C                     	;# 
   203  030E                     	;# 
   204  038C                     	;# 
   205  038E                     	;# 
   206  0391                     	;# 
   207  0392                     	;# 
   208  0393                     	;# 
   209  0397                     	;# 
   210  0398                     	;# 
   211  0399                     	;# 
   212  0415                     	;# 
   213  0416                     	;# 
   214  0417                     	;# 
   215  041C                     	;# 
   216  041D                     	;# 
   217  041E                     	;# 
   218  0511                     	;# 
   219  0515                     	;# 
   220  0617                     	;# 
   221  0618                     	;# 
   222  0619                     	;# 
   223  0619                     	;# 
   224  061A                     	;# 
   225  061B                     	;# 
   226  061C                     	;# 
   227  061C                     	;# 
   228  0691                     	;# 
   229  0692                     	;# 
   230  0693                     	;# 
   231  0694                     	;# 
   232  0695                     	;# 
   233  0696                     	;# 
   234  0697                     	;# 
   235  0698                     	;# 
   236  0699                     	;# 
   237  069A                     	;# 
   238  069B                     	;# 
   239  069C                     	;# 
   240  069D                     	;# 
   241  069E                     	;# 
   242  069F                     	;# 
   243  0E0F                     	;# 
   244  0E10                     	;# 
   245  0E11                     	;# 
   246  0E12                     	;# 
   247  0E13                     	;# 
   248  0E14                     	;# 
   249  0E15                     	;# 
   250  0E17                     	;# 
   251  0E20                     	;# 
   252  0E21                     	;# 
   253  0E22                     	;# 
   254  0E24                     	;# 
   255  0E25                     	;# 
   256  0E28                     	;# 
   257  0E29                     	;# 
   258  0E2A                     	;# 
   259  0E2B                     	;# 
   260  0E90                     	;# 
   261  0E91                     	;# 
   262  0E92                     	;# 
   263  0E94                     	;# 
   264  0E95                     	;# 
   265  0EA0                     	;# 
   266  0EA1                     	;# 
   267  0EA2                     	;# 
   268  0EA3                     	;# 
   269  0EA4                     	;# 
   270  0EA5                     	;# 
   271  0F0F                     	;# 
   272  0F10                     	;# 
   273  0F11                     	;# 
   274  0F12                     	;# 
   275  0F13                     	;# 
   276  0F14                     	;# 
   277  0F15                     	;# 
   278  0F16                     	;# 
   279  0F17                     	;# 
   280  0F18                     	;# 
   281  0F19                     	;# 
   282  0F1A                     	;# 
   283  0F1B                     	;# 
   284  0F1C                     	;# 
   285  0F1D                     	;# 
   286  0F1E                     	;# 
   287  0F1F                     	;# 
   288  0F20                     	;# 
   289  0F21                     	;# 
   290  0F22                     	;# 
   291  0F23                     	;# 
   292  0F24                     	;# 
   293  0F25                     	;# 
   294  0F26                     	;# 
   295  0F27                     	;# 
   296  0F28                     	;# 
   297  0F29                     	;# 
   298  0F2A                     	;# 
   299  0F2B                     	;# 
   300  0F2C                     	;# 
   301  0F2D                     	;# 
   302  0F9E                     	;# 
   303  0FE4                     	;# 
   304  0FE5                     	;# 
   305  0FE6                     	;# 
   306  0FE7                     	;# 
   307  0FE8                     	;# 
   308  0FE9                     	;# 
   309  0FEA                     	;# 
   310  0FEB                     	;# 
   311  0FED                     	;# 
   312  0FEE                     	;# 
   313  0FEF                     	;# 
   314  0000                     	;# 
   315  0001                     	;# 
   316  0002                     	;# 
   317  0003                     	;# 
   318  0004                     	;# 
   319  0005                     	;# 
   320  0006                     	;# 
   321  0007                     	;# 
   322  0008                     	;# 
   323  0009                     	;# 
   324  000A                     	;# 
   325  000B                     	;# 
   326  000C                     	;# 
   327  000E                     	;# 
   328  0011                     	;# 
   329  0012                     	;# 
   330  0013                     	;# 
   331  0015                     	;# 
   332  0016                     	;# 
   333  0016                     	;# 
   334  0017                     	;# 
   335  0018                     	;# 
   336  0019                     	;# 
   337  001A                     	;# 
   338  001B                     	;# 
   339  001C                     	;# 
   340  008C                     	;# 
   341  008E                     	;# 
   342  0091                     	;# 
   343  0092                     	;# 
   344  0093                     	;# 
   345  0095                     	;# 
   346  0096                     	;# 
   347  0097                     	;# 
   348  0098                     	;# 
   349  0099                     	;# 
   350  009A                     	;# 
   351  009B                     	;# 
   352  009B                     	;# 
   353  009C                     	;# 
   354  009D                     	;# 
   355  009E                     	;# 
   356  009F                     	;# 
   357  010C                     	;# 
   358  010E                     	;# 
   359  0111                     	;# 
   360  0112                     	;# 
   361  0113                     	;# 
   362  0114                     	;# 
   363  0115                     	;# 
   364  0116                     	;# 
   365  0117                     	;# 
   366  0118                     	;# 
   367  0119                     	;# 
   368  011C                     	;# 
   369  018C                     	;# 
   370  018E                     	;# 
   371  0191                     	;# 
   372  0191                     	;# 
   373  0192                     	;# 
   374  0193                     	;# 
   375  0193                     	;# 
   376  0194                     	;# 
   377  0195                     	;# 
   378  0196                     	;# 
   379  0197                     	;# 
   380  0199                     	;# 
   381  0199                     	;# 
   382  0199                     	;# 
   383  019A                     	;# 
   384  019A                     	;# 
   385  019A                     	;# 
   386  019B                     	;# 
   387  019B                     	;# 
   388  019B                     	;# 
   389  019B                     	;# 
   390  019B                     	;# 
   391  019C                     	;# 
   392  019C                     	;# 
   393  019C                     	;# 
   394  019D                     	;# 
   395  019D                     	;# 
   396  019D                     	;# 
   397  019E                     	;# 
   398  019E                     	;# 
   399  019E                     	;# 
   400  019F                     	;# 
   401  019F                     	;# 
   402  019F                     	;# 
   403  019F                     	;# 
   404  019F                     	;# 
   405  020C                     	;# 
   406  020E                     	;# 
   407  0211                     	;# 
   408  0211                     	;# 
   409  0212                     	;# 
   410  0212                     	;# 
   411  0213                     	;# 
   412  0213                     	;# 
   413  0214                     	;# 
   414  0214                     	;# 
   415  0215                     	;# 
   416  0215                     	;# 
   417  0215                     	;# 
   418  0215                     	;# 
   419  0216                     	;# 
   420  0216                     	;# 
   421  0217                     	;# 
   422  0217                     	;# 
   423  028C                     	;# 
   424  028E                     	;# 
   425  0291                     	;# 
   426  0291                     	;# 
   427  0292                     	;# 
   428  0293                     	;# 
   429  0293                     	;# 
   430  0298                     	;# 
   431  0298                     	;# 
   432  0299                     	;# 
   433  029A                     	;# 
   434  029A                     	;# 
   435  029E                     	;# 
   436  030C                     	;# 
   437  030E                     	;# 
   438  038C                     	;# 
   439  038E                     	;# 
   440  0391                     	;# 
   441  0392                     	;# 
   442  0393                     	;# 
   443  0397                     	;# 
   444  0398                     	;# 
   445  0399                     	;# 
   446  0415                     	;# 
   447  0416                     	;# 
   448  0417                     	;# 
   449  041C                     	;# 
   450  041D                     	;# 
   451  041E                     	;# 
   452  0511                     	;# 
   453  0515                     	;# 
   454  0617                     	;# 
   455  0618                     	;# 
   456  0619                     	;# 
   457  0619                     	;# 
   458  061A                     	;# 
   459  061B                     	;# 
   460  061C                     	;# 
   461  061C                     	;# 
   462  0691                     	;# 
   463  0692                     	;# 
   464  0693                     	;# 
   465  0694                     	;# 
   466  0695                     	;# 
   467  0696                     	;# 
   468  0697                     	;# 
   469  0698                     	;# 
   470  0699                     	;# 
   471  069A                     	;# 
   472  069B                     	;# 
   473  069C                     	;# 
   474  069D                     	;# 
   475  069E                     	;# 
   476  069F                     	;# 
   477  0E0F                     	;# 
   478  0E10                     	;# 
   479  0E11                     	;# 
   480  0E12                     	;# 
   481  0E13                     	;# 
   482  0E14                     	;# 
   483  0E15                     	;# 
   484  0E17                     	;# 
   485  0E20                     	;# 
   486  0E21                     	;# 
   487  0E22                     	;# 
   488  0E24                     	;# 
   489  0E25                     	;# 
   490  0E28                     	;# 
   491  0E29                     	;# 
   492  0E2A                     	;# 
   493  0E2B                     	;# 
   494  0E90                     	;# 
   495  0E91                     	;# 
   496  0E92                     	;# 
   497  0E94                     	;# 
   498  0E95                     	;# 
   499  0EA0                     	;# 
   500  0EA1                     	;# 
   501  0EA2                     	;# 
   502  0EA3                     	;# 
   503  0EA4                     	;# 
   504  0EA5                     	;# 
   505  0F0F                     	;# 
   506  0F10                     	;# 
   507  0F11                     	;# 
   508  0F12                     	;# 
   509  0F13                     	;# 
   510  0F14                     	;# 
   511  0F15                     	;# 
   512  0F16                     	;# 
   513  0F17                     	;# 
   514  0F18                     	;# 
   515  0F19                     	;# 
   516  0F1A                     	;# 
   517  0F1B                     	;# 
   518  0F1C                     	;# 
   519  0F1D                     	;# 
   520  0F1E                     	;# 
   521  0F1F                     	;# 
   522  0F20                     	;# 
   523  0F21                     	;# 
   524  0F22                     	;# 
   525  0F23                     	;# 
   526  0F24                     	;# 
   527  0F25                     	;# 
   528  0F26                     	;# 
   529  0F27                     	;# 
   530  0F28                     	;# 
   531  0F29                     	;# 
   532  0F2A                     	;# 
   533  0F2B                     	;# 
   534  0F2C                     	;# 
   535  0F2D                     	;# 
   536  0F9E                     	;# 
   537  0FE4                     	;# 
   538  0FE5                     	;# 
   539  0FE6                     	;# 
   540  0FE7                     	;# 
   541  0FE8                     	;# 
   542  0FE9                     	;# 
   543  0FEA                     	;# 
   544  0FEB                     	;# 
   545  0FED                     	;# 
   546  0FEE                     	;# 
   547  0FEF                     	;# 
   548  0000                     	;# 
   549  0001                     	;# 
   550  0002                     	;# 
   551  0003                     	;# 
   552  0004                     	;# 
   553  0005                     	;# 
   554  0006                     	;# 
   555  0007                     	;# 
   556  0008                     	;# 
   557  0009                     	;# 
   558  000A                     	;# 
   559  000B                     	;# 
   560  000C                     	;# 
   561  000E                     	;# 
   562  0011                     	;# 
   563  0012                     	;# 
   564  0013                     	;# 
   565  0015                     	;# 
   566  0016                     	;# 
   567  0016                     	;# 
   568  0017                     	;# 
   569  0018                     	;# 
   570  0019                     	;# 
   571  001A                     	;# 
   572  001B                     	;# 
   573  001C                     	;# 
   574  008C                     	;# 
   575  008E                     	;# 
   576  0091                     	;# 
   577  0092                     	;# 
   578  0093                     	;# 
   579  0095                     	;# 
   580  0096                     	;# 
   581  0097                     	;# 
   582  0098                     	;# 
   583  0099                     	;# 
   584  009A                     	;# 
   585  009B                     	;# 
   586  009B                     	;# 
   587  009C                     	;# 
   588  009D                     	;# 
   589  009E                     	;# 
   590  009F                     	;# 
   591  010C                     	;# 
   592  010E                     	;# 
   593  0111                     	;# 
   594  0112                     	;# 
   595  0113                     	;# 
   596  0114                     	;# 
   597  0115                     	;# 
   598  0116                     	;# 
   599  0117                     	;# 
   600  0118                     	;# 
   601  0119                     	;# 
   602  011C                     	;# 
   603  018C                     	;# 
   604  018E                     	;# 
   605  0191                     	;# 
   606  0191                     	;# 
   607  0192                     	;# 
   608  0193                     	;# 
   609  0193                     	;# 
   610  0194                     	;# 
   611  0195                     	;# 
   612  0196                     	;# 
   613  0197                     	;# 
   614  0199                     	;# 
   615  0199                     	;# 
   616  0199                     	;# 
   617  019A                     	;# 
   618  019A                     	;# 
   619  019A                     	;# 
   620  019B                     	;# 
   621  019B                     	;# 
   622  019B                     	;# 
   623  019B                     	;# 
   624  019B                     	;# 
   625  019C                     	;# 
   626  019C                     	;# 
   627  019C                     	;# 
   628  019D                     	;# 
   629  019D                     	;# 
   630  019D                     	;# 
   631  019E                     	;# 
   632  019E                     	;# 
   633  019E                     	;# 
   634  019F                     	;# 
   635  019F                     	;# 
   636  019F                     	;# 
   637  019F                     	;# 
   638  019F                     	;# 
   639  020C                     	;# 
   640  020E                     	;# 
   641  0211                     	;# 
   642  0211                     	;# 
   643  0212                     	;# 
   644  0212                     	;# 
   645  0213                     	;# 
   646  0213                     	;# 
   647  0214                     	;# 
   648  0214                     	;# 
   649  0215                     	;# 
   650  0215                     	;# 
   651  0215                     	;# 
   652  0215                     	;# 
   653  0216                     	;# 
   654  0216                     	;# 
   655  0217                     	;# 
   656  0217                     	;# 
   657  028C                     	;# 
   658  028E                     	;# 
   659  0291                     	;# 
   660  0291                     	;# 
   661  0292                     	;# 
   662  0293                     	;# 
   663  0293                     	;# 
   664  0298                     	;# 
   665  0298                     	;# 
   666  0299                     	;# 
   667  029A                     	;# 
   668  029A                     	;# 
   669  029E                     	;# 
   670  030C                     	;# 
   671  030E                     	;# 
   672  038C                     	;# 
   673  038E                     	;# 
   674  0391                     	;# 
   675  0392                     	;# 
   676  0393                     	;# 
   677  0397                     	;# 
   678  0398                     	;# 
   679  0399                     	;# 
   680  0415                     	;# 
   681  0416                     	;# 
   682  0417                     	;# 
   683  041C                     	;# 
   684  041D                     	;# 
   685  041E                     	;# 
   686  0511                     	;# 
   687  0515                     	;# 
   688  0617                     	;# 
   689  0618                     	;# 
   690  0619                     	;# 
   691  0619                     	;# 
   692  061A                     	;# 
   693  061B                     	;# 
   694  061C                     	;# 
   695  061C                     	;# 
   696  0691                     	;# 
   697  0692                     	;# 
   698  0693                     	;# 
   699  0694                     	;# 
   700  0695                     	;# 
   701  0696                     	;# 
   702  0697                     	;# 
   703  0698                     	;# 
   704  0699                     	;# 
   705  069A                     	;# 
   706  069B                     	;# 
   707  069C                     	;# 
   708  069D                     	;# 
   709  069E                     	;# 
   710  069F                     	;# 
   711  0E0F                     	;# 
   712  0E10                     	;# 
   713  0E11                     	;# 
   714  0E12                     	;# 
   715  0E13                     	;# 
   716  0E14                     	;# 
   717  0E15                     	;# 
   718  0E17                     	;# 
   719  0E20                     	;# 
   720  0E21                     	;# 
   721  0E22                     	;# 
   722  0E24                     	;# 
   723  0E25                     	;# 
   724  0E28                     	;# 
   725  0E29                     	;# 
   726  0E2A                     	;# 
   727  0E2B                     	;# 
   728  0E90                     	;# 
   729  0E91                     	;# 
   730  0E92                     	;# 
   731  0E94                     	;# 
   732  0E95                     	;# 
   733  0EA0                     	;# 
   734  0EA1                     	;# 
   735  0EA2                     	;# 
   736  0EA3                     	;# 
   737  0EA4                     	;# 
   738  0EA5                     	;# 
   739  0F0F                     	;# 
   740  0F10                     	;# 
   741  0F11                     	;# 
   742  0F12                     	;# 
   743  0F13                     	;# 
   744  0F14                     	;# 
   745  0F15                     	;# 
   746  0F16                     	;# 
   747  0F17                     	;# 
   748  0F18                     	;# 
   749  0F19                     	;# 
   750  0F1A                     	;# 
   751  0F1B                     	;# 
   752  0F1C                     	;# 
   753  0F1D                     	;# 
   754  0F1E                     	;# 
   755  0F1F                     	;# 
   756  0F20                     	;# 
   757  0F21                     	;# 
   758  0F22                     	;# 
   759  0F23                     	;# 
   760  0F24                     	;# 
   761  0F25                     	;# 
   762  0F26                     	;# 
   763  0F27                     	;# 
   764  0F28                     	;# 
   765  0F29                     	;# 
   766  0F2A                     	;# 
   767  0F2B                     	;# 
   768  0F2C                     	;# 
   769  0F2D                     	;# 
   770  0F9E                     	;# 
   771  0FE4                     	;# 
   772  0FE5                     	;# 
   773  0FE6                     	;# 
   774  0FE7                     	;# 
   775  0FE8                     	;# 
   776  0FE9                     	;# 
   777  0FEA                     	;# 
   778  0FEB                     	;# 
   779  0FED                     	;# 
   780  0FEE                     	;# 
   781  0FEF                     	;# 
   782  0000                     	;# 
   783  0001                     	;# 
   784  0002                     	;# 
   785  0003                     	;# 
   786  0004                     	;# 
   787  0005                     	;# 
   788  0006                     	;# 
   789  0007                     	;# 
   790  0008                     	;# 
   791  0009                     	;# 
   792  000A                     	;# 
   793  000B                     	;# 
   794  000C                     	;# 
   795  000E                     	;# 
   796  0011                     	;# 
   797  0012                     	;# 
   798  0013                     	;# 
   799  0015                     	;# 
   800  0016                     	;# 
   801  0016                     	;# 
   802  0017                     	;# 
   803  0018                     	;# 
   804  0019                     	;# 
   805  001A                     	;# 
   806  001B                     	;# 
   807  001C                     	;# 
   808  008C                     	;# 
   809  008E                     	;# 
   810  0091                     	;# 
   811  0092                     	;# 
   812  0093                     	;# 
   813  0095                     	;# 
   814  0096                     	;# 
   815  0097                     	;# 
   816  0098                     	;# 
   817  0099                     	;# 
   818  009A                     	;# 
   819  009B                     	;# 
   820  009B                     	;# 
   821  009C                     	;# 
   822  009D                     	;# 
   823  009E                     	;# 
   824  009F                     	;# 
   825  010C                     	;# 
   826  010E                     	;# 
   827  0111                     	;# 
   828  0112                     	;# 
   829  0113                     	;# 
   830  0114                     	;# 
   831  0115                     	;# 
   832  0116                     	;# 
   833  0117                     	;# 
   834  0118                     	;# 
   835  0119                     	;# 
   836  011C                     	;# 
   837  018C                     	;# 
   838  018E                     	;# 
   839  0191                     	;# 
   840  0191                     	;# 
   841  0192                     	;# 
   842  0193                     	;# 
   843  0193                     	;# 
   844  0194                     	;# 
   845  0195                     	;# 
   846  0196                     	;# 
   847  0197                     	;# 
   848  0199                     	;# 
   849  0199                     	;# 
   850  0199                     	;# 
   851  019A                     	;# 
   852  019A                     	;# 
   853  019A                     	;# 
   854  019B                     	;# 
   855  019B                     	;# 
   856  019B                     	;# 
   857  019B                     	;# 
   858  019B                     	;# 
   859  019C                     	;# 
   860  019C                     	;# 
   861  019C                     	;# 
   862  019D                     	;# 
   863  019D                     	;# 
   864  019D                     	;# 
   865  019E                     	;# 
   866  019E                     	;# 
   867  019E                     	;# 
   868  019F                     	;# 
   869  019F                     	;# 
   870  019F                     	;# 
   871  019F                     	;# 
   872  019F                     	;# 
   873  020C                     	;# 
   874  020E                     	;# 
   875  0211                     	;# 
   876  0211                     	;# 
   877  0212                     	;# 
   878  0212                     	;# 
   879  0213                     	;# 
   880  0213                     	;# 
   881  0214                     	;# 
   882  0214                     	;# 
   883  0215                     	;# 
   884  0215                     	;# 
   885  0215                     	;# 
   886  0215                     	;# 
   887  0216                     	;# 
   888  0216                     	;# 
   889  0217                     	;# 
   890  0217                     	;# 
   891  028C                     	;# 
   892  028E                     	;# 
   893  0291                     	;# 
   894  0291                     	;# 
   895  0292                     	;# 
   896  0293                     	;# 
   897  0293                     	;# 
   898  0298                     	;# 
   899  0298                     	;# 
   900  0299                     	;# 
   901  029A                     	;# 
   902  029A                     	;# 
   903  029E                     	;# 
   904  030C                     	;# 
   905  030E                     	;# 
   906  038C                     	;# 
   907  038E                     	;# 
   908  0391                     	;# 
   909  0392                     	;# 
   910  0393                     	;# 
   911  0397                     	;# 
   912  0398                     	;# 
   913  0399                     	;# 
   914  0415                     	;# 
   915  0416                     	;# 
   916  0417                     	;# 
   917  041C                     	;# 
   918  041D                     	;# 
   919  041E                     	;# 
   920  0511                     	;# 
   921  0515                     	;# 
   922  0617                     	;# 
   923  0618                     	;# 
   924  0619                     	;# 
   925  0619                     	;# 
   926  061A                     	;# 
   927  061B                     	;# 
   928  061C                     	;# 
   929  061C                     	;# 
   930  0691                     	;# 
   931  0692                     	;# 
   932  0693                     	;# 
   933  0694                     	;# 
   934  0695                     	;# 
   935  0696                     	;# 
   936  0697                     	;# 
   937  0698                     	;# 
   938  0699                     	;# 
   939  069A                     	;# 
   940  069B                     	;# 
   941  069C                     	;# 
   942  069D                     	;# 
   943  069E                     	;# 
   944  069F                     	;# 
   945  0E0F                     	;# 
   946  0E10                     	;# 
   947  0E11                     	;# 
   948  0E12                     	;# 
   949  0E13                     	;# 
   950  0E14                     	;# 
   951  0E15                     	;# 
   952  0E17                     	;# 
   953  0E20                     	;# 
   954  0E21                     	;# 
   955  0E22                     	;# 
   956  0E24                     	;# 
   957  0E25                     	;# 
   958  0E28                     	;# 
   959  0E29                     	;# 
   960  0E2A                     	;# 
   961  0E2B                     	;# 
   962  0E90                     	;# 
   963  0E91                     	;# 
   964  0E92                     	;# 
   965  0E94                     	;# 
   966  0E95                     	;# 
   967  0EA0                     	;# 
   968  0EA1                     	;# 
   969  0EA2                     	;# 
   970  0EA3                     	;# 
   971  0EA4                     	;# 
   972  0EA5                     	;# 
   973  0F0F                     	;# 
   974  0F10                     	;# 
   975  0F11                     	;# 
   976  0F12                     	;# 
   977  0F13                     	;# 
   978  0F14                     	;# 
   979  0F15                     	;# 
   980  0F16                     	;# 
   981  0F17                     	;# 
   982  0F18                     	;# 
   983  0F19                     	;# 
   984  0F1A                     	;# 
   985  0F1B                     	;# 
   986  0F1C                     	;# 
   987  0F1D                     	;# 
   988  0F1E                     	;# 
   989  0F1F                     	;# 
   990  0F20                     	;# 
   991  0F21                     	;# 
   992  0F22                     	;# 
   993  0F23                     	;# 
   994  0F24                     	;# 
   995  0F25                     	;# 
   996  0F26                     	;# 
   997  0F27                     	;# 
   998  0F28                     	;# 
   999  0F29                     	;# 
  1000  0F2A                     	;# 
  1001  0F2B                     	;# 
  1002  0F2C                     	;# 
  1003  0F2D                     	;# 
  1004  0F9E                     	;# 
  1005  0FE4                     	;# 
  1006  0FE5                     	;# 
  1007  0FE6                     	;# 
  1008  0FE7                     	;# 
  1009  0FE8                     	;# 
  1010  0FE9                     	;# 
  1011  0FEA                     	;# 
  1012  0FEB                     	;# 
  1013  0FED                     	;# 
  1014  0FEE                     	;# 
  1015  0FEF                     	;# 
  1016  0000                     	;# 
  1017  0001                     	;# 
  1018  0002                     	;# 
  1019  0003                     	;# 
  1020  0004                     	;# 
  1021  0005                     	;# 
  1022  0006                     	;# 
  1023  0007                     	;# 
  1024  0008                     	;# 
  1025  0009                     	;# 
  1026  000A                     	;# 
  1027  000B                     	;# 
  1028  000C                     	;# 
  1029  000E                     	;# 
  1030  0011                     	;# 
  1031  0012                     	;# 
  1032  0013                     	;# 
  1033  0015                     	;# 
  1034  0016                     	;# 
  1035  0016                     	;# 
  1036  0017                     	;# 
  1037  0018                     	;# 
  1038  0019                     	;# 
  1039  001A                     	;# 
  1040  001B                     	;# 
  1041  001C                     	;# 
  1042  008C                     	;# 
  1043  008E                     	;# 
  1044  0091                     	;# 
  1045  0092                     	;# 
  1046  0093                     	;# 
  1047  0095                     	;# 
  1048  0096                     	;# 
  1049  0097                     	;# 
  1050  0098                     	;# 
  1051  0099                     	;# 
  1052  009A                     	;# 
  1053  009B                     	;# 
  1054  009B                     	;# 
  1055  009C                     	;# 
  1056  009D                     	;# 
  1057  009E                     	;# 
  1058  009F                     	;# 
  1059  010C                     	;# 
  1060  010E                     	;# 
  1061  0111                     	;# 
  1062  0112                     	;# 
  1063  0113                     	;# 
  1064  0114                     	;# 
  1065  0115                     	;# 
  1066  0116                     	;# 
  1067  0117                     	;# 
  1068  0118                     	;# 
  1069  0119                     	;# 
  1070  011C                     	;# 
  1071  018C                     	;# 
  1072  018E                     	;# 
  1073  0191                     	;# 
  1074  0191                     	;# 
  1075  0192                     	;# 
  1076  0193                     	;# 
  1077  0193                     	;# 
  1078  0194                     	;# 
  1079  0195                     	;# 
  1080  0196                     	;# 
  1081  0197                     	;# 
  1082  0199                     	;# 
  1083  0199                     	;# 
  1084  0199                     	;# 
  1085  019A                     	;# 
  1086  019A                     	;# 
  1087  019A                     	;# 
  1088  019B                     	;# 
  1089  019B                     	;# 
  1090  019B                     	;# 
  1091  019B                     	;# 
  1092  019B                     	;# 
  1093  019C                     	;# 
  1094  019C                     	;# 
  1095  019C                     	;# 
  1096  019D                     	;# 
  1097  019D                     	;# 
  1098  019D                     	;# 
  1099  019E                     	;# 
  1100  019E                     	;# 
  1101  019E                     	;# 
  1102  019F                     	;# 
  1103  019F                     	;# 
  1104  019F                     	;# 
  1105  019F                     	;# 
  1106  019F                     	;# 
  1107  020C                     	;# 
  1108  020E                     	;# 
  1109  0211                     	;# 
  1110  0211                     	;# 
  1111  0212                     	;# 
  1112  0212                     	;# 
  1113  0213                     	;# 
  1114  0213                     	;# 
  1115  0214                     	;# 
  1116  0214                     	;# 
  1117  0215                     	;# 
  1118  0215                     	;# 
  1119  0215                     	;# 
  1120  0215                     	;# 
  1121  0216                     	;# 
  1122  0216                     	;# 
  1123  0217                     	;# 
  1124  0217                     	;# 
  1125  028C                     	;# 
  1126  028E                     	;# 
  1127  0291                     	;# 
  1128  0291                     	;# 
  1129  0292                     	;# 
  1130  0293                     	;# 
  1131  0293                     	;# 
  1132  0298                     	;# 
  1133  0298                     	;# 
  1134  0299                     	;# 
  1135  029A                     	;# 
  1136  029A                     	;# 
  1137  029E                     	;# 
  1138  030C                     	;# 
  1139  030E                     	;# 
  1140  038C                     	;# 
  1141  038E                     	;# 
  1142  0391                     	;# 
  1143  0392                     	;# 
  1144  0393                     	;# 
  1145  0397                     	;# 
  1146  0398                     	;# 
  1147  0399                     	;# 
  1148  0415                     	;# 
  1149  0416                     	;# 
  1150  0417                     	;# 
  1151  041C                     	;# 
  1152  041D                     	;# 
  1153  041E                     	;# 
  1154  0511                     	;# 
  1155  0515                     	;# 
  1156  0617                     	;# 
  1157  0618                     	;# 
  1158  0619                     	;# 
  1159  0619                     	;# 
  1160  061A                     	;# 
  1161  061B                     	;# 
  1162  061C                     	;# 
  1163  061C                     	;# 
  1164  0691                     	;# 
  1165  0692                     	;# 
  1166  0693                     	;# 
  1167  0694                     	;# 
  1168  0695                     	;# 
  1169  0696                     	;# 
  1170  0697                     	;# 
  1171  0698                     	;# 
  1172  0699                     	;# 
  1173  069A                     	;# 
  1174  069B                     	;# 
  1175  069C                     	;# 
  1176  069D                     	;# 
  1177  069E                     	;# 
  1178  069F                     	;# 
  1179  0E0F                     	;# 
  1180  0E10                     	;# 
  1181  0E11                     	;# 
  1182  0E12                     	;# 
  1183  0E13                     	;# 
  1184  0E14                     	;# 
  1185  0E15                     	;# 
  1186  0E17                     	;# 
  1187  0E20                     	;# 
  1188  0E21                     	;# 
  1189  0E22                     	;# 
  1190  0E24                     	;# 
  1191  0E25                     	;# 
  1192  0E28                     	;# 
  1193  0E29                     	;# 
  1194  0E2A                     	;# 
  1195  0E2B                     	;# 
  1196  0E90                     	;# 
  1197  0E91                     	;# 
  1198  0E92                     	;# 
  1199  0E94                     	;# 
  1200  0E95                     	;# 
  1201  0EA0                     	;# 
  1202  0EA1                     	;# 
  1203  0EA2                     	;# 
  1204  0EA3                     	;# 
  1205  0EA4                     	;# 
  1206  0EA5                     	;# 
  1207  0F0F                     	;# 
  1208  0F10                     	;# 
  1209  0F11                     	;# 
  1210  0F12                     	;# 
  1211  0F13                     	;# 
  1212  0F14                     	;# 
  1213  0F15                     	;# 
  1214  0F16                     	;# 
  1215  0F17                     	;# 
  1216  0F18                     	;# 
  1217  0F19                     	;# 
  1218  0F1A                     	;# 
  1219  0F1B                     	;# 
  1220  0F1C                     	;# 
  1221  0F1D                     	;# 
  1222  0F1E                     	;# 
  1223  0F1F                     	;# 
  1224  0F20                     	;# 
  1225  0F21                     	;# 
  1226  0F22                     	;# 
  1227  0F23                     	;# 
  1228  0F24                     	;# 
  1229  0F25                     	;# 
  1230  0F26                     	;# 
  1231  0F27                     	;# 
  1232  0F28                     	;# 
  1233  0F29                     	;# 
  1234  0F2A                     	;# 
  1235  0F2B                     	;# 
  1236  0F2C                     	;# 
  1237  0F2D                     	;# 
  1238  0F9E                     	;# 
  1239  0FE4                     	;# 
  1240  0FE5                     	;# 
  1241  0FE6                     	;# 
  1242  0FE7                     	;# 
  1243  0FE8                     	;# 
  1244  0FE9                     	;# 
  1245  0FEA                     	;# 
  1246  0FEB                     	;# 
  1247  0FED                     	;# 
  1248  0FEE                     	;# 
  1249  0FEF                     	;# 
  1250  0000                     	;# 
  1251  0001                     	;# 
  1252  0002                     	;# 
  1253  0003                     	;# 
  1254  0004                     	;# 
  1255  0005                     	;# 
  1256  0006                     	;# 
  1257  0007                     	;# 
  1258  0008                     	;# 
  1259  0009                     	;# 
  1260  000A                     	;# 
  1261  000B                     	;# 
  1262  000C                     	;# 
  1263  000E                     	;# 
  1264  0011                     	;# 
  1265  0012                     	;# 
  1266  0013                     	;# 
  1267  0015                     	;# 
  1268  0016                     	;# 
  1269  0016                     	;# 
  1270  0017                     	;# 
  1271  0018                     	;# 
  1272  0019                     	;# 
  1273  001A                     	;# 
  1274  001B                     	;# 
  1275  001C                     	;# 
  1276  008C                     	;# 
  1277  008E                     	;# 
  1278  0091                     	;# 
  1279  0092                     	;# 
  1280  0093                     	;# 
  1281  0095                     	;# 
  1282  0096                     	;# 
  1283  0097                     	;# 
  1284  0098                     	;# 
  1285  0099                     	;# 
  1286  009A                     	;# 
  1287  009B                     	;# 
  1288  009B                     	;# 
  1289  009C                     	;# 
  1290  009D                     	;# 
  1291  009E                     	;# 
  1292  009F                     	;# 
  1293  010C                     	;# 
  1294  010E                     	;# 
  1295  0111                     	;# 
  1296  0112                     	;# 
  1297  0113                     	;# 
  1298  0114                     	;# 
  1299  0115                     	;# 
  1300  0116                     	;# 
  1301  0117                     	;# 
  1302  0118                     	;# 
  1303  0119                     	;# 
  1304  011C                     	;# 
  1305  018C                     	;# 
  1306  018E                     	;# 
  1307  0191                     	;# 
  1308  0191                     	;# 
  1309  0192                     	;# 
  1310  0193                     	;# 
  1311  0193                     	;# 
  1312  0194                     	;# 
  1313  0195                     	;# 
  1314  0196                     	;# 
  1315  0197                     	;# 
  1316  0199                     	;# 
  1317  0199                     	;# 
  1318  0199                     	;# 
  1319  019A                     	;# 
  1320  019A                     	;# 
  1321  019A                     	;# 
  1322  019B                     	;# 
  1323  019B                     	;# 
  1324  019B                     	;# 
  1325  019B                     	;# 
  1326  019B                     	;# 
  1327  019C                     	;# 
  1328  019C                     	;# 
  1329  019C                     	;# 
  1330  019D                     	;# 
  1331  019D                     	;# 
  1332  019D                     	;# 
  1333  019E                     	;# 
  1334  019E                     	;# 
  1335  019E                     	;# 
  1336  019F                     	;# 
  1337  019F                     	;# 
  1338  019F                     	;# 
  1339  019F                     	;# 
  1340  019F                     	;# 
  1341  020C                     	;# 
  1342  020E                     	;# 
  1343  0211                     	;# 
  1344  0211                     	;# 
  1345  0212                     	;# 
  1346  0212                     	;# 
  1347  0213                     	;# 
  1348  0213                     	;# 
  1349  0214                     	;# 
  1350  0214                     	;# 
  1351  0215                     	;# 
  1352  0215                     	;# 
  1353  0215                     	;# 
  1354  0215                     	;# 
  1355  0216                     	;# 
  1356  0216                     	;# 
  1357  0217                     	;# 
  1358  0217                     	;# 
  1359  028C                     	;# 
  1360  028E                     	;# 
  1361  0291                     	;# 
  1362  0291                     	;# 
  1363  0292                     	;# 
  1364  0293                     	;# 
  1365  0293                     	;# 
  1366  0298                     	;# 
  1367  0298                     	;# 
  1368  0299                     	;# 
  1369  029A                     	;# 
  1370  029A                     	;# 
  1371  029E                     	;# 
  1372  030C                     	;# 
  1373  030E                     	;# 
  1374  038C                     	;# 
  1375  038E                     	;# 
  1376  0391                     	;# 
  1377  0392                     	;# 
  1378  0393                     	;# 
  1379  0397                     	;# 
  1380  0398                     	;# 
  1381  0399                     	;# 
  1382  0415                     	;# 
  1383  0416                     	;# 
  1384  0417                     	;# 
  1385  041C                     	;# 
  1386  041D                     	;# 
  1387  041E                     	;# 
  1388  0511                     	;# 
  1389  0515                     	;# 
  1390  0617                     	;# 
  1391  0618                     	;# 
  1392  0619                     	;# 
  1393  0619                     	;# 
  1394  061A                     	;# 
  1395  061B                     	;# 
  1396  061C                     	;# 
  1397  061C                     	;# 
  1398  0691                     	;# 
  1399  0692                     	;# 
  1400  0693                     	;# 
  1401  0694                     	;# 
  1402  0695                     	;# 
  1403  0696                     	;# 
  1404  0697                     	;# 
  1405  0698                     	;# 
  1406  0699                     	;# 
  1407  069A                     	;# 
  1408  069B                     	;# 
  1409  069C                     	;# 
  1410  069D                     	;# 
  1411  069E                     	;# 
  1412  069F                     	;# 
  1413  0E0F                     	;# 
  1414  0E10                     	;# 
  1415  0E11                     	;# 
  1416  0E12                     	;# 
  1417  0E13                     	;# 
  1418  0E14                     	;# 
  1419  0E15                     	;# 
  1420  0E17                     	;# 
  1421  0E20                     	;# 
  1422  0E21                     	;# 
  1423  0E22                     	;# 
  1424  0E24                     	;# 
  1425  0E25                     	;# 
  1426  0E28                     	;# 
  1427  0E29                     	;# 
  1428  0E2A                     	;# 
  1429  0E2B                     	;# 
  1430  0E90                     	;# 
  1431  0E91                     	;# 
  1432  0E92                     	;# 
  1433  0E94                     	;# 
  1434  0E95                     	;# 
  1435  0EA0                     	;# 
  1436  0EA1                     	;# 
  1437  0EA2                     	;# 
  1438  0EA3                     	;# 
  1439  0EA4                     	;# 
  1440  0EA5                     	;# 
  1441  0F0F                     	;# 
  1442  0F10                     	;# 
  1443  0F11                     	;# 
  1444  0F12                     	;# 
  1445  0F13                     	;# 
  1446  0F14                     	;# 
  1447  0F15                     	;# 
  1448  0F16                     	;# 
  1449  0F17                     	;# 
  1450  0F18                     	;# 
  1451  0F19                     	;# 
  1452  0F1A                     	;# 
  1453  0F1B                     	;# 
  1454  0F1C                     	;# 
  1455  0F1D                     	;# 
  1456  0F1E                     	;# 
  1457  0F1F                     	;# 
  1458  0F20                     	;# 
  1459  0F21                     	;# 
  1460  0F22                     	;# 
  1461  0F23                     	;# 
  1462  0F24                     	;# 
  1463  0F25                     	;# 
  1464  0F26                     	;# 
  1465  0F27                     	;# 
  1466  0F28                     	;# 
  1467  0F29                     	;# 
  1468  0F2A                     	;# 
  1469  0F2B                     	;# 
  1470  0F2C                     	;# 
  1471  0F2D                     	;# 
  1472  0F9E                     	;# 
  1473  0FE4                     	;# 
  1474  0FE5                     	;# 
  1475  0FE6                     	;# 
  1476  0FE7                     	;# 
  1477  0FE8                     	;# 
  1478  0FE9                     	;# 
  1479  0FEA                     	;# 
  1480  0FEB                     	;# 
  1481  0FED                     	;# 
  1482  0FEE                     	;# 
  1483  0FEF                     	;# 
  1484  0000                     	;# 
  1485  0001                     	;# 
  1486  0002                     	;# 
  1487  0003                     	;# 
  1488  0004                     	;# 
  1489  0005                     	;# 
  1490  0006                     	;# 
  1491  0007                     	;# 
  1492  0008                     	;# 
  1493  0009                     	;# 
  1494  000A                     	;# 
  1495  000B                     	;# 
  1496  000C                     	;# 
  1497  000E                     	;# 
  1498  0011                     	;# 
  1499  0012                     	;# 
  1500  0013                     	;# 
  1501  0015                     	;# 
  1502  0016                     	;# 
  1503  0016                     	;# 
  1504  0017                     	;# 
  1505  0018                     	;# 
  1506  0019                     	;# 
  1507  001A                     	;# 
  1508  001B                     	;# 
  1509  001C                     	;# 
  1510  008C                     	;# 
  1511  008E                     	;# 
  1512  0091                     	;# 
  1513  0092                     	;# 
  1514  0093                     	;# 
  1515  0095                     	;# 
  1516  0096                     	;# 
  1517  0097                     	;# 
  1518  0098                     	;# 
  1519  0099                     	;# 
  1520  009A                     	;# 
  1521  009B                     	;# 
  1522  009B                     	;# 
  1523  009C                     	;# 
  1524  009D                     	;# 
  1525  009E                     	;# 
  1526  009F                     	;# 
  1527  010C                     	;# 
  1528  010E                     	;# 
  1529  0111                     	;# 
  1530  0112                     	;# 
  1531  0113                     	;# 
  1532  0114                     	;# 
  1533  0115                     	;# 
  1534  0116                     	;# 
  1535  0117                     	;# 
  1536  0118                     	;# 
  1537  0119                     	;# 
  1538  011C                     	;# 
  1539  018C                     	;# 
  1540  018E                     	;# 
  1541  0191                     	;# 
  1542  0191                     	;# 
  1543  0192                     	;# 
  1544  0193                     	;# 
  1545  0193                     	;# 
  1546  0194                     	;# 
  1547  0195                     	;# 
  1548  0196                     	;# 
  1549  0197                     	;# 
  1550  0199                     	;# 
  1551  0199                     	;# 
  1552  0199                     	;# 
  1553  019A                     	;# 
  1554  019A                     	;# 
  1555  019A                     	;# 
  1556  019B                     	;# 
  1557  019B                     	;# 
  1558  019B                     	;# 
  1559  019B                     	;# 
  1560  019B                     	;# 
  1561  019C                     	;# 
  1562  019C                     	;# 
  1563  019C                     	;# 
  1564  019D                     	;# 
  1565  019D                     	;# 
  1566  019D                     	;# 
  1567  019E                     	;# 
  1568  019E                     	;# 
  1569  019E                     	;# 
  1570  019F                     	;# 
  1571  019F                     	;# 
  1572  019F                     	;# 
  1573  019F                     	;# 
  1574  019F                     	;# 
  1575  020C                     	;# 
  1576  020E                     	;# 
  1577  0211                     	;# 
  1578  0211                     	;# 
  1579  0212                     	;# 
  1580  0212                     	;# 
  1581  0213                     	;# 
  1582  0213                     	;# 
  1583  0214                     	;# 
  1584  0214                     	;# 
  1585  0215                     	;# 
  1586  0215                     	;# 
  1587  0215                     	;# 
  1588  0215                     	;# 
  1589  0216                     	;# 
  1590  0216                     	;# 
  1591  0217                     	;# 
  1592  0217                     	;# 
  1593  028C                     	;# 
  1594  028E                     	;# 
  1595  0291                     	;# 
  1596  0291                     	;# 
  1597  0292                     	;# 
  1598  0293                     	;# 
  1599  0293                     	;# 
  1600  0298                     	;# 
  1601  0298                     	;# 
  1602  0299                     	;# 
  1603  029A                     	;# 
  1604  029A                     	;# 
  1605  029E                     	;# 
  1606  030C                     	;# 
  1607  030E                     	;# 
  1608  038C                     	;# 
  1609  038E                     	;# 
  1610  0391                     	;# 
  1611  0392                     	;# 
  1612  0393                     	;# 
  1613  0397                     	;# 
  1614  0398                     	;# 
  1615  0399                     	;# 
  1616  0415                     	;# 
  1617  0416                     	;# 
  1618  0417                     	;# 
  1619  041C                     	;# 
  1620  041D                     	;# 
  1621  041E                     	;# 
  1622  0511                     	;# 
  1623  0515                     	;# 
  1624  0617                     	;# 
  1625  0618                     	;# 
  1626  0619                     	;# 
  1627  0619                     	;# 
  1628  061A                     	;# 
  1629  061B                     	;# 
  1630  061C                     	;# 
  1631  061C                     	;# 
  1632  0691                     	;# 
  1633  0692                     	;# 
  1634  0693                     	;# 
  1635  0694                     	;# 
  1636  0695                     	;# 
  1637  0696                     	;# 
  1638  0697                     	;# 
  1639  0698                     	;# 
  1640  0699                     	;# 
  1641  069A                     	;# 
  1642  069B                     	;# 
  1643  069C                     	;# 
  1644  069D                     	;# 
  1645  069E                     	;# 
  1646  069F                     	;# 
  1647  0E0F                     	;# 
  1648  0E10                     	;# 
  1649  0E11                     	;# 
  1650  0E12                     	;# 
  1651  0E13                     	;# 
  1652  0E14                     	;# 
  1653  0E15                     	;# 
  1654  0E17                     	;# 
  1655  0E20                     	;# 
  1656  0E21                     	;# 
  1657  0E22                     	;# 
  1658  0E24                     	;# 
  1659  0E25                     	;# 
  1660  0E28                     	;# 
  1661  0E29                     	;# 
  1662  0E2A                     	;# 
  1663  0E2B                     	;# 
  1664  0E90                     	;# 
  1665  0E91                     	;# 
  1666  0E92                     	;# 
  1667  0E94                     	;# 
  1668  0E95                     	;# 
  1669  0EA0                     	;# 
  1670  0EA1                     	;# 
  1671  0EA2                     	;# 
  1672  0EA3                     	;# 
  1673  0EA4                     	;# 
  1674  0EA5                     	;# 
  1675  0F0F                     	;# 
  1676  0F10                     	;# 
  1677  0F11                     	;# 
  1678  0F12                     	;# 
  1679  0F13                     	;# 
  1680  0F14                     	;# 
  1681  0F15                     	;# 
  1682  0F16                     	;# 
  1683  0F17                     	;# 
  1684  0F18                     	;# 
  1685  0F19                     	;# 
  1686  0F1A                     	;# 
  1687  0F1B                     	;# 
  1688  0F1C                     	;# 
  1689  0F1D                     	;# 
  1690  0F1E                     	;# 
  1691  0F1F                     	;# 
  1692  0F20                     	;# 
  1693  0F21                     	;# 
  1694  0F22                     	;# 
  1695  0F23                     	;# 
  1696  0F24                     	;# 
  1697  0F25                     	;# 
  1698  0F26                     	;# 
  1699  0F27                     	;# 
  1700  0F28                     	;# 
  1701  0F29                     	;# 
  1702  0F2A                     	;# 
  1703  0F2B                     	;# 
  1704  0F2C                     	;# 
  1705  0F2D                     	;# 
  1706  0F9E                     	;# 
  1707  0FE4                     	;# 
  1708  0FE5                     	;# 
  1709  0FE6                     	;# 
  1710  0FE7                     	;# 
  1711  0FE8                     	;# 
  1712  0FE9                     	;# 
  1713  0FEA                     	;# 
  1714  0FEB                     	;# 
  1715  0FED                     	;# 
  1716  0FEE                     	;# 
  1717  0FEF                     	;# 
  1718  0000                     	;# 
  1719  0001                     	;# 
  1720  0002                     	;# 
  1721  0003                     	;# 
  1722  0004                     	;# 
  1723  0005                     	;# 
  1724  0006                     	;# 
  1725  0007                     	;# 
  1726  0008                     	;# 
  1727  0009                     	;# 
  1728  000A                     	;# 
  1729  000B                     	;# 
  1730  000C                     	;# 
  1731  000E                     	;# 
  1732  0011                     	;# 
  1733  0012                     	;# 
  1734  0013                     	;# 
  1735  0015                     	;# 
  1736  0016                     	;# 
  1737  0016                     	;# 
  1738  0017                     	;# 
  1739  0018                     	;# 
  1740  0019                     	;# 
  1741  001A                     	;# 
  1742  001B                     	;# 
  1743  001C                     	;# 
  1744  008C                     	;# 
  1745  008E                     	;# 
  1746  0091                     	;# 
  1747  0092                     	;# 
  1748  0093                     	;# 
  1749  0095                     	;# 
  1750  0096                     	;# 
  1751  0097                     	;# 
  1752  0098                     	;# 
  1753  0099                     	;# 
  1754  009A                     	;# 
  1755  009B                     	;# 
  1756  009B                     	;# 
  1757  009C                     	;# 
  1758  009D                     	;# 
  1759  009E                     	;# 
  1760  009F                     	;# 
  1761  010C                     	;# 
  1762  010E                     	;# 
  1763  0111                     	;# 
  1764  0112                     	;# 
  1765  0113                     	;# 
  1766  0114                     	;# 
  1767  0115                     	;# 
  1768  0116                     	;# 
  1769  0117                     	;# 
  1770  0118                     	;# 
  1771  0119                     	;# 
  1772  011C                     	;# 
  1773  018C                     	;# 
  1774  018E                     	;# 
  1775  0191                     	;# 
  1776  0191                     	;# 
  1777  0192                     	;# 
  1778  0193                     	;# 
  1779  0193                     	;# 
  1780  0194                     	;# 
  1781  0195                     	;# 
  1782  0196                     	;# 
  1783  0197                     	;# 
  1784  0199                     	;# 
  1785  0199                     	;# 
  1786  0199                     	;# 
  1787  019A                     	;# 
  1788  019A                     	;# 
  1789  019A                     	;# 
  1790  019B                     	;# 
  1791  019B                     	;# 
  1792  019B                     	;# 
  1793  019B                     	;# 
  1794  019B                     	;# 
  1795  019C                     	;# 
  1796  019C                     	;# 
  1797  019C                     	;# 
  1798  019D                     	;# 
  1799  019D                     	;# 
  1800  019D                     	;# 
  1801  019E                     	;# 
  1802  019E                     	;# 
  1803  019E                     	;# 
  1804  019F                     	;# 
  1805  019F                     	;# 
  1806  019F                     	;# 
  1807  019F                     	;# 
  1808  019F                     	;# 
  1809  020C                     	;# 
  1810  020E                     	;# 
  1811  0211                     	;# 
  1812  0211                     	;# 
  1813  0212                     	;# 
  1814  0212                     	;# 
  1815  0213                     	;# 
  1816  0213                     	;# 
  1817  0214                     	;# 
  1818  0214                     	;# 
  1819  0215                     	;# 
  1820  0215                     	;# 
  1821  0215                     	;# 
  1822  0215                     	;# 
  1823  0216                     	;# 
  1824  0216                     	;# 
  1825  0217                     	;# 
  1826  0217                     	;# 
  1827  028C                     	;# 
  1828  028E                     	;# 
  1829  0291                     	;# 
  1830  0291                     	;# 
  1831  0292                     	;# 
  1832  0293                     	;# 
  1833  0293                     	;# 
  1834  0298                     	;# 
  1835  0298                     	;# 
  1836  0299                     	;# 
  1837  029A                     	;# 
  1838  029A                     	;# 
  1839  029E                     	;# 
  1840  030C                     	;# 
  1841  030E                     	;# 
  1842  038C                     	;# 
  1843  038E                     	;# 
  1844  0391                     	;# 
  1845  0392                     	;# 
  1846  0393                     	;# 
  1847  0397                     	;# 
  1848  0398                     	;# 
  1849  0399                     	;# 
  1850  0415                     	;# 
  1851  0416                     	;# 
  1852  0417                     	;# 
  1853  041C                     	;# 
  1854  041D                     	;# 
  1855  041E                     	;# 
  1856  0511                     	;# 
  1857  0515                     	;# 
  1858  0617                     	;# 
  1859  0618                     	;# 
  1860  0619                     	;# 
  1861  0619                     	;# 
  1862  061A                     	;# 
  1863  061B                     	;# 
  1864  061C                     	;# 
  1865  061C                     	;# 
  1866  0691                     	;# 
  1867  0692                     	;# 
  1868  0693                     	;# 
  1869  0694                     	;# 
  1870  0695                     	;# 
  1871  0696                     	;# 
  1872  0697                     	;# 
  1873  0698                     	;# 
  1874  0699                     	;# 
  1875  069A                     	;# 
  1876  069B                     	;# 
  1877  069C                     	;# 
  1878  069D                     	;# 
  1879  069E                     	;# 
  1880  069F                     	;# 
  1881  0E0F                     	;# 
  1882  0E10                     	;# 
  1883  0E11                     	;# 
  1884  0E12                     	;# 
  1885  0E13                     	;# 
  1886  0E14                     	;# 
  1887  0E15                     	;# 
  1888  0E17                     	;# 
  1889  0E20                     	;# 
  1890  0E21                     	;# 
  1891  0E22                     	;# 
  1892  0E24                     	;# 
  1893  0E25                     	;# 
  1894  0E28                     	;# 
  1895  0E29                     	;# 
  1896  0E2A                     	;# 
  1897  0E2B                     	;# 
  1898  0E90                     	;# 
  1899  0E91                     	;# 
  1900  0E92                     	;# 
  1901  0E94                     	;# 
  1902  0E95                     	;# 
  1903  0EA0                     	;# 
  1904  0EA1                     	;# 
  1905  0EA2                     	;# 
  1906  0EA3                     	;# 
  1907  0EA4                     	;# 
  1908  0EA5                     	;# 
  1909  0F0F                     	;# 
  1910  0F10                     	;# 
  1911  0F11                     	;# 
  1912  0F12                     	;# 
  1913  0F13                     	;# 
  1914  0F14                     	;# 
  1915  0F15                     	;# 
  1916  0F16                     	;# 
  1917  0F17                     	;# 
  1918  0F18                     	;# 
  1919  0F19                     	;# 
  1920  0F1A                     	;# 
  1921  0F1B                     	;# 
  1922  0F1C                     	;# 
  1923  0F1D                     	;# 
  1924  0F1E                     	;# 
  1925  0F1F                     	;# 
  1926  0F20                     	;# 
  1927  0F21                     	;# 
  1928  0F22                     	;# 
  1929  0F23                     	;# 
  1930  0F24                     	;# 
  1931  0F25                     	;# 
  1932  0F26                     	;# 
  1933  0F27                     	;# 
  1934  0F28                     	;# 
  1935  0F29                     	;# 
  1936  0F2A                     	;# 
  1937  0F2B                     	;# 
  1938  0F2C                     	;# 
  1939  0F2D                     	;# 
  1940  0F9E                     	;# 
  1941  0FE4                     	;# 
  1942  0FE5                     	;# 
  1943  0FE6                     	;# 
  1944  0FE7                     	;# 
  1945  0FE8                     	;# 
  1946  0FE9                     	;# 
  1947  0FEA                     	;# 
  1948  0FEB                     	;# 
  1949  0FED                     	;# 
  1950  0FEE                     	;# 
  1951  0FEF                     	;# 
  1952                           
  1953                           	psect	stringtext1
  1954  02E7                     __pstringtext1:
  1955  02E7                     _dpowers:
  1956  02E7  3401               	retlw	1
  1957  02E8  3400               	retlw	0
  1958  02E9  340A               	retlw	10
  1959  02EA  3400               	retlw	0
  1960  02EB  3464               	retlw	100
  1961  02EC  3400               	retlw	0
  1962  02ED  34E8               	retlw	232
  1963  02EE  3403               	retlw	3
  1964  02EF  3410               	retlw	16
  1965  02F0  3427               	retlw	39
  1966  02F1                     __end_of_dpowers:
  1967                           
  1968                           	psect	nvBANK0
  1969  0055                     __pnvBANK0:
  1970  0055                     _EUSART_ErrorHandler:
  1971  0055                     	ds	2
  1972  0057                     _EUSART_OverrunErrorHandler:
  1973  0057                     	ds	2
  1974  0059                     _EUSART_FramingErrorHandler:
  1975  0059                     	ds	2
  1976  005B                     _EUSART_RxDefaultInterruptHandler:
  1977  005B                     	ds	2
  1978  005D                     _EUSART_TxDefaultInterruptHandler:
  1979  005D                     	ds	2
  1980  005F                     _TMR2_InterruptHandler:
  1981  005F                     	ds	2
  1982  0061                     _eusartTxBufferRemaining:
  1983  0061                     	ds	1
  1984  000B                     _INTCONbits	set	11
  1985  001C                     _T2CONbits	set	28
  1986  001C                     _T2CON	set	28
  1987  0011                     _PIR1bits	set	17
  1988  001A                     _TMR2	set	26
  1989  001B                     _PR2	set	27
  1990  009D                     _ADCON0bits	set	157
  1991  009D                     _ADCON0	set	157
  1992  009C                     _ADRESH	set	156
  1993  009B                     _ADRESL	set	155
  1994  009F                     _ADCON2	set	159
  1995  009E                     _ADCON1	set	158
  1996  0097                     _WDTCON	set	151
  1997  0098                     _OSCTUNE	set	152
  1998  009A                     _OSCSTAT	set	154
  1999  0099                     _OSCCON	set	153
  2000  0091                     _PIE1bits	set	145
  2001  0095                     _OPTION_REGbits	set	149
  2002  008E                     _TRISC	set	142
  2003  008C                     _TRISA	set	140
  2004  0116                     _BORCON	set	278
  2005  010E                     _LATC	set	270
  2006  010C                     _LATA	set	268
  2007  019D                     _RCSTAbits	set	413
  2008  019E                     _TXSTAbits	set	414
  2009  0199                     _RC1REG	set	409
  2010  019D                     _RC1STAbits	set	413
  2011  019A                     _TX1REG	set	410
  2012  019E                     _TX1STAbits	set	414
  2013  019C                     _SP1BRGH	set	412
  2014  019B                     _SP1BRGL	set	411
  2015  019E                     _TX1STA	set	414
  2016  019D                     _RC1STA	set	413
  2017  019F                     _BAUD1CON	set	415
  2018  018C                     _ANSELA	set	396
  2019  018E                     _ANSELC	set	398
  2020  020E                     _WPUC	set	526
  2021  020C                     _WPUA	set	524
  2022  029E                     _CCPTMRSbits	set	670
  2023  0292                     _CCPR1H	set	658
  2024  0291                     _CCPR1L	set	657
  2025  0293                     _CCP1CON	set	659
  2026  028E                     _ODCONC	set	654
  2027  028C                     _ODCONA	set	652
  2028  030E                     _SLRCONC	set	782
  2029  030C                     _SLRCONA	set	780
  2030  038E                     _INLVLC	set	910
  2031  038C                     _INLVLA	set	908
  2032  0E24                     _RXPPS	set	3620
  2033  0EA4                     _RC4PPS	set	3748
  2034  0EA1                     _RC1PPS	set	3745
  2035                           
  2036                           	psect	stringtext2
  2037  0341                     __pstringtext2:
  2038  0341                     STR_1:
  2039  0341  3425               	retlw	37	;'%'
  2040  0342  3464               	retlw	100	;'d'
  2041  0343  340D               	retlw	13
  2042  0344  340A               	retlw	10
  2043  0345  3400               	retlw	0
  2044                           
  2045                           	psect	stringtext3
  2046  0000                     __pstringtext3:
  2047                           
  2048                           	psect	cinit
  2049  003C                     start_initialization:	
  2050                           ; #config settings
  2051                           
  2052  003C                     __initialization:
  2053                           
  2054                           ; Clear objects allocated to BANK0
  2055  003C  3020               	movlw	low __pbssBANK0
  2056  003D  0084               	movwf	4
  2057  003E  3000               	movlw	high __pbssBANK0
  2058  003F  0085               	movwf	5
  2059  0040  3024               	movlw	36
  2060  0041  3183  230B  3180   	fcall	clear_ram0
  2061  0044                     end_of_initialization:	
  2062                           ;End of C runtime variable initialization code
  2063                           
  2064  0044                     __end_of__initialization:
  2065  0044  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2066  0045  0020               	movlb	0
  2067  0046  3182  2ADC         	ljmp	_main	;jump to C main() function
  2068                           
  2069                           	psect	bssBANK0
  2070  0020                     __pbssBANK0:
  2071  0020                     _eusartRxStatusBuffer:
  2072  0020                     	ds	8
  2073  0028                     _eusartRxBuffer:
  2074  0028                     	ds	8
  2075  0030                     _eusartTxBuffer:
  2076  0030                     	ds	8
  2077  0038                     _ADC_InterruptHandler:
  2078  0038                     	ds	2
  2079  003A                     _sec:
  2080  003A                     	ds	2
  2081  003C                     _cnt:
  2082  003C                     	ds	2
  2083  003E                     _eusartRxLastError:
  2084  003E                     	ds	1
  2085  003F                     _eusartRxCount:
  2086  003F                     	ds	1
  2087  0040                     _eusartRxTail:
  2088  0040                     	ds	1
  2089  0041                     _eusartRxHead:
  2090  0041                     	ds	1
  2091  0042                     _eusartTxTail:
  2092  0042                     	ds	1
  2093  0043                     _eusartTxHead:
  2094  0043                     	ds	1
  2095                           
  2096                           	psect	clrtext
  2097  030B                     clear_ram0:	
  2098                           ;	Called with FSR0 containing the base address, and
  2099                           ;	WREG with the size to clear
  2100                           
  2101  030B  0064               	clrwdt	;clear the watchdog before getting into this loop
  2102  030C                     clrloop0:
  2103  030C  0180               	clrf	0	;clear RAM location pointed to by FSR
  2104  030D  3101               	addfsr 0,1
  2105  030E  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2106  030F  2B0C               	goto	clrloop0	;have we reached the end yet?
  2107  0310  3400               	retlw	0	;all done for this memory range, return
  2108                           
  2109                           	psect	cstackCOMMON
  2110  0070                     __pcstackCOMMON:
  2111  0070                     ?_TMR2_DefaultInterruptHandler:
  2112  0070                     ?_TMR2_CallBack:	
  2113                           ; 1 bytes @ 0x0
  2114                           
  2115  0070                     ?_OSCILLATOR_Initialize:	
  2116                           ; 1 bytes @ 0x0
  2117                           
  2118  0070                     ?_WDT_Initialize:	
  2119                           ; 1 bytes @ 0x0
  2120                           
  2121  0070                     ?_ADC_Initialize:	
  2122                           ; 1 bytes @ 0x0
  2123                           
  2124  0070                     ?_EUSART_Initialize:	
  2125                           ; 1 bytes @ 0x0
  2126                           
  2127  0070                     ?_EUSART_Receive_ISR:	
  2128                           ; 1 bytes @ 0x0
  2129                           
  2130  0070                     ?_EUSART_Transmit_ISR:	
  2131                           ; 1 bytes @ 0x0
  2132                           
  2133  0070                     ??_EUSART_Transmit_ISR:	
  2134                           ; 1 bytes @ 0x0
  2135                           
  2136  0070                     ?_EUSART_DefaultFramingErrorHandler:	
  2137                           ; 1 bytes @ 0x0
  2138                           
  2139  0070                     ??_EUSART_DefaultFramingErrorHandler:	
  2140                           ; 1 bytes @ 0x0
  2141                           
  2142  0070                     ?_EUSART_DefaultOverrunErrorHandler:	
  2143                           ; 1 bytes @ 0x0
  2144                           
  2145  0070                     ??_EUSART_DefaultOverrunErrorHandler:	
  2146                           ; 1 bytes @ 0x0
  2147                           
  2148  0070                     ?_EUSART_DefaultErrorHandler:	
  2149                           ; 1 bytes @ 0x0
  2150                           
  2151  0070                     ?_EUSART_RxDataHandler:	
  2152                           ; 1 bytes @ 0x0
  2153                           
  2154  0070                     ??_EUSART_RxDataHandler:	
  2155                           ; 1 bytes @ 0x0
  2156                           
  2157  0070                     ?_PIN_MANAGER_Initialize:	
  2158                           ; 1 bytes @ 0x0
  2159                           
  2160  0070                     ?_PWM1_Initialize:	
  2161                           ; 1 bytes @ 0x0
  2162                           
  2163  0070                     ?_TMR2_Initialize:	
  2164                           ; 1 bytes @ 0x0
  2165                           
  2166  0070                     ?_TMR2_ISR:	
  2167                           ; 1 bytes @ 0x0
  2168                           
  2169  0070                     ?_SYSTEM_Initialize:	
  2170                           ; 1 bytes @ 0x0
  2171                           
  2172  0070                     ?_EUSART_Write:	
  2173                           ; 1 bytes @ 0x0
  2174                           
  2175  0070                     ??_EUSART_Write:	
  2176                           ; 1 bytes @ 0x0
  2177                           
  2178  0070                     ?_putch:	
  2179                           ; 1 bytes @ 0x0
  2180                           
  2181  0070                     ?_INTERRUPT_InterruptManager:	
  2182                           ; 1 bytes @ 0x0
  2183                           
  2184  0070                     ?_main:	
  2185                           ; 1 bytes @ 0x0
  2186                           
  2187  0070                     ?___lwdiv:	
  2188                           ; 1 bytes @ 0x0
  2189                           
  2190  0070                     ___lwdiv@divisor:	
  2191                           ; 2 bytes @ 0x0
  2192                           
  2193                           
  2194                           ; 2 bytes @ 0x0
  2195  0070                     	ds	1
  2196  0071                     ??_EUSART_Receive_ISR:
  2197  0071                     ??_EUSART_DefaultErrorHandler:	
  2198                           ; 1 bytes @ 0x1
  2199                           
  2200  0071                     EUSART_Write@txData:	
  2201                           ; 1 bytes @ 0x1
  2202                           
  2203                           
  2204                           ; 1 bytes @ 0x1
  2205  0071                     	ds	1
  2206  0072                     ??_putch:
  2207  0072                     putch@txData:	
  2208                           ; 1 bytes @ 0x2
  2209                           
  2210  0072                     ___lwdiv@dividend:	
  2211                           ; 1 bytes @ 0x2
  2212                           
  2213                           
  2214                           ; 2 bytes @ 0x2
  2215  0072                     	ds	2
  2216  0074                     ??___lwdiv:
  2217                           
  2218                           ; 1 bytes @ 0x4
  2219  0074                     	ds	1
  2220  0075                     ___lwdiv@quotient:
  2221                           
  2222                           ; 2 bytes @ 0x5
  2223  0075                     	ds	2
  2224  0077                     ___lwdiv@counter:
  2225                           
  2226                           ; 1 bytes @ 0x7
  2227  0077                     	ds	1
  2228  0078                     ?___lwmod:
  2229  0078                     ___lwmod@divisor:	
  2230                           ; 2 bytes @ 0x8
  2231                           
  2232                           
  2233                           ; 2 bytes @ 0x8
  2234  0078                     	ds	2
  2235  007A                     ___lwmod@dividend:
  2236                           
  2237                           ; 2 bytes @ 0xA
  2238  007A                     	ds	2
  2239  007C                     ??___lwmod:
  2240                           
  2241                           ; 1 bytes @ 0xC
  2242  007C                     	ds	1
  2243  007D                     ___lwmod@counter:
  2244                           
  2245                           ; 1 bytes @ 0xD
  2246  007D                     	ds	1
  2247  007E                     ??_TMR2_DefaultInterruptHandler:
  2248  007E                     ??_TMR2_CallBack:	
  2249                           ; 1 bytes @ 0xE
  2250                           
  2251  007E                     ??_TMR2_ISR:	
  2252                           ; 1 bytes @ 0xE
  2253                           
  2254  007E                     ??_INTERRUPT_InterruptManager:	
  2255                           ; 1 bytes @ 0xE
  2256                           
  2257                           
  2258                           	psect	cstackBANK0
  2259  0044                     __pcstackBANK0:	
  2260                           ; 1 bytes @ 0xE
  2261                           
  2262  0044                     ?_printf:
  2263  0044                     printf@f:	
  2264                           ; 2 bytes @ 0x0
  2265                           
  2266                           
  2267                           ; 2 bytes @ 0x0
  2268  0044                     	ds	4
  2269  0048                     ??_printf:
  2270                           
  2271                           ; 1 bytes @ 0x4
  2272  0048                     	ds	4
  2273  004C                     printf@ap:
  2274                           
  2275                           ; 1 bytes @ 0x8
  2276  004C                     	ds	1
  2277  004D                     printf@flag:
  2278                           
  2279                           ; 1 bytes @ 0x9
  2280  004D                     	ds	1
  2281  004E                     printf@prec:
  2282                           
  2283                           ; 1 bytes @ 0xA
  2284  004E                     	ds	1
  2285  004F                     printf@val:
  2286                           
  2287                           ; 2 bytes @ 0xB
  2288  004F                     	ds	2
  2289  0051                     printf@c:
  2290                           
  2291                           ; 1 bytes @ 0xD
  2292  0051                     	ds	1
  2293  0052                     ?_TMR2_SetInterruptHandler:
  2294  0052                     ??_OSCILLATOR_Initialize:	
  2295                           ; 1 bytes @ 0xE
  2296                           
  2297  0052                     ??_WDT_Initialize:	
  2298                           ; 1 bytes @ 0xE
  2299                           
  2300  0052                     ??_ADC_Initialize:	
  2301                           ; 1 bytes @ 0xE
  2302                           
  2303  0052                     ?_EUSART_SetRxInterruptHandler:	
  2304                           ; 1 bytes @ 0xE
  2305                           
  2306  0052                     ?_EUSART_SetTxInterruptHandler:	
  2307                           ; 1 bytes @ 0xE
  2308                           
  2309  0052                     ?_EUSART_SetFramingErrorHandler:	
  2310                           ; 1 bytes @ 0xE
  2311                           
  2312  0052                     ?_EUSART_SetOverrunErrorHandler:	
  2313                           ; 1 bytes @ 0xE
  2314                           
  2315  0052                     ?_EUSART_SetErrorHandler:	
  2316                           ; 1 bytes @ 0xE
  2317                           
  2318  0052                     ??_PIN_MANAGER_Initialize:	
  2319                           ; 1 bytes @ 0xE
  2320                           
  2321  0052                     ??_PWM1_Initialize:	
  2322                           ; 1 bytes @ 0xE
  2323                           
  2324  0052                     TMR2_SetInterruptHandler@InterruptHandler:	
  2325                           ; 1 bytes @ 0xE
  2326                           
  2327  0052                     EUSART_SetFramingErrorHandler@interruptHandler:	
  2328                           ; 2 bytes @ 0xE
  2329                           
  2330  0052                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  2331                           ; 2 bytes @ 0xE
  2332                           
  2333  0052                     EUSART_SetErrorHandler@interruptHandler:	
  2334                           ; 2 bytes @ 0xE
  2335                           
  2336  0052                     EUSART_SetTxInterruptHandler@interruptHandler:	
  2337                           ; 2 bytes @ 0xE
  2338                           
  2339  0052                     EUSART_SetRxInterruptHandler@interruptHandler:	
  2340                           ; 2 bytes @ 0xE
  2341                           
  2342                           
  2343                           ; 2 bytes @ 0xE
  2344  0052                     	ds	2
  2345  0054                     ??_TMR2_SetInterruptHandler:
  2346  0054                     ??_EUSART_Initialize:	
  2347                           ; 1 bytes @ 0x10
  2348                           
  2349  0054                     ??_EUSART_SetRxInterruptHandler:	
  2350                           ; 1 bytes @ 0x10
  2351                           
  2352  0054                     ??_EUSART_SetTxInterruptHandler:	
  2353                           ; 1 bytes @ 0x10
  2354                           
  2355  0054                     ??_EUSART_SetFramingErrorHandler:	
  2356                           ; 1 bytes @ 0x10
  2357                           
  2358  0054                     ??_EUSART_SetOverrunErrorHandler:	
  2359                           ; 1 bytes @ 0x10
  2360                           
  2361  0054                     ??_EUSART_SetErrorHandler:	
  2362                           ; 1 bytes @ 0x10
  2363                           
  2364  0054                     ??_TMR2_Initialize:	
  2365                           ; 1 bytes @ 0x10
  2366                           
  2367                           
  2368                           ; 1 bytes @ 0x10
  2369  0054                     	ds	1
  2370  0055                     ??_SYSTEM_Initialize:
  2371  0055                     ??_main:	
  2372                           ; 1 bytes @ 0x11
  2373                           
  2374                           
  2375                           	psect	maintext
  2376  02DC                     __pmaintext:	
  2377                           ; 1 bytes @ 0x11
  2378 ;;
  2379 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2380 ;;
  2381 ;; *************** function _main *****************
  2382 ;; Defined at:
  2383 ;;		line 50 in file "main.c"
  2384 ;; Parameters:    Size  Location     Type
  2385 ;;		None
  2386 ;; Auto vars:     Size  Location     Type
  2387 ;;		None
  2388 ;; Return value:  Size  Location     Type
  2389 ;;                  1    wreg      void 
  2390 ;; Registers used:
  2391 ;;		wreg, status,2, status,0, pclath, cstack
  2392 ;; Tracked objects:
  2393 ;;		On entry : B1F/0
  2394 ;;		On exit  : 0/0
  2395 ;;		Unchanged: 0/0
  2396 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2397 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2398 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2399 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2400 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2401 ;;Total ram usage:        0 bytes
  2402 ;; Hardware stack levels required when called:   10
  2403 ;; This function calls:
  2404 ;;		_SYSTEM_Initialize
  2405 ;; This function is called by:
  2406 ;;		Startup code after reset
  2407 ;; This function uses a non-reentrant model
  2408 ;;
  2409                           
  2410                           
  2411                           ;psect for function _main
  2412  02DC                     _main:
  2413  02DC                     l1714:	
  2414                           ;incstack = 0
  2415                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
  2416                           
  2417                           
  2418                           ;main.c: 52: TXSTAbits.TXEN = 1;
  2419  02DC  0023               	movlb	3	; select bank3
  2420  02DD  169E               	bsf	30,5	;volatile
  2421                           
  2422                           ;main.c: 53: RCSTAbits.SPEN = 1;
  2423  02DE  179D               	bsf	29,7	;volatile
  2424  02DF                     l1716:
  2425                           
  2426                           ;main.c: 56: SYSTEM_Initialize();
  2427  02DF  3182  22A6  3182   	fcall	_SYSTEM_Initialize
  2428  02E2                     l1718:
  2429                           
  2430                           ;main.c: 63: (INTCONbits.GIE = 1);
  2431  02E2  178B               	bsf	11,7	;volatile
  2432  02E3                     l1720:
  2433                           
  2434                           ;main.c: 66: (INTCONbits.PEIE = 1);
  2435  02E3  170B               	bsf	11,6	;volatile
  2436  02E4                     l375:	
  2437                           ;main.c: 74: while (1)
  2438                           
  2439  02E4                     l376:	
  2440                           ;main.c: 75: {
  2441                           
  2442  02E4  2AE4               	goto	l375
  2443  02E5  3180  283A         	ljmp	start
  2444  02E7                     __end_of_main:
  2445                           
  2446                           	psect	text1
  2447  02A6                     __ptext1:	
  2448 ;; *************** function _SYSTEM_Initialize *****************
  2449 ;; Defined at:
  2450 ;;		line 50 in file "mcc_generated_files/mcc.c"
  2451 ;; Parameters:    Size  Location     Type
  2452 ;;		None
  2453 ;; Auto vars:     Size  Location     Type
  2454 ;;		None
  2455 ;; Return value:  Size  Location     Type
  2456 ;;                  1    wreg      void 
  2457 ;; Registers used:
  2458 ;;		wreg, status,2, status,0, pclath, cstack
  2459 ;; Tracked objects:
  2460 ;;		On entry : 0/0
  2461 ;;		On exit  : 0/0
  2462 ;;		Unchanged: 0/0
  2463 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2464 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2465 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2466 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2467 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2468 ;;Total ram usage:        0 bytes
  2469 ;; Hardware stack levels used:    1
  2470 ;; Hardware stack levels required when called:    9
  2471 ;; This function calls:
  2472 ;;		_ADC_Initialize
  2473 ;;		_EUSART_Initialize
  2474 ;;		_OSCILLATOR_Initialize
  2475 ;;		_PIN_MANAGER_Initialize
  2476 ;;		_PWM1_Initialize
  2477 ;;		_TMR2_Initialize
  2478 ;;		_WDT_Initialize
  2479 ;; This function is called by:
  2480 ;;		_main
  2481 ;; This function uses a non-reentrant model
  2482 ;;
  2483                           
  2484                           
  2485                           ;psect for function _SYSTEM_Initialize
  2486  02A6                     _SYSTEM_Initialize:
  2487  02A6                     l1638:	
  2488                           ;incstack = 0
  2489                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2490                           
  2491                           
  2492                           ;mcc.c: 53: PIN_MANAGER_Initialize();
  2493  02A6  3182  2222  3182   	fcall	_PIN_MANAGER_Initialize
  2494                           
  2495                           ;mcc.c: 54: OSCILLATOR_Initialize();
  2496  02A9  3183  2303  3182   	fcall	_OSCILLATOR_Initialize
  2497                           
  2498                           ;mcc.c: 55: WDT_Initialize();
  2499  02AC  3183  2346  3182   	fcall	_WDT_Initialize
  2500                           
  2501                           ;mcc.c: 56: PWM1_Initialize();
  2502  02AF  3182  22F1  3182   	fcall	_PWM1_Initialize
  2503                           
  2504                           ;mcc.c: 57: ADC_Initialize();
  2505  02B2  3182  22FA  3182   	fcall	_ADC_Initialize
  2506                           
  2507                           ;mcc.c: 58: TMR2_Initialize();
  2508  02B5  3182  22BC  3182   	fcall	_TMR2_Initialize
  2509                           
  2510                           ;mcc.c: 59: EUSART_Initialize();
  2511  02B8  3181  210A  3182   	fcall	_EUSART_Initialize
  2512  02BB                     l141:
  2513  02BB  0008               	return
  2514  02BC                     __end_of_SYSTEM_Initialize:
  2515                           
  2516                           	psect	text2
  2517  0346                     __ptext2:	
  2518 ;; *************** function _WDT_Initialize *****************
  2519 ;; Defined at:
  2520 ;;		line 74 in file "mcc_generated_files/mcc.c"
  2521 ;; Parameters:    Size  Location     Type
  2522 ;;		None
  2523 ;; Auto vars:     Size  Location     Type
  2524 ;;		None
  2525 ;; Return value:  Size  Location     Type
  2526 ;;                  1    wreg      void 
  2527 ;; Registers used:
  2528 ;;		wreg
  2529 ;; Tracked objects:
  2530 ;;		On entry : 0/0
  2531 ;;		On exit  : 0/0
  2532 ;;		Unchanged: 0/0
  2533 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2534 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2535 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2536 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2537 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2538 ;;Total ram usage:        0 bytes
  2539 ;; Hardware stack levels used:    1
  2540 ;; Hardware stack levels required when called:    7
  2541 ;; This function calls:
  2542 ;;		Nothing
  2543 ;; This function is called by:
  2544 ;;		_SYSTEM_Initialize
  2545 ;; This function uses a non-reentrant model
  2546 ;;
  2547                           
  2548                           
  2549                           ;psect for function _WDT_Initialize
  2550  0346                     _WDT_Initialize:
  2551  0346                     l1586:	
  2552                           ;incstack = 0
  2553                           ; Regs used in _WDT_Initialize: [wreg]
  2554                           
  2555                           
  2556                           ;mcc.c: 77: WDTCON = 0x16;
  2557  0346  3016               	movlw	22
  2558  0347  0021               	movlb	1	; select bank1
  2559  0348  0097               	movwf	23	;volatile
  2560  0349                     l147:
  2561  0349  0008               	return
  2562  034A                     __end_of_WDT_Initialize:
  2563                           
  2564                           	psect	text3
  2565  02BC                     __ptext3:	
  2566 ;; *************** function _TMR2_Initialize *****************
  2567 ;; Defined at:
  2568 ;;		line 66 in file "mcc_generated_files/tmr2.c"
  2569 ;; Parameters:    Size  Location     Type
  2570 ;;		None
  2571 ;; Auto vars:     Size  Location     Type
  2572 ;;		None
  2573 ;; Return value:  Size  Location     Type
  2574 ;;                  1    wreg      void 
  2575 ;; Registers used:
  2576 ;;		wreg, status,2, status,0, pclath, cstack
  2577 ;; Tracked objects:
  2578 ;;		On entry : 0/0
  2579 ;;		On exit  : 0/0
  2580 ;;		Unchanged: 0/0
  2581 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2582 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2583 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2584 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2585 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2586 ;;Total ram usage:        0 bytes
  2587 ;; Hardware stack levels used:    1
  2588 ;; Hardware stack levels required when called:    8
  2589 ;; This function calls:
  2590 ;;		_TMR2_SetInterruptHandler
  2591 ;; This function is called by:
  2592 ;;		_SYSTEM_Initialize
  2593 ;; This function uses a non-reentrant model
  2594 ;;
  2595                           
  2596                           
  2597                           ;psect for function _TMR2_Initialize
  2598  02BC                     _TMR2_Initialize:
  2599  02BC                     l1562:	
  2600                           ;incstack = 0
  2601                           ; Regs used in _TMR2_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2602                           
  2603                           
  2604                           ;tmr2.c: 71: PR2 = 0x26;
  2605  02BC  3026               	movlw	38
  2606  02BD  0020               	movlb	0	; select bank0
  2607  02BE  009B               	movwf	27	;volatile
  2608  02BF                     l1564:
  2609                           
  2610                           ;tmr2.c: 74: TMR2 = 0x00;
  2611  02BF  019A               	clrf	26	;volatile
  2612  02C0                     l1566:
  2613                           
  2614                           ;tmr2.c: 77: PIR1bits.TMR2IF = 0;
  2615  02C0  1091               	bcf	17,1	;volatile
  2616  02C1                     l1568:
  2617                           
  2618                           ;tmr2.c: 80: PIE1bits.TMR2IE = 1;
  2619  02C1  0021               	movlb	1	; select bank1
  2620  02C2  1491               	bsf	17,1	;volatile
  2621  02C3                     l1570:
  2622                           
  2623                           ;tmr2.c: 83: TMR2_SetInterruptHandler(TMR2_DefaultInterruptHandler);
  2624  02C3  306B               	movlw	low _TMR2_DefaultInterruptHandler
  2625  02C4  0020               	movlb	0	; select bank0
  2626  02C5  00D2               	movwf	TMR2_SetInterruptHandler@InterruptHandler
  2627  02C6  3002               	movlw	high _TMR2_DefaultInterruptHandler
  2628  02C7  00D3               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1
  2629  02C8  3183  2311  3182   	fcall	_TMR2_SetInterruptHandler
  2630  02CB                     l1572:
  2631                           
  2632                           ;tmr2.c: 86: T2CON = 0x1F;
  2633  02CB  301F               	movlw	31
  2634  02CC  0020               	movlb	0	; select bank0
  2635  02CD  009C               	movwf	28	;volatile
  2636  02CE                     l81:
  2637  02CE  0008               	return
  2638  02CF                     __end_of_TMR2_Initialize:
  2639                           
  2640                           	psect	text4
  2641  0311                     __ptext4:	
  2642 ;; *************** function _TMR2_SetInterruptHandler *****************
  2643 ;; Defined at:
  2644 ;;		line 142 in file "mcc_generated_files/tmr2.c"
  2645 ;; Parameters:    Size  Location     Type
  2646 ;;  InterruptHan    2   14[BANK0 ] PTR FTN()void 
  2647 ;;		 -> TMR2_DefaultInterruptHandler(1), 
  2648 ;; Auto vars:     Size  Location     Type
  2649 ;;		None
  2650 ;; Return value:  Size  Location     Type
  2651 ;;                  1    wreg      void 
  2652 ;; Registers used:
  2653 ;;		wreg
  2654 ;; Tracked objects:
  2655 ;;		On entry : 0/0
  2656 ;;		On exit  : 0/0
  2657 ;;		Unchanged: 0/0
  2658 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2659 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2660 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2661 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2662 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2663 ;;Total ram usage:        2 bytes
  2664 ;; Hardware stack levels used:    1
  2665 ;; Hardware stack levels required when called:    7
  2666 ;; This function calls:
  2667 ;;		Nothing
  2668 ;; This function is called by:
  2669 ;;		_TMR2_Initialize
  2670 ;; This function uses a non-reentrant model
  2671 ;;
  2672                           
  2673                           
  2674                           ;psect for function _TMR2_SetInterruptHandler
  2675  0311                     _TMR2_SetInterruptHandler:
  2676  0311                     l1494:	
  2677                           ;incstack = 0
  2678                           ; Regs used in _TMR2_SetInterruptHandler: [wreg]
  2679                           
  2680                           
  2681                           ;tmr2.c: 143: TMR2_InterruptHandler = InterruptHandler;
  2682  0311  0020               	movlb	0	; select bank0
  2683  0312  0853               	movf	TMR2_SetInterruptHandler@InterruptHandler+1,w
  2684  0313  00E0               	movwf	_TMR2_InterruptHandler+1
  2685  0314  0852               	movf	TMR2_SetInterruptHandler@InterruptHandler,w
  2686  0315  00DF               	movwf	_TMR2_InterruptHandler
  2687  0316                     l106:
  2688  0316  0008               	return
  2689  0317                     __end_of_TMR2_SetInterruptHandler:
  2690                           
  2691                           	psect	text5
  2692  02F1                     __ptext5:	
  2693 ;; *************** function _PWM1_Initialize *****************
  2694 ;; Defined at:
  2695 ;;		line 64 in file "mcc_generated_files/pwm1.c"
  2696 ;; Parameters:    Size  Location     Type
  2697 ;;		None
  2698 ;; Auto vars:     Size  Location     Type
  2699 ;;		None
  2700 ;; Return value:  Size  Location     Type
  2701 ;;                  1    wreg      void 
  2702 ;; Registers used:
  2703 ;;		wreg, status,2, status,0
  2704 ;; Tracked objects:
  2705 ;;		On entry : 0/0
  2706 ;;		On exit  : 0/0
  2707 ;;		Unchanged: 0/0
  2708 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2709 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2710 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2711 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2712 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2713 ;;Total ram usage:        0 bytes
  2714 ;; Hardware stack levels used:    1
  2715 ;; Hardware stack levels required when called:    7
  2716 ;; This function calls:
  2717 ;;		Nothing
  2718 ;; This function is called by:
  2719 ;;		_SYSTEM_Initialize
  2720 ;; This function uses a non-reentrant model
  2721 ;;
  2722                           
  2723                           
  2724                           ;psect for function _PWM1_Initialize
  2725  02F1                     _PWM1_Initialize:
  2726  02F1                     l1556:	
  2727                           ;incstack = 0
  2728                           ; Regs used in _PWM1_Initialize: [wreg+status,2+status,0]
  2729                           
  2730                           
  2731                           ;pwm1.c: 69: CCP1CON = 0x1C;
  2732  02F1  301C               	movlw	28
  2733  02F2  0025               	movlb	5	; select bank5
  2734  02F3  0093               	movwf	19	;volatile
  2735                           
  2736                           ;pwm1.c: 72: CCPR1L = 0x3E;
  2737  02F4  303E               	movlw	62
  2738  02F5  0091               	movwf	17	;volatile
  2739  02F6                     l1558:
  2740                           
  2741                           ;pwm1.c: 75: CCPR1H = 0x00;
  2742  02F6  0192               	clrf	18	;volatile
  2743  02F7                     l1560:
  2744                           
  2745                           ;pwm1.c: 78: CCPTMRSbits.C1TSEL = 0x0;
  2746  02F7  30FC               	movlw	-4
  2747  02F8  059E               	andwf	30,f	;volatile
  2748  02F9                     l53:
  2749  02F9  0008               	return
  2750  02FA                     __end_of_PWM1_Initialize:
  2751                           
  2752                           	psect	text6
  2753  0222                     __ptext6:	
  2754 ;; *************** function _PIN_MANAGER_Initialize *****************
  2755 ;; Defined at:
  2756 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  2757 ;; Parameters:    Size  Location     Type
  2758 ;;		None
  2759 ;; Auto vars:     Size  Location     Type
  2760 ;;		None
  2761 ;; Return value:  Size  Location     Type
  2762 ;;                  1    wreg      void 
  2763 ;; Registers used:
  2764 ;;		wreg, status,2
  2765 ;; Tracked objects:
  2766 ;;		On entry : 0/0
  2767 ;;		On exit  : 0/0
  2768 ;;		Unchanged: 0/0
  2769 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2770 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2771 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2772 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2773 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2774 ;;Total ram usage:        0 bytes
  2775 ;; Hardware stack levels used:    1
  2776 ;; Hardware stack levels required when called:    7
  2777 ;; This function calls:
  2778 ;;		Nothing
  2779 ;; This function is called by:
  2780 ;;		_SYSTEM_Initialize
  2781 ;; This function uses a non-reentrant model
  2782 ;;
  2783                           
  2784                           
  2785                           ;psect for function _PIN_MANAGER_Initialize
  2786  0222                     _PIN_MANAGER_Initialize:
  2787  0222                     l1524:	
  2788                           ;incstack = 0
  2789                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  2790                           
  2791                           
  2792                           ;pin_manager.c: 60: LATA = 0x00;
  2793  0222  0022               	movlb	2	; select bank2
  2794  0223  018C               	clrf	12	;volatile
  2795                           
  2796                           ;pin_manager.c: 61: LATC = 0x00;
  2797  0224  018E               	clrf	14	;volatile
  2798  0225                     l1526:
  2799                           
  2800                           ;pin_manager.c: 66: TRISA = 0x06;
  2801  0225  3006               	movlw	6
  2802  0226  0021               	movlb	1	; select bank1
  2803  0227  008C               	movwf	12	;volatile
  2804  0228                     l1528:
  2805                           
  2806                           ;pin_manager.c: 67: TRISC = 0x20;
  2807  0228  3020               	movlw	32
  2808  0229  008E               	movwf	14	;volatile
  2809                           
  2810                           ;pin_manager.c: 72: ANSELC = 0x00;
  2811  022A  0023               	movlb	3	; select bank3
  2812  022B  018E               	clrf	14	;volatile
  2813  022C                     l1530:
  2814                           
  2815                           ;pin_manager.c: 73: ANSELA = 0x06;
  2816  022C  3006               	movlw	6
  2817  022D  008C               	movwf	12	;volatile
  2818  022E                     l1532:
  2819                           
  2820                           ;pin_manager.c: 78: WPUA = 0x00;
  2821  022E  0024               	movlb	4	; select bank4
  2822  022F  018C               	clrf	12	;volatile
  2823  0230                     l1534:
  2824                           
  2825                           ;pin_manager.c: 79: WPUC = 0x00;
  2826  0230  018E               	clrf	14	;volatile
  2827  0231                     l1536:
  2828                           
  2829                           ;pin_manager.c: 80: OPTION_REGbits.nWPUEN = 1;
  2830  0231  0021               	movlb	1	; select bank1
  2831  0232  1795               	bsf	21,7	;volatile
  2832  0233                     l1538:
  2833                           
  2834                           ;pin_manager.c: 85: ODCONA = 0x00;
  2835  0233  0025               	movlb	5	; select bank5
  2836  0234  018C               	clrf	12	;volatile
  2837  0235                     l1540:
  2838                           
  2839                           ;pin_manager.c: 86: ODCONC = 0x00;
  2840  0235  018E               	clrf	14	;volatile
  2841  0236                     l1542:
  2842                           
  2843                           ;pin_manager.c: 91: SLRCONA = 0x37;
  2844  0236  3037               	movlw	55
  2845  0237  0026               	movlb	6	; select bank6
  2846  0238  008C               	movwf	12	;volatile
  2847  0239                     l1544:
  2848                           
  2849                           ;pin_manager.c: 92: SLRCONC = 0x3F;
  2850  0239  303F               	movlw	63
  2851  023A  008E               	movwf	14	;volatile
  2852  023B                     l1546:
  2853                           
  2854                           ;pin_manager.c: 97: INLVLA = 0x3F;
  2855  023B  303F               	movlw	63
  2856  023C  0027               	movlb	7	; select bank7
  2857  023D  008C               	movwf	12	;volatile
  2858  023E                     l1548:
  2859                           
  2860                           ;pin_manager.c: 98: INLVLC = 0x3F;
  2861  023E  303F               	movlw	63
  2862  023F  008E               	movwf	14	;volatile
  2863  0240                     l1550:
  2864                           
  2865                           ;pin_manager.c: 107: RXPPS = 0x15;
  2866  0240  3015               	movlw	21
  2867  0241  003C               	movlb	28	; select bank28
  2868  0242  00A4               	movwf	36	;volatile
  2869  0243                     l1552:
  2870                           
  2871                           ;pin_manager.c: 108: RC1PPS = 0x0C;
  2872  0243  300C               	movlw	12
  2873  0244  003D               	movlb	29	; select bank29
  2874  0245  00A1               	movwf	33	;volatile
  2875  0246                     l1554:
  2876                           
  2877                           ;pin_manager.c: 109: RC4PPS = 0x14;
  2878  0246  3014               	movlw	20
  2879  0247  00A4               	movwf	36	;volatile
  2880  0248                     l39:
  2881  0248  0008               	return
  2882  0249                     __end_of_PIN_MANAGER_Initialize:
  2883                           
  2884                           	psect	text7
  2885  0303                     __ptext7:	
  2886 ;; *************** function _OSCILLATOR_Initialize *****************
  2887 ;; Defined at:
  2888 ;;		line 62 in file "mcc_generated_files/mcc.c"
  2889 ;; Parameters:    Size  Location     Type
  2890 ;;		None
  2891 ;; Auto vars:     Size  Location     Type
  2892 ;;		None
  2893 ;; Return value:  Size  Location     Type
  2894 ;;                  1    wreg      void 
  2895 ;; Registers used:
  2896 ;;		wreg, status,2
  2897 ;; Tracked objects:
  2898 ;;		On entry : 0/0
  2899 ;;		On exit  : 0/0
  2900 ;;		Unchanged: 0/0
  2901 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2902 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2903 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2904 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2905 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2906 ;;Total ram usage:        0 bytes
  2907 ;; Hardware stack levels used:    1
  2908 ;; Hardware stack levels required when called:    7
  2909 ;; This function calls:
  2910 ;;		Nothing
  2911 ;; This function is called by:
  2912 ;;		_SYSTEM_Initialize
  2913 ;; This function uses a non-reentrant model
  2914 ;;
  2915                           
  2916                           
  2917                           ;psect for function _OSCILLATOR_Initialize
  2918  0303                     _OSCILLATOR_Initialize:
  2919  0303                     l1578:	
  2920                           ;incstack = 0
  2921                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  2922                           
  2923                           
  2924                           ;mcc.c: 65: OSCCON = 0x6A;
  2925  0303  306A               	movlw	106
  2926  0304  0021               	movlb	1	; select bank1
  2927  0305  0099               	movwf	25	;volatile
  2928  0306                     l1580:
  2929                           
  2930                           ;mcc.c: 67: OSCSTAT = 0x00;
  2931  0306  019A               	clrf	26	;volatile
  2932  0307                     l1582:
  2933                           
  2934                           ;mcc.c: 69: OSCTUNE = 0x00;
  2935  0307  0198               	clrf	24	;volatile
  2936  0308                     l1584:
  2937                           
  2938                           ;mcc.c: 71: BORCON = 0x00;
  2939  0308  0022               	movlb	2	; select bank2
  2940  0309  0196               	clrf	22	;volatile
  2941  030A                     l144:
  2942  030A  0008               	return
  2943  030B                     __end_of_OSCILLATOR_Initialize:
  2944                           
  2945                           	psect	text8
  2946  010A                     __ptext8:	
  2947 ;; *************** function _EUSART_Initialize *****************
  2948 ;; Defined at:
  2949 ;;		line 88 in file "mcc_generated_files/eusart.c"
  2950 ;; Parameters:    Size  Location     Type
  2951 ;;		None
  2952 ;; Auto vars:     Size  Location     Type
  2953 ;;		None
  2954 ;; Return value:  Size  Location     Type
  2955 ;;                  1    wreg      void 
  2956 ;; Registers used:
  2957 ;;		wreg, status,2, status,0, pclath, cstack
  2958 ;; Tracked objects:
  2959 ;;		On entry : 0/0
  2960 ;;		On exit  : 0/0
  2961 ;;		Unchanged: 0/0
  2962 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2963 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2964 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2965 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2966 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2967 ;;Total ram usage:        1 bytes
  2968 ;; Hardware stack levels used:    1
  2969 ;; Hardware stack levels required when called:    8
  2970 ;; This function calls:
  2971 ;;		_EUSART_SetErrorHandler
  2972 ;;		_EUSART_SetFramingErrorHandler
  2973 ;;		_EUSART_SetOverrunErrorHandler
  2974 ;;		_EUSART_SetRxInterruptHandler
  2975 ;;		_EUSART_SetTxInterruptHandler
  2976 ;; This function is called by:
  2977 ;;		_SYSTEM_Initialize
  2978 ;; This function uses a non-reentrant model
  2979 ;;
  2980                           
  2981                           
  2982                           ;psect for function _EUSART_Initialize
  2983  010A                     _EUSART_Initialize:
  2984  010A                     l1598:	
  2985                           ;incstack = 0
  2986                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2987                           
  2988                           
  2989                           ;eusart.c: 91: PIE1bits.RCIE = 0;
  2990  010A  0021               	movlb	1	; select bank1
  2991  010B  1291               	bcf	17,5	;volatile
  2992  010C                     l1600:
  2993                           
  2994                           ;eusart.c: 92: EUSART_SetRxInterruptHandler(EUSART_Receive_ISR);
  2995  010C  308A               	movlw	low _EUSART_Receive_ISR
  2996  010D  0020               	movlb	0	; select bank0
  2997  010E  00D2               	movwf	EUSART_SetRxInterruptHandler@interruptHandler
  2998  010F  3001               	movlw	high _EUSART_Receive_ISR
  2999  0110  00D3               	movwf	EUSART_SetRxInterruptHandler@interruptHandler+1
  3000  0111  3183  231D  3181   	fcall	_EUSART_SetRxInterruptHandler
  3001  0114                     l1602:
  3002                           
  3003                           ;eusart.c: 93: PIE1bits.TXIE = 0;
  3004  0114  0021               	movlb	1	; select bank1
  3005  0115  1211               	bcf	17,4	;volatile
  3006                           
  3007                           ;eusart.c: 94: EUSART_SetTxInterruptHandler(EUSART_Transmit_ISR);
  3008  0116  3049               	movlw	low _EUSART_Transmit_ISR
  3009  0117  0020               	movlb	0	; select bank0
  3010  0118  00D2               	movwf	EUSART_SetTxInterruptHandler@interruptHandler
  3011  0119  3002               	movlw	high _EUSART_Transmit_ISR
  3012  011A  00D3               	movwf	EUSART_SetTxInterruptHandler@interruptHandler+1
  3013  011B  3183  2317  3181   	fcall	_EUSART_SetTxInterruptHandler
  3014  011E                     l1604:
  3015                           
  3016                           ;eusart.c: 98: BAUD1CON = 0x08;
  3017  011E  3008               	movlw	8
  3018  011F  0023               	movlb	3	; select bank3
  3019  0120  009F               	movwf	31	;volatile
  3020  0121                     l1606:
  3021                           
  3022                           ;eusart.c: 101: RC1STA = 0x90;
  3023  0121  3090               	movlw	144
  3024  0122  009D               	movwf	29	;volatile
  3025  0123                     l1608:
  3026                           
  3027                           ;eusart.c: 104: TX1STA = 0x24;
  3028  0123  3024               	movlw	36
  3029  0124  009E               	movwf	30	;volatile
  3030  0125                     l1610:
  3031                           
  3032                           ;eusart.c: 107: SP1BRGL = 0x67;
  3033  0125  3067               	movlw	103
  3034  0126  009B               	movwf	27	;volatile
  3035  0127                     l1612:
  3036                           
  3037                           ;eusart.c: 110: SP1BRGH = 0x00;
  3038  0127  019C               	clrf	28	;volatile
  3039  0128                     l1614:
  3040                           
  3041                           ;eusart.c: 113: EUSART_SetFramingErrorHandler(EUSART_DefaultFramingErrorHandler);
  3042  0128  3052               	movlw	low _EUSART_DefaultFramingErrorHandler
  3043  0129  0020               	movlb	0	; select bank0
  3044  012A  00D2               	movwf	EUSART_SetFramingErrorHandler@interruptHandler
  3045  012B  3003               	movlw	high _EUSART_DefaultFramingErrorHandler
  3046  012C  00D3               	movwf	EUSART_SetFramingErrorHandler@interruptHandler+1
  3047  012D  3183  2329  3181   	fcall	_EUSART_SetFramingErrorHandler
  3048  0130                     l1616:
  3049                           
  3050                           ;eusart.c: 114: EUSART_SetOverrunErrorHandler(EUSART_DefaultOverrunErrorHandler);
  3051  0130  304A               	movlw	low _EUSART_DefaultOverrunErrorHandler
  3052  0131  0020               	movlb	0	; select bank0
  3053  0132  00D2               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler
  3054  0133  3003               	movlw	high _EUSART_DefaultOverrunErrorHandler
  3055  0134  00D3               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler+1
  3056  0135  3183  2323  3181   	fcall	_EUSART_SetOverrunErrorHandler
  3057  0138                     l1618:
  3058                           
  3059                           ;eusart.c: 115: EUSART_SetErrorHandler(EUSART_DefaultErrorHandler);
  3060  0138  304E               	movlw	low _EUSART_DefaultErrorHandler
  3061  0139  0020               	movlb	0	; select bank0
  3062  013A  00D2               	movwf	EUSART_SetErrorHandler@interruptHandler
  3063  013B  3003               	movlw	high _EUSART_DefaultErrorHandler
  3064  013C  00D3               	movwf	EUSART_SetErrorHandler@interruptHandler+1
  3065  013D  3183  232F  3181   	fcall	_EUSART_SetErrorHandler
  3066                           
  3067                           ;eusart.c: 117: eusartRxLastError.status = 0;
  3068  0140  0020               	movlb	0	; select bank0
  3069  0141  01BE               	clrf	_eusartRxLastError	;volatile
  3070                           
  3071                           ;eusart.c: 120: eusartTxHead = 0;
  3072  0142  01C3               	clrf	_eusartTxHead	;volatile
  3073                           
  3074                           ;eusart.c: 121: eusartTxTail = 0;
  3075  0143  01C2               	clrf	_eusartTxTail	;volatile
  3076  0144                     l1620:
  3077                           
  3078                           ;eusart.c: 122: eusartTxBufferRemaining = sizeof(eusartTxBuffer);
  3079  0144  3008               	movlw	8
  3080  0145  00D4               	movwf	??_EUSART_Initialize
  3081  0146  0854               	movf	??_EUSART_Initialize,w
  3082  0147  00E1               	movwf	_eusartTxBufferRemaining	;volatile
  3083  0148                     l1622:
  3084                           
  3085                           ;eusart.c: 124: eusartRxHead = 0;
  3086  0148  01C1               	clrf	_eusartRxHead	;volatile
  3087  0149                     l1624:
  3088                           
  3089                           ;eusart.c: 125: eusartRxTail = 0;
  3090  0149  01C0               	clrf	_eusartRxTail	;volatile
  3091  014A                     l1626:
  3092                           
  3093                           ;eusart.c: 126: eusartRxCount = 0;
  3094  014A  01BF               	clrf	_eusartRxCount	;volatile
  3095  014B                     l1628:
  3096                           
  3097                           ;eusart.c: 129: PIE1bits.RCIE = 1;
  3098  014B  0021               	movlb	1	; select bank1
  3099  014C  1691               	bsf	17,5	;volatile
  3100  014D                     l262:
  3101  014D  0008               	return
  3102  014E                     __end_of_EUSART_Initialize:
  3103                           
  3104                           	psect	text9
  3105  0317                     __ptext9:	
  3106 ;; *************** function _EUSART_SetTxInterruptHandler *****************
  3107 ;; Defined at:
  3108 ;;		line 285 in file "mcc_generated_files/eusart.c"
  3109 ;; Parameters:    Size  Location     Type
  3110 ;;  interruptHan    2   14[BANK0 ] PTR FTN()void 
  3111 ;;		 -> EUSART_Transmit_ISR(1), 
  3112 ;; Auto vars:     Size  Location     Type
  3113 ;;		None
  3114 ;; Return value:  Size  Location     Type
  3115 ;;                  1    wreg      void 
  3116 ;; Registers used:
  3117 ;;		wreg
  3118 ;; Tracked objects:
  3119 ;;		On entry : 0/0
  3120 ;;		On exit  : 0/0
  3121 ;;		Unchanged: 0/0
  3122 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3123 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3124 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3125 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3126 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3127 ;;Total ram usage:        2 bytes
  3128 ;; Hardware stack levels used:    1
  3129 ;; Hardware stack levels required when called:    7
  3130 ;; This function calls:
  3131 ;;		Nothing
  3132 ;; This function is called by:
  3133 ;;		_EUSART_Initialize
  3134 ;; This function uses a non-reentrant model
  3135 ;;
  3136                           
  3137                           
  3138                           ;psect for function _EUSART_SetTxInterruptHandler
  3139  0317                     _EUSART_SetTxInterruptHandler:
  3140  0317                     l1506:	
  3141                           ;incstack = 0
  3142                           ; Regs used in _EUSART_SetTxInterruptHandler: [wreg]
  3143                           
  3144                           
  3145                           ;eusart.c: 286: EUSART_TxDefaultInterruptHandler = interruptHandler;
  3146  0317  0020               	movlb	0	; select bank0
  3147  0318  0853               	movf	EUSART_SetTxInterruptHandler@interruptHandler+1,w
  3148  0319  00DE               	movwf	_EUSART_TxDefaultInterruptHandler+1
  3149  031A  0852               	movf	EUSART_SetTxInterruptHandler@interruptHandler,w
  3150  031B  00DD               	movwf	_EUSART_TxDefaultInterruptHandler
  3151  031C                     l334:
  3152  031C  0008               	return
  3153  031D                     __end_of_EUSART_SetTxInterruptHandler:
  3154                           
  3155                           	psect	text10
  3156  031D                     __ptext10:	
  3157 ;; *************** function _EUSART_SetRxInterruptHandler *****************
  3158 ;; Defined at:
  3159 ;;		line 289 in file "mcc_generated_files/eusart.c"
  3160 ;; Parameters:    Size  Location     Type
  3161 ;;  interruptHan    2   14[BANK0 ] PTR FTN()void 
  3162 ;;		 -> EUSART_Receive_ISR(1), 
  3163 ;; Auto vars:     Size  Location     Type
  3164 ;;		None
  3165 ;; Return value:  Size  Location     Type
  3166 ;;                  1    wreg      void 
  3167 ;; Registers used:
  3168 ;;		wreg
  3169 ;; Tracked objects:
  3170 ;;		On entry : 0/0
  3171 ;;		On exit  : 0/0
  3172 ;;		Unchanged: 0/0
  3173 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3174 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3175 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3176 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3177 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3178 ;;Total ram usage:        2 bytes
  3179 ;; Hardware stack levels used:    1
  3180 ;; Hardware stack levels required when called:    7
  3181 ;; This function calls:
  3182 ;;		Nothing
  3183 ;; This function is called by:
  3184 ;;		_EUSART_Initialize
  3185 ;; This function uses a non-reentrant model
  3186 ;;
  3187                           
  3188                           
  3189                           ;psect for function _EUSART_SetRxInterruptHandler
  3190  031D                     _EUSART_SetRxInterruptHandler:
  3191  031D                     l1504:	
  3192                           ;incstack = 0
  3193                           ; Regs used in _EUSART_SetRxInterruptHandler: [wreg]
  3194                           
  3195                           
  3196                           ;eusart.c: 290: EUSART_RxDefaultInterruptHandler = interruptHandler;
  3197  031D  0020               	movlb	0	; select bank0
  3198  031E  0853               	movf	EUSART_SetRxInterruptHandler@interruptHandler+1,w
  3199  031F  00DC               	movwf	_EUSART_RxDefaultInterruptHandler+1
  3200  0320  0852               	movf	EUSART_SetRxInterruptHandler@interruptHandler,w
  3201  0321  00DB               	movwf	_EUSART_RxDefaultInterruptHandler
  3202  0322                     l337:
  3203  0322  0008               	return
  3204  0323                     __end_of_EUSART_SetRxInterruptHandler:
  3205                           
  3206                           	psect	text11
  3207  0323                     __ptext11:	
  3208 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  3209 ;; Defined at:
  3210 ;;		line 277 in file "mcc_generated_files/eusart.c"
  3211 ;; Parameters:    Size  Location     Type
  3212 ;;  interruptHan    2   14[BANK0 ] PTR FTN()void 
  3213 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  3214 ;; Auto vars:     Size  Location     Type
  3215 ;;		None
  3216 ;; Return value:  Size  Location     Type
  3217 ;;                  1    wreg      void 
  3218 ;; Registers used:
  3219 ;;		wreg
  3220 ;; Tracked objects:
  3221 ;;		On entry : 0/0
  3222 ;;		On exit  : 0/0
  3223 ;;		Unchanged: 0/0
  3224 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3225 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3226 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3227 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3228 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3229 ;;Total ram usage:        2 bytes
  3230 ;; Hardware stack levels used:    1
  3231 ;; Hardware stack levels required when called:    7
  3232 ;; This function calls:
  3233 ;;		Nothing
  3234 ;; This function is called by:
  3235 ;;		_EUSART_Initialize
  3236 ;; This function uses a non-reentrant model
  3237 ;;
  3238                           
  3239                           
  3240                           ;psect for function _EUSART_SetOverrunErrorHandler
  3241  0323                     _EUSART_SetOverrunErrorHandler:
  3242  0323                     l1510:	
  3243                           ;incstack = 0
  3244                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
  3245                           
  3246                           
  3247                           ;eusart.c: 278: EUSART_OverrunErrorHandler = interruptHandler;
  3248  0323  0020               	movlb	0	; select bank0
  3249  0324  0853               	movf	EUSART_SetOverrunErrorHandler@interruptHandler+1,w
  3250  0325  00D8               	movwf	_EUSART_OverrunErrorHandler+1
  3251  0326  0852               	movf	EUSART_SetOverrunErrorHandler@interruptHandler,w
  3252  0327  00D7               	movwf	_EUSART_OverrunErrorHandler
  3253  0328                     l328:
  3254  0328  0008               	return
  3255  0329                     __end_of_EUSART_SetOverrunErrorHandler:
  3256                           
  3257                           	psect	text12
  3258  0329                     __ptext12:	
  3259 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  3260 ;; Defined at:
  3261 ;;		line 273 in file "mcc_generated_files/eusart.c"
  3262 ;; Parameters:    Size  Location     Type
  3263 ;;  interruptHan    2   14[BANK0 ] PTR FTN()void 
  3264 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  3265 ;; Auto vars:     Size  Location     Type
  3266 ;;		None
  3267 ;; Return value:  Size  Location     Type
  3268 ;;                  1    wreg      void 
  3269 ;; Registers used:
  3270 ;;		wreg
  3271 ;; Tracked objects:
  3272 ;;		On entry : 0/0
  3273 ;;		On exit  : 0/0
  3274 ;;		Unchanged: 0/0
  3275 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3276 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3277 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3278 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3279 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3280 ;;Total ram usage:        2 bytes
  3281 ;; Hardware stack levels used:    1
  3282 ;; Hardware stack levels required when called:    7
  3283 ;; This function calls:
  3284 ;;		Nothing
  3285 ;; This function is called by:
  3286 ;;		_EUSART_Initialize
  3287 ;; This function uses a non-reentrant model
  3288 ;;
  3289                           
  3290                           
  3291                           ;psect for function _EUSART_SetFramingErrorHandler
  3292  0329                     _EUSART_SetFramingErrorHandler:
  3293  0329                     l1508:	
  3294                           ;incstack = 0
  3295                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
  3296                           
  3297                           
  3298                           ;eusart.c: 274: EUSART_FramingErrorHandler = interruptHandler;
  3299  0329  0020               	movlb	0	; select bank0
  3300  032A  0853               	movf	EUSART_SetFramingErrorHandler@interruptHandler+1,w
  3301  032B  00DA               	movwf	_EUSART_FramingErrorHandler+1
  3302  032C  0852               	movf	EUSART_SetFramingErrorHandler@interruptHandler,w
  3303  032D  00D9               	movwf	_EUSART_FramingErrorHandler
  3304  032E                     l325:
  3305  032E  0008               	return
  3306  032F                     __end_of_EUSART_SetFramingErrorHandler:
  3307                           
  3308                           	psect	text13
  3309  032F                     __ptext13:	
  3310 ;; *************** function _EUSART_SetErrorHandler *****************
  3311 ;; Defined at:
  3312 ;;		line 281 in file "mcc_generated_files/eusart.c"
  3313 ;; Parameters:    Size  Location     Type
  3314 ;;  interruptHan    2   14[BANK0 ] PTR FTN()void 
  3315 ;;		 -> EUSART_DefaultErrorHandler(1), 
  3316 ;; Auto vars:     Size  Location     Type
  3317 ;;		None
  3318 ;; Return value:  Size  Location     Type
  3319 ;;                  1    wreg      void 
  3320 ;; Registers used:
  3321 ;;		wreg
  3322 ;; Tracked objects:
  3323 ;;		On entry : 0/0
  3324 ;;		On exit  : 0/0
  3325 ;;		Unchanged: 0/0
  3326 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3327 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3328 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3329 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3330 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3331 ;;Total ram usage:        2 bytes
  3332 ;; Hardware stack levels used:    1
  3333 ;; Hardware stack levels required when called:    7
  3334 ;; This function calls:
  3335 ;;		Nothing
  3336 ;; This function is called by:
  3337 ;;		_EUSART_Initialize
  3338 ;; This function uses a non-reentrant model
  3339 ;;
  3340                           
  3341                           
  3342                           ;psect for function _EUSART_SetErrorHandler
  3343  032F                     _EUSART_SetErrorHandler:
  3344  032F                     l1512:	
  3345                           ;incstack = 0
  3346                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
  3347                           
  3348                           
  3349                           ;eusart.c: 282: EUSART_ErrorHandler = interruptHandler;
  3350  032F  0020               	movlb	0	; select bank0
  3351  0330  0853               	movf	EUSART_SetErrorHandler@interruptHandler+1,w
  3352  0331  00D6               	movwf	_EUSART_ErrorHandler+1
  3353  0332  0852               	movf	EUSART_SetErrorHandler@interruptHandler,w
  3354  0333  00D5               	movwf	_EUSART_ErrorHandler
  3355  0334                     l331:
  3356  0334  0008               	return
  3357  0335                     __end_of_EUSART_SetErrorHandler:
  3358                           
  3359                           	psect	text14
  3360  02FA                     __ptext14:	
  3361 ;; *************** function _ADC_Initialize *****************
  3362 ;; Defined at:
  3363 ;;		line 67 in file "mcc_generated_files/adc.c"
  3364 ;; Parameters:    Size  Location     Type
  3365 ;;		None
  3366 ;; Auto vars:     Size  Location     Type
  3367 ;;		None
  3368 ;; Return value:  Size  Location     Type
  3369 ;;                  1    wreg      void 
  3370 ;; Registers used:
  3371 ;;		wreg, status,2
  3372 ;; Tracked objects:
  3373 ;;		On entry : 0/0
  3374 ;;		On exit  : 0/0
  3375 ;;		Unchanged: 0/0
  3376 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3377 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3378 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3379 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3380 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3381 ;;Total ram usage:        0 bytes
  3382 ;; Hardware stack levels used:    1
  3383 ;; Hardware stack levels required when called:    7
  3384 ;; This function calls:
  3385 ;;		Nothing
  3386 ;; This function is called by:
  3387 ;;		_SYSTEM_Initialize
  3388 ;; This function uses a non-reentrant model
  3389 ;;
  3390                           
  3391                           
  3392                           ;psect for function _ADC_Initialize
  3393  02FA                     _ADC_Initialize:
  3394  02FA                     l1588:	
  3395                           ;incstack = 0
  3396                           ; Regs used in _ADC_Initialize: [wreg+status,2]
  3397                           
  3398                           
  3399                           ;adc.c: 72: ADCON1 = 0x42;
  3400  02FA  3042               	movlw	66
  3401  02FB  0021               	movlb	1	; select bank1
  3402  02FC  009E               	movwf	30	;volatile
  3403  02FD                     l1590:
  3404                           
  3405                           ;adc.c: 75: ADCON2 = 0x00;
  3406  02FD  019F               	clrf	31	;volatile
  3407  02FE                     l1592:
  3408                           
  3409                           ;adc.c: 78: ADRESL = 0x00;
  3410  02FE  019B               	clrf	27	;volatile
  3411  02FF                     l1594:
  3412                           
  3413                           ;adc.c: 81: ADRESH = 0x00;
  3414  02FF  019C               	clrf	28	;volatile
  3415  0300                     l1596:
  3416                           
  3417                           ;adc.c: 84: ADCON0 = 0x01;
  3418  0300  3001               	movlw	1
  3419  0301  009D               	movwf	29	;volatile
  3420  0302                     l166:
  3421  0302  0008               	return
  3422  0303                     __end_of_ADC_Initialize:
  3423                           
  3424                           	psect	intentry
  3425  0004                     __pintentry:	
  3426 ;; *************** function _INTERRUPT_InterruptManager *****************
  3427 ;; Defined at:
  3428 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  3429 ;; Parameters:    Size  Location     Type
  3430 ;;		None
  3431 ;; Auto vars:     Size  Location     Type
  3432 ;;		None
  3433 ;; Return value:  Size  Location     Type
  3434 ;;                  1    wreg      void 
  3435 ;; Registers used:
  3436 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3437 ;; Tracked objects:
  3438 ;;		On entry : 0/0
  3439 ;;		On exit  : 0/0
  3440 ;;		Unchanged: 0/0
  3441 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3442 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3443 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3444 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3445 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3446 ;;Total ram usage:        0 bytes
  3447 ;; Hardware stack levels used:    1
  3448 ;; Hardware stack levels required when called:    6
  3449 ;; This function calls:
  3450 ;;		Absolute function
  3451 ;;		_EUSART_Receive_ISR
  3452 ;;		_EUSART_Transmit_ISR
  3453 ;;		_TMR2_ISR
  3454 ;; This function is called by:
  3455 ;;		Interrupt level 1
  3456 ;; This function uses a non-reentrant model
  3457 ;;
  3458                           
  3459  0004                     _INTERRUPT_InterruptManager:
  3460                           
  3461                           ;incstack = 0
  3462  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  3463                           
  3464                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3465  0005  3180               	pagesel	$
  3466  0006                     i1l1698:
  3467                           
  3468                           ;interrupt_manager.c: 55: if(INTCONbits.PEIE == 1)
  3469  0006  1F0B               	btfss	11,6	;volatile
  3470  0007  2809               	goto	u76_21
  3471  0008  280A               	goto	u76_20
  3472  0009                     u76_21:
  3473  0009  2838               	goto	i1l362
  3474  000A                     u76_20:
  3475  000A                     i1l1700:
  3476                           
  3477                           ;interrupt_manager.c: 56: {;interrupt_manager.c: 57: if(PIE1bits.TXIE == 1 && PIR1bits.T
      +                          XIF == 1)
  3478  000A  0021               	movlb	1	; select bank1
  3479  000B  1E11               	btfss	17,4	;volatile
  3480  000C  280E               	goto	u77_21
  3481  000D  280F               	goto	u77_20
  3482  000E                     u77_21:
  3483  000E  281A               	goto	i1l355
  3484  000F                     u77_20:
  3485  000F                     i1l1702:
  3486  000F  0020               	movlb	0	; select bank0
  3487  0010  1E11               	btfss	17,4	;volatile
  3488  0011  2813               	goto	u78_21
  3489  0012  2814               	goto	u78_20
  3490  0013                     u78_21:
  3491  0013  281A               	goto	i1l355
  3492  0014                     u78_20:
  3493  0014                     i1l1704:
  3494                           
  3495                           ;interrupt_manager.c: 58: {;interrupt_manager.c: 59: EUSART_TxDefaultInterruptHandler();
  3496  0014  085E               	movf	_EUSART_TxDefaultInterruptHandler+1,w
  3497  0015  008A               	movwf	10
  3498  0016  085D               	movf	_EUSART_TxDefaultInterruptHandler,w
  3499  0017  000A               	callw
  3500  0018  3180               	pagesel	$
  3501                           
  3502                           ;interrupt_manager.c: 60: }
  3503  0019  2838               	goto	i1l362
  3504  001A                     i1l355:
  3505                           
  3506                           ;interrupt_manager.c: 61: else if(PIE1bits.RCIE == 1 && PIR1bits.RCIF == 1)
  3507  001A  0021               	movlb	1	; select bank1
  3508  001B  1E91               	btfss	17,5	;volatile
  3509  001C  281E               	goto	u79_21
  3510  001D  281F               	goto	u79_20
  3511  001E                     u79_21:
  3512  001E  282A               	goto	i1l357
  3513  001F                     u79_20:
  3514  001F                     i1l1706:
  3515  001F  0020               	movlb	0	; select bank0
  3516  0020  1E91               	btfss	17,5	;volatile
  3517  0021  2823               	goto	u80_21
  3518  0022  2824               	goto	u80_20
  3519  0023                     u80_21:
  3520  0023  282A               	goto	i1l357
  3521  0024                     u80_20:
  3522  0024                     i1l1708:
  3523                           
  3524                           ;interrupt_manager.c: 62: {;interrupt_manager.c: 63: EUSART_RxDefaultInterruptHandler();
  3525  0024  085C               	movf	_EUSART_RxDefaultInterruptHandler+1,w
  3526  0025  008A               	movwf	10
  3527  0026  085B               	movf	_EUSART_RxDefaultInterruptHandler,w
  3528  0027  000A               	callw
  3529  0028  3180               	pagesel	$
  3530                           
  3531                           ;interrupt_manager.c: 64: }
  3532  0029  2838               	goto	i1l362
  3533  002A                     i1l357:
  3534                           
  3535                           ;interrupt_manager.c: 65: else if(PIE1bits.TMR2IE == 1 && PIR1bits.TMR2IF == 1)
  3536  002A  0021               	movlb	1	; select bank1
  3537  002B  1C91               	btfss	17,1	;volatile
  3538  002C  282E               	goto	u81_21
  3539  002D  282F               	goto	u81_20
  3540  002E                     u81_21:
  3541  002E  2838               	goto	i1l356
  3542  002F                     u81_20:
  3543  002F                     i1l1710:
  3544  002F  0020               	movlb	0	; select bank0
  3545  0030  1C91               	btfss	17,1	;volatile
  3546  0031  2833               	goto	u82_21
  3547  0032  2834               	goto	u82_20
  3548  0033                     u82_21:
  3549  0033  2838               	goto	i1l356
  3550  0034                     u82_20:
  3551  0034                     i1l1712:
  3552                           
  3553                           ;interrupt_manager.c: 66: {;interrupt_manager.c: 67: TMR2_ISR();
  3554  0034  3183  2335  3180   	fcall	_TMR2_ISR
  3555                           
  3556                           ;interrupt_manager.c: 68: }
  3557  0037  2838               	goto	i1l362
  3558  0038                     i1l356:
  3559  0038                     i1l362:	
  3560                           ;interrupt_manager.c: 72: };interrupt_manager.c: 73: }
  3561                           
  3562  0038  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3563  0039  0009               	retfie
  3564  003A                     __end_of_INTERRUPT_InterruptManager:
  3565                           
  3566                           	psect	text16
  3567  0335                     __ptext16:	
  3568 ;; *************** function _TMR2_ISR *****************
  3569 ;; Defined at:
  3570 ;;		line 121 in file "mcc_generated_files/tmr2.c"
  3571 ;; Parameters:    Size  Location     Type
  3572 ;;		None
  3573 ;; Auto vars:     Size  Location     Type
  3574 ;;		None
  3575 ;; Return value:  Size  Location     Type
  3576 ;;                  1    wreg      void 
  3577 ;; Registers used:
  3578 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3579 ;; Tracked objects:
  3580 ;;		On entry : 0/0
  3581 ;;		On exit  : 0/0
  3582 ;;		Unchanged: 0/0
  3583 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3584 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3585 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3586 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3587 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3588 ;;Total ram usage:        0 bytes
  3589 ;; Hardware stack levels used:    1
  3590 ;; Hardware stack levels required when called:    5
  3591 ;; This function calls:
  3592 ;;		_TMR2_CallBack
  3593 ;; This function is called by:
  3594 ;;		_INTERRUPT_InterruptManager
  3595 ;; This function uses a non-reentrant model
  3596 ;;
  3597                           
  3598                           
  3599                           ;psect for function _TMR2_ISR
  3600  0335                     _TMR2_ISR:
  3601  0335                     i1l1634:	
  3602                           ;incstack = 0
  3603                           ; Regs used in _TMR2_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3604                           
  3605                           
  3606                           ;tmr2.c: 125: PIR1bits.TMR2IF = 0;
  3607  0335  0020               	movlb	0	; select bank0
  3608  0336  1091               	bcf	17,1	;volatile
  3609  0337                     i1l1636:
  3610                           
  3611                           ;tmr2.c: 129: TMR2_CallBack();
  3612  0337  3182  22CF  3183   	fcall	_TMR2_CallBack
  3613  033A                     i1l99:
  3614  033A  0008               	return
  3615  033B                     __end_of_TMR2_ISR:
  3616                           
  3617                           	psect	text17
  3618  02CF                     __ptext17:	
  3619 ;; *************** function _TMR2_CallBack *****************
  3620 ;; Defined at:
  3621 ;;		line 132 in file "mcc_generated_files/tmr2.c"
  3622 ;; Parameters:    Size  Location     Type
  3623 ;;		None
  3624 ;; Auto vars:     Size  Location     Type
  3625 ;;		None
  3626 ;; Return value:  Size  Location     Type
  3627 ;;                  1    wreg      void 
  3628 ;; Registers used:
  3629 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3630 ;; Tracked objects:
  3631 ;;		On entry : 0/0
  3632 ;;		On exit  : 0/0
  3633 ;;		Unchanged: 0/0
  3634 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3635 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3636 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3637 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3638 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3639 ;;Total ram usage:        0 bytes
  3640 ;; Hardware stack levels used:    1
  3641 ;; Hardware stack levels required when called:    4
  3642 ;; This function calls:
  3643 ;;		Absolute function
  3644 ;;		_TMR2_DefaultInterruptHandler
  3645 ;; This function is called by:
  3646 ;;		_TMR2_ISR
  3647 ;; This function uses a non-reentrant model
  3648 ;;
  3649                           
  3650                           
  3651                           ;psect for function _TMR2_CallBack
  3652  02CF                     _TMR2_CallBack:
  3653  02CF                     i1l1574:	
  3654                           ;incstack = 0
  3655                           ; Regs used in _TMR2_CallBack: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3656                           
  3657                           
  3658                           ;tmr2.c: 136: if(TMR2_InterruptHandler)
  3659  02CF  0020               	movlb	0	; select bank0
  3660  02D0  085F               	movf	_TMR2_InterruptHandler,w
  3661  02D1  0460               	iorwf	_TMR2_InterruptHandler+1,w
  3662  02D2  1903               	btfsc	3,2
  3663  02D3  2AD5               	goto	u68_21
  3664  02D4  2AD6               	goto	u68_20
  3665  02D5                     u68_21:
  3666  02D5  2ADB               	goto	i1l103
  3667  02D6                     u68_20:
  3668  02D6                     i1l1576:
  3669                           
  3670                           ;tmr2.c: 137: {;tmr2.c: 138: TMR2_InterruptHandler();
  3671  02D6  0860               	movf	_TMR2_InterruptHandler+1,w
  3672  02D7  008A               	movwf	10
  3673  02D8  085F               	movf	_TMR2_InterruptHandler,w
  3674  02D9  000A               	callw
  3675  02DA  3182               	pagesel	$
  3676  02DB                     i1l103:
  3677  02DB  0008               	return
  3678  02DC                     __end_of_TMR2_CallBack:
  3679                           
  3680                           	psect	text18
  3681  026B                     __ptext18:	
  3682 ;; *************** function _TMR2_DefaultInterruptHandler *****************
  3683 ;; Defined at:
  3684 ;;		line 151 in file "mcc_generated_files/tmr2.c"
  3685 ;; Parameters:    Size  Location     Type
  3686 ;;		None
  3687 ;; Auto vars:     Size  Location     Type
  3688 ;;		None
  3689 ;; Return value:  Size  Location     Type
  3690 ;;                  1    wreg      void 
  3691 ;; Registers used:
  3692 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3693 ;; Tracked objects:
  3694 ;;		On entry : 0/0
  3695 ;;		On exit  : 0/0
  3696 ;;		Unchanged: 0/0
  3697 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3698 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3699 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3700 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3701 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3702 ;;Total ram usage:        0 bytes
  3703 ;; Hardware stack levels used:    1
  3704 ;; Hardware stack levels required when called:    3
  3705 ;; This function calls:
  3706 ;;		_printf
  3707 ;; This function is called by:
  3708 ;;		_TMR2_Initialize
  3709 ;;		_TMR2_CallBack
  3710 ;; This function uses a non-reentrant model
  3711 ;;
  3712                           
  3713                           
  3714                           ;psect for function _TMR2_DefaultInterruptHandler
  3715  026B                     _TMR2_DefaultInterruptHandler:
  3716  026B                     i1l1496:	
  3717                           ;incstack = 0
  3718                           ; Regs used in _TMR2_DefaultInterruptHandler: [wreg-fsr1h+status,2+status,0+pclath+cstac
      +                          k]
  3719                           
  3720                           
  3721                           ;tmr2.c: 155: cnt++;
  3722  026B  3001               	movlw	1
  3723  026C  0020               	movlb	0	; select bank0
  3724  026D  07BC               	addwf	_cnt,f
  3725  026E  3000               	movlw	0
  3726  026F  3DBD               	addwfc	_cnt+1,f
  3727                           
  3728                           ;tmr2.c: 157: if (cnt >= 100) {
  3729  0270  3000               	movlw	0
  3730  0271  023D               	subwf	_cnt+1,w
  3731  0272  3064               	movlw	100
  3732  0273  1903               	skipnz
  3733  0274  023C               	subwf	_cnt,w
  3734  0275  1C03               	skipc
  3735  0276  2A78               	goto	u66_21
  3736  0277  2A79               	goto	u66_20
  3737  0278                     u66_21:
  3738  0278  2A8B               	goto	i1l114
  3739  0279                     u66_20:
  3740  0279                     i1l1498:
  3741                           
  3742                           ;tmr2.c: 158: printf("%d\r\n", sec);
  3743  0279  3041               	movlw	low (STR_1| (0+32768))
  3744  027A  00C4               	movwf	printf@f
  3745  027B  3083               	movlw	high (STR_1| (0+32768))
  3746  027C  00C5               	movwf	printf@f+1
  3747  027D  083B               	movf	_sec+1,w
  3748  027E  00C7               	movwf	?_printf+3
  3749  027F  083A               	movf	_sec,w
  3750  0280  00C6               	movwf	?_printf+2
  3751  0281  3180  2048  3182   	fcall	_printf
  3752  0284                     i1l1500:
  3753                           
  3754                           ;tmr2.c: 159: sec++;
  3755  0284  3001               	movlw	1
  3756  0285  0020               	movlb	0	; select bank0
  3757  0286  07BA               	addwf	_sec,f
  3758  0287  3000               	movlw	0
  3759  0288  3DBB               	addwfc	_sec+1,f
  3760  0289                     i1l1502:
  3761                           
  3762                           ;tmr2.c: 160: cnt = 0;
  3763  0289  01BC               	clrf	_cnt
  3764  028A  01BD               	clrf	_cnt+1
  3765  028B                     i1l114:
  3766  028B  0008               	return
  3767  028C                     __end_of_TMR2_DefaultInterruptHandler:
  3768                           
  3769                           	psect	text19
  3770  0048                     __ptext19:	
  3771 ;; *************** function _printf *****************
  3772 ;; Defined at:
  3773 ;;		line 477 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  3774 ;; Parameters:    Size  Location     Type
  3775 ;;  f               2    0[BANK0 ] PTR const unsigned char 
  3776 ;;		 -> STR_1(5), 
  3777 ;; Auto vars:     Size  Location     Type
  3778 ;;  tmpval          4    0        struct .
  3779 ;;  val             2   11[BANK0 ] unsigned int 
  3780 ;;  cp              2    0        PTR const unsigned char 
  3781 ;;  len             2    0        unsigned int 
  3782 ;;  c               1   13[BANK0 ] unsigned char 
  3783 ;;  prec            1   10[BANK0 ] char 
  3784 ;;  flag            1    9[BANK0 ] unsigned char 
  3785 ;;  ap              1    8[BANK0 ] PTR void [1]
  3786 ;;		 -> ?_printf(2), 
  3787 ;; Return value:  Size  Location     Type
  3788 ;;                  2    0[BANK0 ] int 
  3789 ;; Registers used:
  3790 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3791 ;; Tracked objects:
  3792 ;;		On entry : 0/0
  3793 ;;		On exit  : 0/0
  3794 ;;		Unchanged: 0/0
  3795 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3796 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3797 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3798 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3799 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3800 ;;Total ram usage:       14 bytes
  3801 ;; Hardware stack levels used:    1
  3802 ;; Hardware stack levels required when called:    2
  3803 ;; This function calls:
  3804 ;;		___lwdiv
  3805 ;;		___lwmod
  3806 ;;		_putch
  3807 ;; This function is called by:
  3808 ;;		_TMR2_DefaultInterruptHandler
  3809 ;; This function uses a non-reentrant model
  3810 ;;
  3811                           
  3812                           
  3813                           ;psect for function _printf
  3814  0048                     _printf:
  3815  0048                     i1l1446:	
  3816                           ;incstack = 0
  3817                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3818                           
  3819                           
  3820                           ;doprnt.c: 479: va_list ap;;doprnt.c: 512: char c;;doprnt.c: 521: signed char prec;;dopr
      +                          nt.c: 525: unsigned char flag;;doprnt.c: 540: union {;doprnt.c: 541: unsigned long vd;;d
      +                          oprnt.c: 542: double integ;;doprnt.c: 543: } tmpval;;doprnt.c: 545: unsigned int val;;do
      +                          prnt.c: 546: unsigned len;;doprnt.c: 547: const char * cp;;doprnt.c: 550: *ap = __va_sta
      +                          rt();
  3821  0048  3046               	movlw	(low ((?_printf| 0+2)))& (0+255)
  3822  0049  0020               	movlb	0	; select bank0
  3823  004A  00C8               	movwf	??_printf
  3824  004B  0848               	movf	??_printf,w
  3825  004C  00CC               	movwf	printf@ap
  3826                           
  3827                           ;doprnt.c: 553: while((c = *f++)) {
  3828  004D  28F4               	goto	i1l1492
  3829  004E                     i1l1448:
  3830                           
  3831                           ;doprnt.c: 555: if(c != '%')
  3832  004E  3025               	movlw	37
  3833  004F  0651               	xorwf	printf@c,w
  3834  0050  1903               	btfsc	3,2
  3835  0051  2853               	goto	u59_21
  3836  0052  2854               	goto	u59_20
  3837  0053                     u59_21:
  3838  0053  2859               	goto	i1l1452
  3839  0054                     u59_20:
  3840  0054                     i1l1450:
  3841                           
  3842                           ;doprnt.c: 557: {;doprnt.c: 558: (putch(c) );
  3843  0054  0851               	movf	printf@c,w
  3844  0055  3183  233B  3180   	fcall	_putch
  3845                           
  3846                           ;doprnt.c: 559: continue;
  3847  0058  28F4               	goto	i1l1492
  3848  0059                     i1l1452:
  3849                           
  3850                           ;doprnt.c: 560: };doprnt.c: 565: flag = 0;
  3851  0059  01CD               	clrf	printf@flag
  3852  005A                     i1l1456:	
  3853                           ;doprnt.c: 661: switch(c = *f++) {
  3854                           
  3855  005A  0845               	movf	printf@f+1,w
  3856  005B  00C9               	movwf	??_printf+1
  3857  005C  0844               	movf	printf@f,w
  3858  005D  00C8               	movwf	??_printf
  3859  005E  0AC4               	incf	printf@f,f
  3860  005F  1903               	skipnz
  3861  0060  0AC5               	incf	printf@f+1,f
  3862  0061  0848               	movf	??_printf,w
  3863  0062  0084               	movwf	4
  3864  0063  0849               	movf	??_printf+1,w
  3865  0064  0085               	movwf	5
  3866  0065  0800               	movf	0,w	;code access
  3867  0066  00D1               	movwf	printf@c
  3868                           
  3869                           ; Switch size 1, requested type "simple"
  3870                           ; Number of cases is 3, Range of values is 0 to 105
  3871                           ; switch strategies available:
  3872                           ; Name         Instructions Cycles
  3873                           ; simple_byte           10     6 (average)
  3874                           ; direct_byte          218     6 (fixed)
  3875                           ; jumptable            260     6 (fixed)
  3876                           ;	Chosen strategy is simple_byte
  3877  0067  3A00               	xorlw	0	; case 0
  3878  0068  1903               	skipnz
  3879  0069  2909               	goto	i1l472
  3880  006A  3A64               	xorlw	100	; case 100
  3881  006B  1903               	skipnz
  3882  006C  2871               	goto	i1l1458
  3883  006D  3A0D               	xorlw	13	; case 105
  3884  006E  1903               	skipnz
  3885  006F  2871               	goto	i1l1458
  3886  0070  28F4               	goto	i1l1492
  3887  0071                     i1l1458:
  3888                           
  3889                           ;doprnt.c: 1279: {;doprnt.c: 1285: val = (unsigned int)(*(int *)__va_arg((*(int **)ap), 
      +                          (int)0));
  3890  0071  084C               	movf	printf@ap,w
  3891  0072  0086               	movwf	6
  3892  0073  0187               	clrf	7
  3893  0074  3F40               	moviw [0]fsr1
  3894  0075  00CF               	movwf	printf@val
  3895  0076  3F41               	moviw [1]fsr1
  3896  0077  00D0               	movwf	printf@val+1
  3897  0078                     i1l1460:
  3898  0078  3002               	movlw	2
  3899  0079  00C8               	movwf	??_printf
  3900  007A  0848               	movf	??_printf,w
  3901  007B  07CC               	addwf	printf@ap,f
  3902  007C                     i1l1462:
  3903                           
  3904                           ;doprnt.c: 1287: if((int)val < 0) {
  3905  007C  1FD0               	btfss	printf@val+1,7
  3906  007D  287F               	goto	u60_21
  3907  007E  2880               	goto	u60_20
  3908  007F                     u60_21:
  3909  007F  2889               	goto	i1l1468
  3910  0080                     u60_20:
  3911  0080                     i1l1464:
  3912                           
  3913                           ;doprnt.c: 1288: flag |= 0x03;
  3914  0080  3003               	movlw	3
  3915  0081  00C8               	movwf	??_printf
  3916  0082  0848               	movf	??_printf,w
  3917  0083  04CD               	iorwf	printf@flag,f
  3918  0084                     i1l1466:
  3919                           
  3920                           ;doprnt.c: 1289: val = -val;
  3921  0084  09CF               	comf	printf@val,f
  3922  0085  09D0               	comf	printf@val+1,f
  3923  0086  0ACF               	incf	printf@val,f
  3924  0087  1903               	skipnz
  3925  0088  0AD0               	incf	printf@val+1,f
  3926  0089                     i1l1468:
  3927                           
  3928                           ;doprnt.c: 1290: };doprnt.c: 1292: };doprnt.c: 1331: for(c = 1 ; c != sizeof dpowers/siz
      +                          eof dpowers[0] ; c++)
  3929  0089  01D1               	clrf	printf@c
  3930  008A  0AD1               	incf	printf@c,f
  3931  008B                     i1l1474:
  3932                           
  3933                           ;doprnt.c: 1332: if(val < dpowers[c])
  3934  008B  0851               	movf	printf@c,w
  3935  008C  00C8               	movwf	??_printf
  3936  008D  01C9               	clrf	??_printf+1
  3937  008E  35C8               	lslf	??_printf,f
  3938  008F  0DC9               	rlf	??_printf+1,f
  3939  0090  30E7               	movlw	low (_dpowers| (0+32768))
  3940  0091  0748               	addwf	??_printf,w
  3941  0092  0084               	movwf	4
  3942  0093  3082               	movlw	high (_dpowers| (0+32768))
  3943  0094  3D49               	addwfc	??_printf+1,w
  3944  0095  0085               	movwf	5
  3945  0096  3F00               	moviw [0]fsr0
  3946  0097  00CA               	movwf	??_printf+2
  3947  0098  3F01               	moviw [1]fsr0
  3948  0099  00CB               	movwf	??_printf+3
  3949  009A  084B               	movf	??_printf+3,w
  3950  009B  0250               	subwf	printf@val+1,w
  3951  009C  1D03               	skipz
  3952  009D  28A0               	goto	u61_25
  3953  009E  084A               	movf	??_printf+2,w
  3954  009F  024F               	subwf	printf@val,w
  3955  00A0                     u61_25:
  3956  00A0  1803               	skipnc
  3957  00A1  28A3               	goto	u61_21
  3958  00A2  28A4               	goto	u61_20
  3959  00A3                     u61_21:
  3960  00A3  28A5               	goto	i1l1478
  3961  00A4                     u61_20:
  3962  00A4  28AF               	goto	i1l1480
  3963  00A5                     i1l1478:
  3964  00A5  3001               	movlw	1
  3965  00A6  00C8               	movwf	??_printf
  3966  00A7  0848               	movf	??_printf,w
  3967  00A8  07D1               	addwf	printf@c,f
  3968  00A9  3005               	movlw	5
  3969  00AA  0651               	xorwf	printf@c,w
  3970  00AB  1D03               	btfss	3,2
  3971  00AC  28AE               	goto	u62_21
  3972  00AD  28AF               	goto	u62_20
  3973  00AE                     u62_21:
  3974  00AE  288B               	goto	i1l1474
  3975  00AF                     u62_20:
  3976  00AF                     i1l1480:
  3977                           
  3978                           ;doprnt.c: 1448: {;doprnt.c: 1464: if(flag & 0x03)
  3979  00AF  084D               	movf	printf@flag,w
  3980  00B0  3903               	andlw	3
  3981  00B1  1903               	btfsc	3,2
  3982  00B2  28B4               	goto	u63_21
  3983  00B3  28B5               	goto	u63_20
  3984  00B4                     u63_21:
  3985  00B4  28B9               	goto	i1l1484
  3986  00B5                     u63_20:
  3987  00B5                     i1l1482:
  3988                           
  3989                           ;doprnt.c: 1465: (putch('-') );
  3990  00B5  302D               	movlw	45
  3991  00B6  3183  233B  3180   	fcall	_putch
  3992  00B9                     i1l1484:
  3993                           
  3994                           ;doprnt.c: 1495: };doprnt.c: 1498: prec = c;
  3995  00B9  0020               	movlb	0	; select bank0
  3996  00BA  0851               	movf	printf@c,w
  3997  00BB  00C8               	movwf	??_printf
  3998  00BC  0848               	movf	??_printf,w
  3999  00BD  00CE               	movwf	printf@prec
  4000                           
  4001                           ;doprnt.c: 1500: while(prec--) {
  4002  00BE  28EA               	goto	i1l1490
  4003  00BF                     i1l1486:
  4004                           
  4005                           ;doprnt.c: 1504: {;doprnt.c: 1515: c = (val / dpowers[(unsigned char)prec]) % 10 + '0';
  4006  00BF  300A               	movlw	10
  4007  00C0  00F8               	movwf	___lwmod@divisor
  4008  00C1  3000               	movlw	0
  4009  00C2  00F9               	movwf	___lwmod@divisor+1
  4010  00C3  084E               	movf	printf@prec,w
  4011  00C4  00C8               	movwf	??_printf
  4012  00C5  01C9               	clrf	??_printf+1
  4013  00C6  35C8               	lslf	??_printf,f
  4014  00C7  0DC9               	rlf	??_printf+1,f
  4015  00C8  30E7               	movlw	low (_dpowers| (0+32768))
  4016  00C9  0748               	addwf	??_printf,w
  4017  00CA  0084               	movwf	4
  4018  00CB  3082               	movlw	high (_dpowers| (0+32768))
  4019  00CC  3D49               	addwfc	??_printf+1,w
  4020  00CD  0085               	movwf	5
  4021  00CE  3F00               	moviw [0]fsr0
  4022  00CF  00F0               	movwf	___lwdiv@divisor
  4023  00D0  3F01               	moviw [1]fsr0
  4024  00D1  00F1               	movwf	___lwdiv@divisor+1
  4025  00D2  0850               	movf	printf@val+1,w
  4026  00D3  00F3               	movwf	___lwdiv@dividend+1
  4027  00D4  084F               	movf	printf@val,w
  4028  00D5  00F2               	movwf	___lwdiv@dividend
  4029  00D6  3181  214E  3180   	fcall	___lwdiv
  4030  00D9  0871               	movf	?___lwdiv+1,w
  4031  00DA  00FB               	movwf	___lwmod@dividend+1
  4032  00DB  0870               	movf	?___lwdiv,w
  4033  00DC  00FA               	movwf	___lwmod@dividend
  4034  00DD  3181  21C4  3180   	fcall	___lwmod
  4035  00E0  0878               	movf	?___lwmod,w
  4036  00E1  3E30               	addlw	48
  4037  00E2  0020               	movlb	0	; select bank0
  4038  00E3  00CA               	movwf	??_printf+2
  4039  00E4  084A               	movf	??_printf+2,w
  4040  00E5  00D1               	movwf	printf@c
  4041  00E6                     i1l1488:
  4042                           
  4043                           ;doprnt.c: 1549: };doprnt.c: 1550: (putch(c) );
  4044  00E6  0851               	movf	printf@c,w
  4045  00E7  3183  233B  3180   	fcall	_putch
  4046  00EA                     i1l1490:
  4047  00EA  30FF               	movlw	255
  4048  00EB  0020               	movlb	0	; select bank0
  4049  00EC  00C8               	movwf	??_printf
  4050  00ED  0848               	movf	??_printf,w
  4051  00EE  07CE               	addwf	printf@prec,f
  4052  00EF  0A4E               	incf	printf@prec,w
  4053  00F0  1D03               	btfss	3,2
  4054  00F1  28F3               	goto	u64_21
  4055  00F2  28F4               	goto	u64_20
  4056  00F3                     u64_21:
  4057  00F3  28BF               	goto	i1l1486
  4058  00F4                     u64_20:
  4059  00F4                     i1l1492:
  4060  00F4  0020               	movlb	0	; select bank0
  4061  00F5  0845               	movf	printf@f+1,w
  4062  00F6  00C9               	movwf	??_printf+1
  4063  00F7  0844               	movf	printf@f,w
  4064  00F8  00C8               	movwf	??_printf
  4065  00F9  0AC4               	incf	printf@f,f
  4066  00FA  1903               	skipnz
  4067  00FB  0AC5               	incf	printf@f+1,f
  4068  00FC  0848               	movf	??_printf,w
  4069  00FD  0084               	movwf	4
  4070  00FE  0849               	movf	??_printf+1,w
  4071  00FF  0085               	movwf	5
  4072  0100  0800               	movf	0,w	;code access
  4073  0101  00CA               	movwf	??_printf+2
  4074  0102  084A               	movf	??_printf+2,w
  4075  0103  00D1               	movwf	printf@c
  4076  0104  0851               	movf	printf@c,w
  4077  0105  1D03               	btfss	3,2
  4078  0106  2908               	goto	u65_21
  4079  0107  2909               	goto	u65_20
  4080  0108                     u65_21:
  4081  0108  284E               	goto	i1l1448
  4082  0109                     u65_20:
  4083  0109                     i1l472:
  4084  0109  0008               	return
  4085  010A                     __end_of_printf:
  4086                           
  4087                           	psect	text20
  4088  033B                     __ptext20:	
  4089 ;; *************** function _putch *****************
  4090 ;; Defined at:
  4091 ;;		line 201 in file "mcc_generated_files/eusart.c"
  4092 ;; Parameters:    Size  Location     Type
  4093 ;;  txData          1    wreg     unsigned char 
  4094 ;; Auto vars:     Size  Location     Type
  4095 ;;  txData          1    2[COMMON] unsigned char 
  4096 ;; Return value:  Size  Location     Type
  4097 ;;                  1    wreg      void 
  4098 ;; Registers used:
  4099 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4100 ;; Tracked objects:
  4101 ;;		On entry : 0/0
  4102 ;;		On exit  : 0/0
  4103 ;;		Unchanged: 0/0
  4104 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4105 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4106 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4107 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4108 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4109 ;;Total ram usage:        1 bytes
  4110 ;; Hardware stack levels used:    1
  4111 ;; Hardware stack levels required when called:    1
  4112 ;; This function calls:
  4113 ;;		_EUSART_Write
  4114 ;; This function is called by:
  4115 ;;		_printf
  4116 ;; This function uses a non-reentrant model
  4117 ;;
  4118                           
  4119                           
  4120                           ;psect for function _putch
  4121  033B                     _putch:
  4122                           
  4123                           ;incstack = 0
  4124                           ; Regs used in _putch: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4125                           ;putch@txData stored from wreg
  4126  033B  00F2               	movwf	putch@txData
  4127  033C                     i1l1396:
  4128                           
  4129                           ;eusart.c: 203: EUSART_Write(txData);
  4130  033C  0872               	movf	putch@txData,w
  4131  033D  3181  21F8  3183   	fcall	_EUSART_Write
  4132  0340                     i1l296:
  4133  0340  0008               	return
  4134  0341                     __end_of_putch:
  4135                           
  4136                           	psect	text21
  4137  01F8                     __ptext21:	
  4138 ;; *************** function _EUSART_Write *****************
  4139 ;; Defined at:
  4140 ;;		line 173 in file "mcc_generated_files/eusart.c"
  4141 ;; Parameters:    Size  Location     Type
  4142 ;;  txData          1    wreg     unsigned char 
  4143 ;; Auto vars:     Size  Location     Type
  4144 ;;  txData          1    1[COMMON] unsigned char 
  4145 ;; Return value:  Size  Location     Type
  4146 ;;                  1    wreg      void 
  4147 ;; Registers used:
  4148 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4149 ;; Tracked objects:
  4150 ;;		On entry : 0/0
  4151 ;;		On exit  : 0/0
  4152 ;;		Unchanged: 0/0
  4153 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4154 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4155 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4156 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4157 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4158 ;;Total ram usage:        2 bytes
  4159 ;; Hardware stack levels used:    1
  4160 ;; This function calls:
  4161 ;;		Nothing
  4162 ;; This function is called by:
  4163 ;;		_putch
  4164 ;; This function uses a non-reentrant model
  4165 ;;
  4166                           
  4167                           
  4168                           ;psect for function _EUSART_Write
  4169  01F8                     _EUSART_Write:
  4170                           
  4171                           ;incstack = 0
  4172                           ; Regs used in _EUSART_Write: [wreg+fsr1l+fsr1h+status,2+status,0]
  4173                           ;EUSART_Write@txData stored from wreg
  4174  01F8  00F1               	movwf	EUSART_Write@txData
  4175  01F9                     i1l1378:
  4176  01F9                     i1l1380:	
  4177                           ;eusart.c: 175: while(0 == eusartTxBufferRemaining)
  4178                           
  4179  01F9  0020               	movlb	0	; select bank0
  4180  01FA  0861               	movf	_eusartTxBufferRemaining,w	;volatile
  4181  01FB  1903               	btfsc	3,2
  4182  01FC  29FE               	goto	u43_21
  4183  01FD  29FF               	goto	u43_20
  4184  01FE                     u43_21:
  4185  01FE  29F9               	goto	i1l1380
  4186  01FF                     u43_20:
  4187  01FF                     i1l286:
  4188                           
  4189                           ;eusart.c: 177: };eusart.c: 179: if(0 == PIE1bits.TXIE)
  4190  01FF  0021               	movlb	1	; select bank1
  4191  0200  1A11               	btfsc	17,4	;volatile
  4192  0201  2A03               	goto	u44_21
  4193  0202  2A04               	goto	u44_20
  4194  0203                     u44_21:
  4195  0203  2A08               	goto	i1l287
  4196  0204                     u44_20:
  4197  0204                     i1l1382:
  4198                           
  4199                           ;eusart.c: 180: {;eusart.c: 181: TX1REG = txData;
  4200  0204  0871               	movf	EUSART_Write@txData,w
  4201  0205  0023               	movlb	3	; select bank3
  4202  0206  009A               	movwf	26	;volatile
  4203                           
  4204                           ;eusart.c: 182: }
  4205  0207  2A1F               	goto	i1l1394
  4206  0208                     i1l287:
  4207                           
  4208                           ;eusart.c: 183: else;eusart.c: 184: {;eusart.c: 185: PIE1bits.TXIE = 0;
  4209  0208  1211               	bcf	17,4	;volatile
  4210  0209                     i1l1384:
  4211                           
  4212                           ;eusart.c: 186: eusartTxBuffer[eusartTxHead++] = txData;
  4213  0209  0871               	movf	EUSART_Write@txData,w
  4214  020A  00F0               	movwf	??_EUSART_Write
  4215  020B  0020               	movlb	0	; select bank0
  4216  020C  0843               	movf	_eusartTxHead,w
  4217  020D  3E30               	addlw	(low (_eusartTxBuffer| 0))& (0+255)
  4218  020E  0086               	movwf	6
  4219  020F  0187               	clrf	7
  4220  0210  0870               	movf	??_EUSART_Write,w
  4221  0211  0081               	movwf	1
  4222  0212                     i1l1386:
  4223  0212  3001               	movlw	1
  4224  0213  00F0               	movwf	??_EUSART_Write
  4225  0214  0870               	movf	??_EUSART_Write,w
  4226  0215  07C3               	addwf	_eusartTxHead,f	;volatile
  4227  0216                     i1l1388:
  4228                           
  4229                           ;eusart.c: 187: if(sizeof(eusartTxBuffer) <= eusartTxHead)
  4230  0216  3008               	movlw	8
  4231  0217  0243               	subwf	_eusartTxHead,w	;volatile
  4232  0218  1C03               	skipc
  4233  0219  2A1B               	goto	u45_21
  4234  021A  2A1C               	goto	u45_20
  4235  021B                     u45_21:
  4236  021B  2A1D               	goto	i1l1392
  4237  021C                     u45_20:
  4238  021C                     i1l1390:
  4239                           
  4240                           ;eusart.c: 188: {;eusart.c: 189: eusartTxHead = 0;
  4241  021C  01C3               	clrf	_eusartTxHead	;volatile
  4242  021D                     i1l1392:
  4243                           
  4244                           ;eusart.c: 190: };eusart.c: 191: eusartTxBufferRemaining--;
  4245  021D  3001               	movlw	1
  4246  021E  02E1               	subwf	_eusartTxBufferRemaining,f	;volatile
  4247  021F                     i1l1394:
  4248                           
  4249                           ;eusart.c: 192: };eusart.c: 193: PIE1bits.TXIE = 1;
  4250  021F  0021               	movlb	1	; select bank1
  4251  0220  1611               	bsf	17,4	;volatile
  4252  0221                     i1l290:
  4253  0221  0008               	return
  4254  0222                     __end_of_EUSART_Write:
  4255                           
  4256                           	psect	text22
  4257  01C4                     __ptext22:	
  4258 ;; *************** function ___lwmod *****************
  4259 ;; Defined at:
  4260 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  4261 ;; Parameters:    Size  Location     Type
  4262 ;;  divisor         2    8[COMMON] unsigned int 
  4263 ;;  dividend        2   10[COMMON] unsigned int 
  4264 ;; Auto vars:     Size  Location     Type
  4265 ;;  counter         1   13[COMMON] unsigned char 
  4266 ;; Return value:  Size  Location     Type
  4267 ;;                  2    8[COMMON] unsigned int 
  4268 ;; Registers used:
  4269 ;;		wreg, status,2, status,0
  4270 ;; Tracked objects:
  4271 ;;		On entry : 0/0
  4272 ;;		On exit  : 0/0
  4273 ;;		Unchanged: 0/0
  4274 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4275 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4276 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4277 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4278 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4279 ;;Total ram usage:        6 bytes
  4280 ;; Hardware stack levels used:    1
  4281 ;; This function calls:
  4282 ;;		Nothing
  4283 ;; This function is called by:
  4284 ;;		_printf
  4285 ;; This function uses a non-reentrant model
  4286 ;;
  4287                           
  4288                           
  4289                           ;psect for function ___lwmod
  4290  01C4                     ___lwmod:
  4291  01C4                     i1l1424:	
  4292                           ;incstack = 0
  4293                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  4294                           
  4295  01C4  0878               	movf	___lwmod@divisor,w
  4296  01C5  0479               	iorwf	___lwmod@divisor+1,w
  4297  01C6  1903               	btfsc	3,2
  4298  01C7  29C9               	goto	u53_21
  4299  01C8  29CA               	goto	u53_20
  4300  01C9                     u53_21:
  4301  01C9  29F3               	goto	i1l1442
  4302  01CA                     u53_20:
  4303  01CA                     i1l1426:
  4304  01CA  01FD               	clrf	___lwmod@counter
  4305  01CB  0AFD               	incf	___lwmod@counter,f
  4306  01CC  29D6               	goto	i1l1432
  4307  01CD                     i1l1428:
  4308  01CD  3001               	movlw	1
  4309  01CE                     u54_25:
  4310  01CE  35F8               	lslf	___lwmod@divisor,f
  4311  01CF  0DF9               	rlf	___lwmod@divisor+1,f
  4312  01D0  0B89               	decfsz	9,f
  4313  01D1  29CE               	goto	u54_25
  4314  01D2                     i1l1430:
  4315  01D2  3001               	movlw	1
  4316  01D3  00FC               	movwf	??___lwmod
  4317  01D4  087C               	movf	??___lwmod,w
  4318  01D5  07FD               	addwf	___lwmod@counter,f
  4319  01D6                     i1l1432:
  4320  01D6  1FF9               	btfss	___lwmod@divisor+1,7
  4321  01D7  29D9               	goto	u55_21
  4322  01D8  29DA               	goto	u55_20
  4323  01D9                     u55_21:
  4324  01D9  29CD               	goto	i1l1428
  4325  01DA                     u55_20:
  4326  01DA                     i1l1434:
  4327  01DA  0879               	movf	___lwmod@divisor+1,w
  4328  01DB  027B               	subwf	___lwmod@dividend+1,w
  4329  01DC  1D03               	skipz
  4330  01DD  29E0               	goto	u56_25
  4331  01DE  0878               	movf	___lwmod@divisor,w
  4332  01DF  027A               	subwf	___lwmod@dividend,w
  4333  01E0                     u56_25:
  4334  01E0  1C03               	skipc
  4335  01E1  29E3               	goto	u56_21
  4336  01E2  29E4               	goto	u56_20
  4337  01E3                     u56_21:
  4338  01E3  29E8               	goto	i1l1438
  4339  01E4                     u56_20:
  4340  01E4                     i1l1436:
  4341  01E4  0878               	movf	___lwmod@divisor,w
  4342  01E5  02FA               	subwf	___lwmod@dividend,f
  4343  01E6  0879               	movf	___lwmod@divisor+1,w
  4344  01E7  3BFB               	subwfb	___lwmod@dividend+1,f
  4345  01E8                     i1l1438:
  4346  01E8  3001               	movlw	1
  4347  01E9                     u57_25:
  4348  01E9  36F9               	lsrf	___lwmod@divisor+1,f
  4349  01EA  0CF8               	rrf	___lwmod@divisor,f
  4350  01EB  0B89               	decfsz	9,f
  4351  01EC  29E9               	goto	u57_25
  4352  01ED                     i1l1440:
  4353  01ED  3001               	movlw	1
  4354  01EE  02FD               	subwf	___lwmod@counter,f
  4355  01EF  1D03               	btfss	3,2
  4356  01F0  29F2               	goto	u58_21
  4357  01F1  29F3               	goto	u58_20
  4358  01F2                     u58_21:
  4359  01F2  29DA               	goto	i1l1434
  4360  01F3                     u58_20:
  4361  01F3                     i1l1442:
  4362  01F3  087B               	movf	___lwmod@dividend+1,w
  4363  01F4  00F9               	movwf	?___lwmod+1
  4364  01F5  087A               	movf	___lwmod@dividend,w
  4365  01F6  00F8               	movwf	?___lwmod
  4366  01F7                     i1l758:
  4367  01F7  0008               	return
  4368  01F8                     __end_of___lwmod:
  4369                           
  4370                           	psect	text23
  4371  014E                     __ptext23:	
  4372 ;; *************** function ___lwdiv *****************
  4373 ;; Defined at:
  4374 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  4375 ;; Parameters:    Size  Location     Type
  4376 ;;  divisor         2    0[COMMON] unsigned int 
  4377 ;;  dividend        2    2[COMMON] unsigned int 
  4378 ;; Auto vars:     Size  Location     Type
  4379 ;;  quotient        2    5[COMMON] unsigned int 
  4380 ;;  counter         1    7[COMMON] unsigned char 
  4381 ;; Return value:  Size  Location     Type
  4382 ;;                  2    0[COMMON] unsigned int 
  4383 ;; Registers used:
  4384 ;;		wreg, status,2, status,0
  4385 ;; Tracked objects:
  4386 ;;		On entry : 0/0
  4387 ;;		On exit  : 0/0
  4388 ;;		Unchanged: 0/0
  4389 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4390 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4391 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4392 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4393 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4394 ;;Total ram usage:        8 bytes
  4395 ;; Hardware stack levels used:    1
  4396 ;; This function calls:
  4397 ;;		Nothing
  4398 ;; This function is called by:
  4399 ;;		_printf
  4400 ;; This function uses a non-reentrant model
  4401 ;;
  4402                           
  4403                           
  4404                           ;psect for function ___lwdiv
  4405  014E                     ___lwdiv:
  4406  014E                     i1l1398:	
  4407                           ;incstack = 0
  4408                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4409                           
  4410  014E  01F5               	clrf	___lwdiv@quotient
  4411  014F  01F6               	clrf	___lwdiv@quotient+1
  4412  0150                     i1l1400:
  4413  0150  0870               	movf	___lwdiv@divisor,w
  4414  0151  0471               	iorwf	___lwdiv@divisor+1,w
  4415  0152  1903               	btfsc	3,2
  4416  0153  2955               	goto	u46_21
  4417  0154  2956               	goto	u46_20
  4418  0155                     u46_21:
  4419  0155  2985               	goto	i1l1420
  4420  0156                     u46_20:
  4421  0156                     i1l1402:
  4422  0156  01F7               	clrf	___lwdiv@counter
  4423  0157  0AF7               	incf	___lwdiv@counter,f
  4424  0158  2962               	goto	i1l1408
  4425  0159                     i1l1404:
  4426  0159  3001               	movlw	1
  4427  015A                     u47_25:
  4428  015A  35F0               	lslf	___lwdiv@divisor,f
  4429  015B  0DF1               	rlf	___lwdiv@divisor+1,f
  4430  015C  0B89               	decfsz	9,f
  4431  015D  295A               	goto	u47_25
  4432  015E                     i1l1406:
  4433  015E  3001               	movlw	1
  4434  015F  00F4               	movwf	??___lwdiv
  4435  0160  0874               	movf	??___lwdiv,w
  4436  0161  07F7               	addwf	___lwdiv@counter,f
  4437  0162                     i1l1408:
  4438  0162  1FF1               	btfss	___lwdiv@divisor+1,7
  4439  0163  2965               	goto	u48_21
  4440  0164  2966               	goto	u48_20
  4441  0165                     u48_21:
  4442  0165  2959               	goto	i1l1404
  4443  0166                     u48_20:
  4444  0166                     i1l1410:
  4445  0166  3001               	movlw	1
  4446  0167                     u49_25:
  4447  0167  35F5               	lslf	___lwdiv@quotient,f
  4448  0168  0DF6               	rlf	___lwdiv@quotient+1,f
  4449  0169  0B89               	decfsz	9,f
  4450  016A  2967               	goto	u49_25
  4451  016B  0871               	movf	___lwdiv@divisor+1,w
  4452  016C  0273               	subwf	___lwdiv@dividend+1,w
  4453  016D  1D03               	skipz
  4454  016E  2971               	goto	u50_25
  4455  016F  0870               	movf	___lwdiv@divisor,w
  4456  0170  0272               	subwf	___lwdiv@dividend,w
  4457  0171                     u50_25:
  4458  0171  1C03               	skipc
  4459  0172  2974               	goto	u50_21
  4460  0173  2975               	goto	u50_20
  4461  0174                     u50_21:
  4462  0174  297A               	goto	i1l1416
  4463  0175                     u50_20:
  4464  0175                     i1l1412:
  4465  0175  0870               	movf	___lwdiv@divisor,w
  4466  0176  02F2               	subwf	___lwdiv@dividend,f
  4467  0177  0871               	movf	___lwdiv@divisor+1,w
  4468  0178  3BF3               	subwfb	___lwdiv@dividend+1,f
  4469  0179                     i1l1414:
  4470  0179  1475               	bsf	___lwdiv@quotient,0
  4471  017A                     i1l1416:
  4472  017A  3001               	movlw	1
  4473  017B                     u51_25:
  4474  017B  36F1               	lsrf	___lwdiv@divisor+1,f
  4475  017C  0CF0               	rrf	___lwdiv@divisor,f
  4476  017D  0B89               	decfsz	9,f
  4477  017E  297B               	goto	u51_25
  4478  017F                     i1l1418:
  4479  017F  3001               	movlw	1
  4480  0180  02F7               	subwf	___lwdiv@counter,f
  4481  0181  1D03               	btfss	3,2
  4482  0182  2984               	goto	u52_21
  4483  0183  2985               	goto	u52_20
  4484  0184                     u52_21:
  4485  0184  2966               	goto	i1l1410
  4486  0185                     u52_20:
  4487  0185                     i1l1420:
  4488  0185  0876               	movf	___lwdiv@quotient+1,w
  4489  0186  00F1               	movwf	?___lwdiv+1
  4490  0187  0875               	movf	___lwdiv@quotient,w
  4491  0188  00F0               	movwf	?___lwdiv
  4492  0189                     i1l748:
  4493  0189  0008               	return
  4494  018A                     __end_of___lwdiv:
  4495                           
  4496                           	psect	text24
  4497  0249                     __ptext24:	
  4498 ;; *************** function _EUSART_Transmit_ISR *****************
  4499 ;; Defined at:
  4500 ;;		line 206 in file "mcc_generated_files/eusart.c"
  4501 ;; Parameters:    Size  Location     Type
  4502 ;;		None
  4503 ;; Auto vars:     Size  Location     Type
  4504 ;;		None
  4505 ;; Return value:  Size  Location     Type
  4506 ;;                  1    wreg      void 
  4507 ;; Registers used:
  4508 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4509 ;; Tracked objects:
  4510 ;;		On entry : 0/0
  4511 ;;		On exit  : 0/0
  4512 ;;		Unchanged: 0/0
  4513 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4514 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4515 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4516 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4517 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4518 ;;Total ram usage:        1 bytes
  4519 ;; Hardware stack levels used:    1
  4520 ;; This function calls:
  4521 ;;		Nothing
  4522 ;; This function is called by:
  4523 ;;		_EUSART_Initialize
  4524 ;;		_INTERRUPT_InterruptManager
  4525 ;; This function uses a non-reentrant model
  4526 ;;
  4527                           
  4528                           
  4529                           ;psect for function _EUSART_Transmit_ISR
  4530  0249                     _EUSART_Transmit_ISR:
  4531  0249                     i1l1662:	
  4532                           ;incstack = 0
  4533                           ; Regs used in _EUSART_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
  4534                           
  4535                           
  4536                           ;eusart.c: 210: if(sizeof(eusartTxBuffer) > eusartTxBufferRemaining)
  4537  0249  3008               	movlw	8
  4538  024A  0020               	movlb	0	; select bank0
  4539  024B  0261               	subwf	_eusartTxBufferRemaining,w	;volatile
  4540  024C  1803               	skipnc
  4541  024D  2A4F               	goto	u71_21
  4542  024E  2A50               	goto	u71_20
  4543  024F                     u71_21:
  4544  024F  2A68               	goto	i1l299
  4545  0250                     u71_20:
  4546  0250                     i1l1664:
  4547                           
  4548                           ;eusart.c: 211: {;eusart.c: 212: TX1REG = eusartTxBuffer[eusartTxTail++];
  4549  0250  0842               	movf	_eusartTxTail,w
  4550  0251  3E30               	addlw	(low (_eusartTxBuffer| 0))& (0+255)
  4551  0252  0086               	movwf	6
  4552  0253  0187               	clrf	7
  4553  0254  0801               	movf	1,w
  4554  0255  0023               	movlb	3	; select bank3
  4555  0256  009A               	movwf	26	;volatile
  4556  0257                     i1l1666:
  4557  0257  3001               	movlw	1
  4558  0258  00F0               	movwf	??_EUSART_Transmit_ISR
  4559  0259  0870               	movf	??_EUSART_Transmit_ISR,w
  4560  025A  0020               	movlb	0	; select bank0
  4561  025B  07C2               	addwf	_eusartTxTail,f	;volatile
  4562  025C                     i1l1668:
  4563                           
  4564                           ;eusart.c: 213: if(sizeof(eusartTxBuffer) <= eusartTxTail)
  4565  025C  3008               	movlw	8
  4566  025D  0242               	subwf	_eusartTxTail,w	;volatile
  4567  025E  1C03               	skipc
  4568  025F  2A61               	goto	u72_21
  4569  0260  2A62               	goto	u72_20
  4570  0261                     u72_21:
  4571  0261  2A63               	goto	i1l1672
  4572  0262                     u72_20:
  4573  0262                     i1l1670:
  4574                           
  4575                           ;eusart.c: 214: {;eusart.c: 215: eusartTxTail = 0;
  4576  0262  01C2               	clrf	_eusartTxTail	;volatile
  4577  0263                     i1l1672:
  4578                           
  4579                           ;eusart.c: 216: };eusart.c: 217: eusartTxBufferRemaining++;
  4580  0263  3001               	movlw	1
  4581  0264  00F0               	movwf	??_EUSART_Transmit_ISR
  4582  0265  0870               	movf	??_EUSART_Transmit_ISR,w
  4583  0266  07E1               	addwf	_eusartTxBufferRemaining,f	;volatile
  4584                           
  4585                           ;eusart.c: 218: }
  4586  0267  2A6A               	goto	i1l302
  4587  0268                     i1l299:
  4588                           
  4589                           ;eusart.c: 219: else;eusart.c: 220: {;eusart.c: 221: PIE1bits.TXIE = 0;
  4590  0268  0021               	movlb	1	; select bank1
  4591  0269  1211               	bcf	17,4	;volatile
  4592  026A                     i1l302:
  4593  026A  0008               	return
  4594  026B                     __end_of_EUSART_Transmit_ISR:
  4595                           
  4596                           	psect	text25
  4597  018A                     __ptext25:	
  4598 ;; *************** function _EUSART_Receive_ISR *****************
  4599 ;; Defined at:
  4600 ;;		line 225 in file "mcc_generated_files/eusart.c"
  4601 ;; Parameters:    Size  Location     Type
  4602 ;;		None
  4603 ;; Auto vars:     Size  Location     Type
  4604 ;;		None
  4605 ;; Return value:  Size  Location     Type
  4606 ;;                  1    wreg      void 
  4607 ;; Registers used:
  4608 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4609 ;; Tracked objects:
  4610 ;;		On entry : 0/0
  4611 ;;		On exit  : 0/0
  4612 ;;		Unchanged: 0/0
  4613 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4614 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4615 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4616 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4617 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4618 ;;Total ram usage:        0 bytes
  4619 ;; Hardware stack levels used:    1
  4620 ;; Hardware stack levels required when called:    2
  4621 ;; This function calls:
  4622 ;;		Absolute function
  4623 ;;		_EUSART_DefaultErrorHandler
  4624 ;;		_EUSART_DefaultFramingErrorHandler
  4625 ;;		_EUSART_DefaultOverrunErrorHandler
  4626 ;;		_EUSART_RxDataHandler
  4627 ;; This function is called by:
  4628 ;;		_EUSART_Initialize
  4629 ;;		_INTERRUPT_InterruptManager
  4630 ;; This function uses a non-reentrant model
  4631 ;;
  4632                           
  4633                           
  4634                           ;psect for function _EUSART_Receive_ISR
  4635  018A                     _EUSART_Receive_ISR:
  4636  018A                     i1l1674:	
  4637                           ;incstack = 0
  4638                           ; Regs used in _EUSART_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4639                           
  4640                           
  4641                           ;eusart.c: 228: eusartRxStatusBuffer[eusartRxHead].status = 0;
  4642  018A  0020               	movlb	0	; select bank0
  4643  018B  0841               	movf	_eusartRxHead,w	;volatile
  4644  018C  3E20               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  4645  018D  0086               	movwf	6
  4646  018E  0187               	clrf	7
  4647  018F  0181               	clrf	1
  4648  0190                     i1l1676:
  4649                           
  4650                           ;eusart.c: 230: if(RC1STAbits.FERR){
  4651  0190  0023               	movlb	3	; select bank3
  4652  0191  1D1D               	btfss	29,2	;volatile
  4653  0192  2994               	goto	u73_21
  4654  0193  2995               	goto	u73_20
  4655  0194                     u73_21:
  4656  0194  29A0               	goto	i1l1682
  4657  0195                     u73_20:
  4658  0195                     i1l1678:
  4659                           
  4660                           ;eusart.c: 231: eusartRxStatusBuffer[eusartRxHead].ferr = 1;
  4661  0195  0020               	movlb	0	; select bank0
  4662  0196  0841               	movf	_eusartRxHead,w	;volatile
  4663  0197  3E20               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  4664  0198  0086               	movwf	6
  4665  0199  0187               	clrf	7
  4666  019A  1481               	bsf	1,1
  4667  019B                     i1l1680:
  4668                           
  4669                           ;eusart.c: 232: EUSART_FramingErrorHandler();
  4670  019B  085A               	movf	_EUSART_FramingErrorHandler+1,w
  4671  019C  008A               	movwf	10
  4672  019D  0859               	movf	_EUSART_FramingErrorHandler,w
  4673  019E  000A               	callw
  4674  019F  3181               	pagesel	$
  4675  01A0                     i1l1682:
  4676                           
  4677                           ;eusart.c: 233: };eusart.c: 235: if(RC1STAbits.OERR){
  4678  01A0  0023               	movlb	3	; select bank3
  4679  01A1  1C9D               	btfss	29,1	;volatile
  4680  01A2  29A4               	goto	u74_21
  4681  01A3  29A5               	goto	u74_20
  4682  01A4                     u74_21:
  4683  01A4  29B0               	goto	i1l1688
  4684  01A5                     u74_20:
  4685  01A5                     i1l1684:
  4686                           
  4687                           ;eusart.c: 236: eusartRxStatusBuffer[eusartRxHead].oerr = 1;
  4688  01A5  0020               	movlb	0	; select bank0
  4689  01A6  0841               	movf	_eusartRxHead,w	;volatile
  4690  01A7  3E20               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  4691  01A8  0086               	movwf	6
  4692  01A9  0187               	clrf	7
  4693  01AA  1501               	bsf	1,2
  4694  01AB                     i1l1686:
  4695                           
  4696                           ;eusart.c: 237: EUSART_OverrunErrorHandler();
  4697  01AB  0858               	movf	_EUSART_OverrunErrorHandler+1,w
  4698  01AC  008A               	movwf	10
  4699  01AD  0857               	movf	_EUSART_OverrunErrorHandler,w
  4700  01AE  000A               	callw
  4701  01AF  3181               	pagesel	$
  4702  01B0                     i1l1688:
  4703                           
  4704                           ;eusart.c: 238: };eusart.c: 240: if(eusartRxStatusBuffer[eusartRxHead].status){
  4705  01B0  0020               	movlb	0	; select bank0
  4706  01B1  0841               	movf	_eusartRxHead,w	;volatile
  4707  01B2  3E20               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  4708  01B3  0086               	movwf	6
  4709  01B4  0187               	clrf	7
  4710  01B5  0801               	movf	1,w
  4711  01B6  1903               	btfsc	3,2
  4712  01B7  29B9               	goto	u75_21
  4713  01B8  29BA               	goto	u75_20
  4714  01B9                     u75_21:
  4715  01B9  29C0               	goto	i1l1692
  4716  01BA                     u75_20:
  4717  01BA                     i1l1690:
  4718                           
  4719                           ;eusart.c: 241: EUSART_ErrorHandler();
  4720  01BA  0856               	movf	_EUSART_ErrorHandler+1,w
  4721  01BB  008A               	movwf	10
  4722  01BC  0855               	movf	_EUSART_ErrorHandler,w
  4723  01BD  000A               	callw
  4724  01BE  3181               	pagesel	$
  4725                           
  4726                           ;eusart.c: 242: } else {
  4727  01BF  29C3               	goto	i1l309
  4728  01C0                     i1l1692:
  4729                           
  4730                           ;eusart.c: 243: EUSART_RxDataHandler();
  4731  01C0  3182  228C  3181   	fcall	_EUSART_RxDataHandler
  4732  01C3                     i1l309:
  4733  01C3  0008               	return
  4734  01C4                     __end_of_EUSART_Receive_ISR:
  4735                           
  4736                           	psect	text26
  4737  034A                     __ptext26:	
  4738 ;; *************** function _EUSART_DefaultOverrunErrorHandler *****************
  4739 ;; Defined at:
  4740 ;;		line 261 in file "mcc_generated_files/eusart.c"
  4741 ;; Parameters:    Size  Location     Type
  4742 ;;		None
  4743 ;; Auto vars:     Size  Location     Type
  4744 ;;		None
  4745 ;; Return value:  Size  Location     Type
  4746 ;;                  1    wreg      void 
  4747 ;; Registers used:
  4748 ;;		None
  4749 ;; Tracked objects:
  4750 ;;		On entry : 0/0
  4751 ;;		On exit  : 0/0
  4752 ;;		Unchanged: 0/0
  4753 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4754 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4755 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4756 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4757 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4758 ;;Total ram usage:        0 bytes
  4759 ;; Hardware stack levels used:    1
  4760 ;; This function calls:
  4761 ;;		Nothing
  4762 ;; This function is called by:
  4763 ;;		_EUSART_Initialize
  4764 ;;		_EUSART_Receive_ISR
  4765 ;; This function uses a non-reentrant model
  4766 ;;
  4767                           
  4768                           
  4769                           ;psect for function _EUSART_DefaultOverrunErrorHandler
  4770  034A                     _EUSART_DefaultOverrunErrorHandler:
  4771  034A                     i1l1630:	
  4772                           ;incstack = 0
  4773                           ; Regs used in _EUSART_DefaultOverrunErrorHandler: []
  4774                           
  4775                           
  4776                           ;eusart.c: 264: RC1STAbits.CREN = 0;
  4777  034A  0023               	movlb	3	; select bank3
  4778  034B  121D               	bcf	29,4	;volatile
  4779                           
  4780                           ;eusart.c: 265: RC1STAbits.CREN = 1;
  4781  034C  161D               	bsf	29,4	;volatile
  4782  034D                     i1l319:
  4783  034D  0008               	return
  4784  034E                     __end_of_EUSART_DefaultOverrunErrorHandler:
  4785                           
  4786                           	psect	text27
  4787  0352                     __ptext27:	
  4788 ;; *************** function _EUSART_DefaultFramingErrorHandler *****************
  4789 ;; Defined at:
  4790 ;;		line 259 in file "mcc_generated_files/eusart.c"
  4791 ;; Parameters:    Size  Location     Type
  4792 ;;		None
  4793 ;; Auto vars:     Size  Location     Type
  4794 ;;		None
  4795 ;; Return value:  Size  Location     Type
  4796 ;;                  1    wreg      void 
  4797 ;; Registers used:
  4798 ;;		None
  4799 ;; Tracked objects:
  4800 ;;		On entry : 0/0
  4801 ;;		On exit  : 0/0
  4802 ;;		Unchanged: 0/0
  4803 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4804 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4805 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4806 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4807 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4808 ;;Total ram usage:        0 bytes
  4809 ;; Hardware stack levels used:    1
  4810 ;; This function calls:
  4811 ;;		Nothing
  4812 ;; This function is called by:
  4813 ;;		_EUSART_Initialize
  4814 ;;		_EUSART_Receive_ISR
  4815 ;; This function uses a non-reentrant model
  4816 ;;
  4817                           
  4818                           
  4819                           ;psect for function _EUSART_DefaultFramingErrorHandler
  4820  0352                     _EUSART_DefaultFramingErrorHandler:
  4821  0352                     i1l316:	
  4822                           ;incstack = 0
  4823                           ; Regs used in _EUSART_DefaultFramingErrorHandler: []
  4824                           
  4825  0352  0008               	return
  4826  0353                     __end_of_EUSART_DefaultFramingErrorHandler:
  4827                           
  4828                           	psect	text28
  4829  034E                     __ptext28:	
  4830 ;; *************** function _EUSART_DefaultErrorHandler *****************
  4831 ;; Defined at:
  4832 ;;		line 269 in file "mcc_generated_files/eusart.c"
  4833 ;; Parameters:    Size  Location     Type
  4834 ;;		None
  4835 ;; Auto vars:     Size  Location     Type
  4836 ;;		None
  4837 ;; Return value:  Size  Location     Type
  4838 ;;                  1    wreg      void 
  4839 ;; Registers used:
  4840 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4841 ;; Tracked objects:
  4842 ;;		On entry : 0/0
  4843 ;;		On exit  : 0/0
  4844 ;;		Unchanged: 0/0
  4845 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4846 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4847 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4848 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4849 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4850 ;;Total ram usage:        0 bytes
  4851 ;; Hardware stack levels used:    1
  4852 ;; Hardware stack levels required when called:    1
  4853 ;; This function calls:
  4854 ;;		_EUSART_RxDataHandler
  4855 ;; This function is called by:
  4856 ;;		_EUSART_Initialize
  4857 ;;		_EUSART_Receive_ISR
  4858 ;; This function uses a non-reentrant model
  4859 ;;
  4860                           
  4861                           
  4862                           ;psect for function _EUSART_DefaultErrorHandler
  4863  034E                     _EUSART_DefaultErrorHandler:
  4864  034E                     i1l1632:	
  4865                           ;incstack = 0
  4866                           ; Regs used in _EUSART_DefaultErrorHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
  4867                           
  4868                           
  4869                           ;eusart.c: 270: EUSART_RxDataHandler();
  4870  034E  3182  228C  3183   	fcall	_EUSART_RxDataHandler
  4871  0351                     i1l322:
  4872  0351  0008               	return
  4873  0352                     __end_of_EUSART_DefaultErrorHandler:
  4874                           
  4875                           	psect	text29
  4876  028C                     __ptext29:	
  4877 ;; *************** function _EUSART_RxDataHandler *****************
  4878 ;; Defined at:
  4879 ;;		line 249 in file "mcc_generated_files/eusart.c"
  4880 ;; Parameters:    Size  Location     Type
  4881 ;;		None
  4882 ;; Auto vars:     Size  Location     Type
  4883 ;;		None
  4884 ;; Return value:  Size  Location     Type
  4885 ;;                  1    wreg      void 
  4886 ;; Registers used:
  4887 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4888 ;; Tracked objects:
  4889 ;;		On entry : 0/0
  4890 ;;		On exit  : 0/0
  4891 ;;		Unchanged: 0/0
  4892 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4893 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4894 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4895 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4896 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4897 ;;Total ram usage:        1 bytes
  4898 ;; Hardware stack levels used:    1
  4899 ;; This function calls:
  4900 ;;		Nothing
  4901 ;; This function is called by:
  4902 ;;		_EUSART_Receive_ISR
  4903 ;;		_EUSART_DefaultErrorHandler
  4904 ;; This function uses a non-reentrant model
  4905 ;;
  4906                           
  4907                           
  4908                           ;psect for function _EUSART_RxDataHandler
  4909  028C                     _EUSART_RxDataHandler:
  4910  028C                     i1l1514:	
  4911                           ;incstack = 0
  4912                           ; Regs used in _EUSART_RxDataHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
  4913                           
  4914                           
  4915                           ;eusart.c: 251: eusartRxBuffer[eusartRxHead++] = RC1REG;
  4916  028C  0023               	movlb	3	; select bank3
  4917  028D  0819               	movf	25,w	;volatile
  4918  028E  00F0               	movwf	??_EUSART_RxDataHandler
  4919  028F  0020               	movlb	0	; select bank0
  4920  0290  0841               	movf	_eusartRxHead,w
  4921  0291  3E28               	addlw	(low (_eusartRxBuffer| 0))& (0+255)
  4922  0292  0086               	movwf	6
  4923  0293  0187               	clrf	7
  4924  0294  0870               	movf	??_EUSART_RxDataHandler,w
  4925  0295  0081               	movwf	1
  4926  0296                     i1l1516:
  4927  0296  3001               	movlw	1
  4928  0297  00F0               	movwf	??_EUSART_RxDataHandler
  4929  0298  0870               	movf	??_EUSART_RxDataHandler,w
  4930  0299  07C1               	addwf	_eusartRxHead,f	;volatile
  4931  029A                     i1l1518:
  4932                           
  4933                           ;eusart.c: 252: if(sizeof(eusartRxBuffer) <= eusartRxHead)
  4934  029A  3008               	movlw	8
  4935  029B  0241               	subwf	_eusartRxHead,w	;volatile
  4936  029C  1C03               	skipc
  4937  029D  2A9F               	goto	u67_21
  4938  029E  2AA0               	goto	u67_20
  4939  029F                     u67_21:
  4940  029F  2AA1               	goto	i1l1522
  4941  02A0                     u67_20:
  4942  02A0                     i1l1520:
  4943                           
  4944                           ;eusart.c: 253: {;eusart.c: 254: eusartRxHead = 0;
  4945  02A0  01C1               	clrf	_eusartRxHead	;volatile
  4946  02A1                     i1l1522:
  4947                           
  4948                           ;eusart.c: 255: };eusart.c: 256: eusartRxCount++;
  4949  02A1  3001               	movlw	1
  4950  02A2  00F0               	movwf	??_EUSART_RxDataHandler
  4951  02A3  0870               	movf	??_EUSART_RxDataHandler,w
  4952  02A4  07BF               	addwf	_eusartRxCount,f	;volatile
  4953  02A5                     i1l313:
  4954  02A5  0008               	return
  4955  02A6                     __end_of_EUSART_RxDataHandler:
  4956  007E                     btemp	set	126	;btemp
  4957  007E                     int$flags	set	126
  4958  007E                     wtemp0	set	126
  4959                           
  4960                           	psect	config
  4961                           
  4962                           ;Config register CONFIG1 @ 0x8007
  4963                           ;	Oscillator Selection Bits
  4964                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  4965                           ;	Watchdog Timer Enable
  4966                           ;	WDTE = OFF, WDT disabled
  4967                           ;	Power-up Timer Enable
  4968                           ;	PWRTE = OFF, PWRT disabled
  4969                           ;	MCLR Pin Function Select
  4970                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  4971                           ;	Flash Program Memory Code Protection
  4972                           ;	CP = OFF, Program memory code protection is disabled
  4973                           ;	Brown-out Reset Enable
  4974                           ;	BOREN = OFF, Brown-out Reset disabled
  4975                           ;	Clock Out Enable
  4976                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  4977                           ;	Internal/External Switchover Mode
  4978                           ;	IESO = ON, Internal/External Switchover Mode is enabled
  4979                           ;	Fail-Safe Clock Monitor Enable
  4980                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  4981  8007                     	org	32775
  4982  8007  39E4               	dw	14820
  4983                           
  4984                           ;Config register CONFIG2 @ 0x8008
  4985                           ;	Flash Memory Self-Write Protection
  4986                           ;	WRT = OFF, Write protection off
  4987                           ;	Peripheral Pin Select one-way control
  4988                           ;	PPS1WAY = ON, The PPSLOCK bit cannot be cleared once it is set by software
  4989                           ;	Zero-cross detect disable
  4990                           ;	ZCDDIS = ON, Zero-cross detect circuit is disabled at POR
  4991                           ;	Phase Lock Loop enable
  4992                           ;	PLLEN = OFF, 4x PLL is enabled when software sets the SPLLEN bit
  4993                           ;	Stack Overflow/Underflow Reset Enable
  4994                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  4995                           ;	Brown-out Reset Voltage Selection
  4996                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  4997                           ;	Low-Power Brown Out Reset
  4998                           ;	LPBOR = OFF, Low-Power BOR is disabled
  4999                           ;	Low-Voltage Programming Enable
  5000                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  5001  8008                     	org	32776
  5002  8008  1EFF               	dw	7935

Data Sizes:
    Strings     5
    Constant    10
    Data        0
    BSS         36
    Persistent  45
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     17      66
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    printf@f	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_1(CODE[5]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    EUSART_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Receive_ISR(), 

    EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Receive_ISR(), Absolute function(), 

    EUSART_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Transmit_ISR(), 

    EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Transmit_ISR(), Absolute function(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), Absolute function(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), Absolute function(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), Absolute function(), 

    TMR2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR2_DefaultInterruptHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR2_DefaultInterruptHandler(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _printf->___lwmod
    _putch->_EUSART_Write
    ___lwmod->___lwdiv
    _EUSART_Receive_ISR->_EUSART_RxDataHandler
    _EUSART_DefaultErrorHandler->_EUSART_RxDataHandler

Critical Paths under _main in BANK0

    _SYSTEM_Initialize->_EUSART_Initialize
    _TMR2_Initialize->_TMR2_SetInterruptHandler
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler
    _EUSART_Initialize->_EUSART_SetRxInterruptHandler
    _EUSART_Initialize->_EUSART_SetTxInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _TMR2_DefaultInterruptHandler->_printf

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     588
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     588
                     _ADC_Initialize
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _PWM1_Initialize
                    _TMR2_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0      98
           _TMR2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR2_SetInterruptHandler                             2     0      2      98
                                             14 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PWM1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    1     1      0     490
                                             16 BANK0      1     1      0
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetTxInterruptHandler                         2     0      2      98
                                             14 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetRxInterruptHandler                         2     0      2      98
                                             14 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2      98
                                             14 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2      98
                                             14 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2      98
                                             14 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           0     0      0    1153
                   Absolute function *
                 _EUSART_Receive_ISR *
                _EUSART_Transmit_ISR *
                           _TMR2_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR2_ISR                                             0     0      0    1153
                      _TMR2_CallBack
 ---------------------------------------------------------------------------------
 (6) _TMR2_CallBack                                        0     0      0    1153
                   Absolute function *
       _TMR2_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (7) _TMR2_DefaultInterruptHandler                         0     0      0    1153
                             _printf
 ---------------------------------------------------------------------------------
 (8) _printf                                              22    18      4    1153
                                              0 BANK0     14    10      4
                            ___lwdiv
                            ___lwmod
                              _putch
 ---------------------------------------------------------------------------------
 (9) _putch                                                1     1      0      66
                                              2 COMMON     1     1      0
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (10) _EUSART_Write                                        2     2      0      44
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (9) ___lwmod                                              6     2      4     311
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (9) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (5) _EUSART_Transmit_ISR                                  1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _EUSART_Receive_ISR                                   0     0      0       0
                   Absolute function *
         _EUSART_DefaultErrorHandler *
  _EUSART_DefaultFramingErrorHandler *
  _EUSART_DefaultOverrunErrorHandler *
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (6) _EUSART_DefaultOverrunErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _EUSART_DefaultFramingErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _EUSART_DefaultErrorHandler                           0     0      0       0
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (6) _EUSART_RxDataHandler                                 1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADC_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PWM1_Initialize
     _TMR2_Initialize
       _TMR2_SetInterruptHandler
     _WDT_Initialize

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _EUSART_Receive_ISR *
     Absolute function(Fake) *
     _EUSART_DefaultErrorHandler *
       _EUSART_RxDataHandler
     _EUSART_DefaultFramingErrorHandler *
     _EUSART_DefaultOverrunErrorHandler *
     _EUSART_RxDataHandler *
   _EUSART_Transmit_ISR *
   _TMR2_ISR *
     _TMR2_CallBack
       Absolute function(Fake) *
       _TMR2_DefaultInterruptHandler *
         _printf
           ___lwdiv
           ___lwmod
             ___lwdiv (ARG)
           _putch
             _EUSART_Write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     11      42       5       82.5%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      50      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      50      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Fri Feb 05 16:18:56 2021

                ?_EUSART_SetRxInterruptHandler 0052               __end_of_TMR2_SetInterruptHandler 0317  
                                           l53 02F9                                             l39 0248  
                                           l81 02CE                                            l106 0316  
                                          l141 02BB                                            l144 030A  
                                          l331 0334                                            l147 0349  
                                          l325 032E                                            l166 0302  
                                          l334 031C                                            l262 014D  
                                          l328 0328                                            l337 0322  
                                          l375 02E4                                            l376 02E4  
                                          _PR2 001B                         ??_EUSART_RxDataHandler 0070  
                                          _cnt 003C                                            _sec 003A  
               ?_EUSART_SetFramingErrorHandler 0052                                _TMR2_Initialize 02BC  
                                          wreg 0009                                           l1510 0323  
                                         l1512 032F                                           l1504 031D  
                                         l1600 010C                                           l1506 0317  
                                         l1610 0125                                           l1602 0114  
                                         l1530 022C                                           l1508 0329  
                                         l1620 0144                                           l1612 0127  
                                         l1604 011E                                           l1540 0235  
                                         l1532 022E                                           l1524 0222  
                                         l1622 0148                                           l1614 0128  
                                         l1606 0121                                           l1550 0240  
                                         l1542 0236                                           l1534 0230  
                                         l1526 0225                                           l1624 0149  
                                         l1616 0130                                           l1608 0123  
                                         l1552 0243                                           l1544 0239  
                                         l1536 0231                                           l1528 0228  
                                         l1560 02F7                                           l1720 02E3  
                                         l1626 014A                                           l1618 0138  
                                         l1554 0246                                           l1546 023B  
                                         l1538 0233                                           l1570 02C3  
                                         l1562 02BC                                           l1714 02DC  
                                         l1628 014B                                           l1580 0306  
                                         l1548 023E                                           l1556 02F1  
                                         l1572 02CB                                           l1564 02BF  
                                         l1716 02DF                                           l1590 02FD  
                                         l1582 0307                                           l1558 02F6  
                                         l1494 0311                                           l1566 02C0  
                                         l1638 02A6                                           l1718 02E2  
                                         l1592 02FE                                           l1584 0308  
                                         l1568 02C1                                           l1594 02FF  
                                         l1578 0303                                           l1586 0346  
                                         l1596 0300                                           l1588 02FA  
                                         l1598 010A                                           STR_1 0341  
                      __end_of_PWM1_Initialize 02FA                                           _LATA 010C  
                                         _LATC 010E                                           i1l99 033A  
                                         _TMR2 001A                                           _WPUA 020C  
                                         _WPUC 020E                                           _main 02DC  
                                         fsr0h 0005                                           fsr1h 0007  
                                         indf0 0000                                           fsr0l 0004  
                                         indf1 0001                                           fsr1l 0006  
                                         btemp 007E                                           start 003A  
                                ?_EUSART_Write 0070                 __size_of_OSCILLATOR_Initialize 0008  
                __end_of_OSCILLATOR_Initialize 030B                                          ?_main 0070  
                                        _T2CON 001C                                __end_of___lwdiv 018A  
                                        i1l103 02DB                                          i1l114 028B  
                                        i1l302 026A                                          i1l313 02A5  
                                        i1l322 0351                                          i1l316 0352  
                                        i1l309 01C3                                          i1l319 034D  
                              __end_of___lwmod 01F8                                          i1l290 0221  
                                        i1l362 0038                                          i1l355 001A  
                                        i1l356 0038                                          i1l357 002A  
                                        i1l286 01FF                                          i1l287 0208  
                                        i1l296 0340                                          i1l472 0109  
                                        i1l299 0268                                          i1l748 0189  
                                        i1l758 01F7                                          u50_20 0175  
                                        u50_21 0174                                          u50_25 0171  
                                        u43_20 01FF                                          u43_21 01FE  
                                        u51_25 017B                                          u52_20 0185  
                                        u44_20 0204                                          u60_20 0080  
                                        u52_21 0184                                          u44_21 0203  
                                        u60_21 007F                                          u53_20 01CA  
                                        u45_20 021C                                          u61_20 00A4  
                                        u53_21 01C9                                          u45_21 021B  
                                        u61_21 00A3                                          u61_25 00A0  
                                        u46_20 0156                                          u62_20 00AF  
                                        u46_21 0155                                          u62_21 00AE  
                                        u54_25 01CE                                          u71_20 0250  
                                        u55_20 01DA                                          u63_20 00B5  
                                        u71_21 024F                                          u55_21 01D9  
                                        u63_21 00B4                                          u47_25 015A  
                                        u72_20 0262                                          u48_20 0166  
                                        u56_20 01E4                                          u64_20 00F4  
                                        u80_20 0024                                          u72_21 0261  
                                        u48_21 0165                                          u56_21 01E3  
                                        u64_21 00F3                                          u80_21 0023  
                                        u56_25 01E0                                          u73_20 0195  
                                        u65_20 0109                                          u81_20 002F  
                                        u73_21 0194                                          u65_21 0108  
                                        u81_21 002E                                          _TRISA 008C  
                                        u49_25 0167                                          u57_25 01E9  
                                        _TRISC 008E                                          u74_20 01A5  
                                        u58_20 01F3                                          u66_20 0279  
                                        u82_20 0034                                          u74_21 01A4  
                                        u58_21 01F2                                          u66_21 0278  
                                        u82_21 0033                                          u67_20 02A0  
                                        u75_20 01BA                                          u59_20 0054  
                                        u67_21 029F                                          u75_21 01B9  
                                        u59_21 0053                                          u68_20 02D6  
                                        u76_20 000A                                          u68_21 02D5  
                                        u76_21 0009                                          u77_20 000F  
                                        u77_21 000E                                          u78_20 0014  
                                        u78_21 0013                                          u79_20 001F  
                                        u79_21 001E                                          _RXPPS 0E24  
                             __end_of_TMR2_ISR 033B                                __end_of_dpowers 02F1  
                               _WDT_Initialize 0346                                          _putch 033B  
                                        pclath 000A                                          status 0003  
                                        wtemp0 007E                                __initialization 003C  
                                 __end_of_main 02E7                                 ??_EUSART_Write 0070  
                      __end_of_TMR2_Initialize 02CF                    ?_INTERRUPT_InterruptManager 0070  
               ??_EUSART_SetRxInterruptHandler 0054                       _TMR2_SetInterruptHandler 0311  
                                       ??_main 0055                         __end_of_WDT_Initialize 034A  
    __end_of_EUSART_DefaultFramingErrorHandler 0353     __size_of_EUSART_DefaultFramingErrorHandler 0001  
          ??_EUSART_DefaultFramingErrorHandler 0070             ?_EUSART_DefaultFramingErrorHandler 0070  
            _EUSART_DefaultFramingErrorHandler 0352                                         _ADCON0 009D  
                                       _ADCON1 009E                                         _ADCON2 009F  
                   _EUSART_OverrunErrorHandler 0057                                         _ADRESH 009C  
                                       _ADRESL 009B                                         _CCPR1H 0292  
                                       _CCPR1L 0291                                         _ANSELA 018C  
                                       ?_putch 0070                                         _ANSELC 018E  
                                       _BORCON 0116                                         _RC1REG 0199  
                                       _RC1PPS 0EA1                                         _RC1STA 019D  
                                       _RC4PPS 0EA4                               ?_PWM1_Initialize 0070  
                                       i1l1400 0150                                         i1l1410 0166  
                                       i1l1402 0156                                         i1l1412 0175  
                                       i1l1404 0159                                         i1l1420 0185  
                                       i1l1500 0284                                         i1l1414 0179  
                                       i1l1406 015E                                         i1l1430 01D2  
                                       i1l1502 0289                                         i1l1520 02A0  
                                       i1l1416 017A                                         i1l1408 0162  
                                       i1l1440 01ED                                         i1l1432 01D6  
                                       i1l1424 01C4                                         _ODCONA 028C  
                                       i1l1522 02A1                                         i1l1514 028C  
                                       i1l1418 017F                                         i1l1434 01DA  
                                       i1l1426 01CA                                         i1l1442 01F3  
                                       i1l1450 0054                                         _ODCONC 028E  
                                       i1l1516 0296                                         i1l1436 01E4  
                                       i1l1428 01CD                                         i1l1380 01F9  
                                       i1l1460 0078                                         i1l1452 0059  
                                       i1l1700 000A                                         i1l1518 029A  
                                       i1l1630 034A                                         i1l1438 01E8  
                                       i1l1390 021C                                         i1l1382 0204  
                                       i1l1462 007C                                         i1l1446 0048  
                                       i1l1710 002F                                         i1l1702 000F  
                                       i1l1632 034E                                         i1l1392 021D  
                                       i1l1384 0209                                         i1l1480 00AF  
                                       i1l1464 0080                                         i1l1456 005A  
                                       i1l1448 004E                                         i1l1712 0034  
                                       i1l1704 0014                                         i1l1386 0212  
                                       i1l1394 021F                                         i1l1378 01F9  
                                       i1l1490 00EA                                         i1l1482 00B5  
                                       i1l1474 008B                                         i1l1466 0084  
                                       i1l1458 0071                                         i1l1634 0335  
                                       i1l1706 001F                                         i1l1388 0216  
                                       i1l1396 033C                                         i1l1484 00B9  
                                       i1l1468 0089                                         i1l1492 00F4  
                                       i1l1636 0337                                         i1l1708 0024  
                                       i1l1670 0262                                         i1l1662 0249  
                                       i1l1398 014E                                         i1l1486 00BF  
                                       i1l1478 00A5                                         i1l1574 02CF  
                                       i1l1680 019B                                         i1l1672 0263  
                                       i1l1664 0250                                         i1l1488 00E6  
                                       i1l1496 026B                                         i1l1576 02D6  
                                       i1l1690 01BA                                         i1l1682 01A0  
                                       i1l1674 018A                                         i1l1666 0257  
                                       i1l1498 0279                                         i1l1692 01C0  
                                       i1l1684 01A5                                         i1l1676 0190  
                                       i1l1668 025C                                         i1l1686 01AB  
                                       i1l1678 0195                                         i1l1688 01B0  
                                       i1l1698 0006                                         _INLVLA 038C  
                                       _INLVLC 038E                                         _OSCCON 0099  
                                       _TX1REG 019A                                         _WDTCON 0097  
                                       _TX1STA 019E                                      ??___lwdiv 0074  
                                    ??___lwmod 007C                            _EUSART_Transmit_ISR 0249  
                                       _printf 0048                                ?_WDT_Initialize 0070  
     TMR2_SetInterruptHandler@InterruptHandler 0052                           ?_EUSART_Transmit_ISR 0070  
                            _SYSTEM_Initialize 02A6                        __end_of__initialization 0044  
                        __end_of_TMR2_CallBack 02DC                             ?_SYSTEM_Initialize 0070  
         __end_of_EUSART_SetTxInterruptHandler 031D          __size_of_EUSART_SetTxInterruptHandler 0006  
                 _EUSART_SetTxInterruptHandler 0317                                 __pcstackCOMMON 0070  
                          ??_SYSTEM_Initialize 0055                                      ?_TMR2_ISR 0070  
                                __end_of_putch 0341                               ?_TMR2_Initialize 0070  
                               _OPTION_REGbits 0095                           _eusartRxStatusBuffer 0020  
              ??_EUSART_SetOverrunErrorHandler 0054                      __end_of_SYSTEM_Initialize 02BC  
                        ??_EUSART_Transmit_ISR 0070                                        ??_putch 0072  
                                   __pbssBANK0 0020                           __end_of_EUSART_Write 0222  
                  __size_of_EUSART_Receive_ISR 003A                                     __pmaintext 02DC  
                ?_EUSART_SetTxInterruptHandler 0052               _EUSART_TxDefaultInterruptHandler 005D  
                                   ??_TMR2_ISR 007E                                     __pintentry 0004  
                                      _CCP1CON 0293                   ??_EUSART_DefaultErrorHandler 0071  
                                      ?_printf 0044                        __size_of_ADC_Initialize 0009  
                                _eusartRxCount 003F                                        _SP1BRGH 019C  
                                      _SP1BRGL 019B                  __size_of_EUSART_RxDataHandler 001A  
                                      _OSCSTAT 009A                                        _OSCTUNE 0098  
                                      _SLRCONA 030C                                        _SLRCONC 030E  
                     ??_EUSART_SetErrorHandler 0054                           _ADC_InterruptHandler 0038  
          __size_of_EUSART_DefaultErrorHandler 0004                     ??_TMR2_SetInterruptHandler 0054  
                                      ___lwdiv 014E                                        ___lwmod 01C4  
                                      __ptext1 02A6                                        __ptext2 0346  
                                      __ptext3 02BC                                        __ptext4 0311  
                                      __ptext5 02F1                                        __ptext6 0222  
                                      __ptext7 0303                                        __ptext8 010A  
                                      __ptext9 0317                                __size_of_printf 00C2  
                                      _dpowers 02E7                          _OSCILLATOR_Initialize 0303  
                                    _T2CONbits 001C                       ??_PIN_MANAGER_Initialize 0052  
                   __size_of_SYSTEM_Initialize 0016                                        clrloop0 030C  
                         end_of_initialization 0044          __end_of_EUSART_SetOverrunErrorHandler 0329  
       __size_of_EUSART_SetOverrunErrorHandler 0006                  _EUSART_SetOverrunErrorHandler 0323  
                            _EUSART_Initialize 010A                             ?_EUSART_Initialize 0070  
                                    _RCSTAbits 019D                                        printf@c 0051  
                                      printf@f 0044                            ??_EUSART_Initialize 0054  
                             ??_WDT_Initialize 0052                 ??_EUSART_SetTxInterruptHandler 0054  
                        __size_of_EUSART_Write 002A                __size_of_EUSART_SetErrorHandler 0006  
                    __end_of_EUSART_Initialize 014E                                      _TXSTAbits 019E  
                     __size_of_PWM1_Initialize 0009           __end_of_TMR2_DefaultInterruptHandler 028C  
        __size_of_TMR2_DefaultInterruptHandler 0021                   _TMR2_DefaultInterruptHandler 026B  
           __end_of_EUSART_DefaultErrorHandler 0352                     _EUSART_DefaultErrorHandler 034E  
                                 _EUSART_Write 01F8                              __size_of_TMR2_ISR 0006  
                               _ADC_Initialize 02FA                         ?_OSCILLATOR_Initialize 0070  
                               __end_of_printf 010A                            start_initialization 003C  
              __size_of_PIN_MANAGER_Initialize 0027   EUSART_SetRxInterruptHandler@interruptHandler 0052  
 EUSART_SetTxInterruptHandler@interruptHandler 0052                                    putch@txData 0072  
               ?_EUSART_SetOverrunErrorHandler 0052                     _EUSART_FramingErrorHandler 0059  
                       _EUSART_SetErrorHandler 032F                                    _CCPTMRSbits 029E  
                       __end_of_ADC_Initialize 0303                  ?_TMR2_DefaultInterruptHandler 0070  
                                     ??_printf 0048                         __size_of_TMR2_CallBack 000D  
                  __end_of_EUSART_Transmit_ISR 026B                                      ___latbits 0002  
                                __pcstackBANK0 0044                       __size_of_TMR2_Initialize 0013  
                   __end_of_EUSART_Receive_ISR 01C4                     __size_of_EUSART_Initialize 0044  
             _EUSART_RxDefaultInterruptHandler 005B                                      __pnvBANK0 0055  
                 __end_of_EUSART_RxDataHandler 02A6                               ___lwdiv@dividend 0072  
                       _PIN_MANAGER_Initialize 0222                                       ?___lwdiv 0070  
                                     ?___lwmod 0078                                ?_ADC_Initialize 0070  
                                 _eusartRxHead 0041                                   _eusartTxHead 0043  
                                 _eusartRxTail 0040                                   _eusartTxTail 0042  
                            ??_PWM1_Initialize 0052                   ??_INTERRUPT_InterruptManager 007E  
                      _eusartTxBufferRemaining 0061                                       _BAUD1CON 019F  
                             ___lwdiv@quotient 0075                                 __size_of_putch 0006  
                               _eusartRxBuffer 0028                                 _eusartTxBuffer 0030  
       EUSART_SetErrorHandler@interruptHandler 0052                                      clear_ram0 030B  
                                _TMR2_CallBack 02CF                                       _PIE1bits 0091  
                            _eusartRxLastError 003E            __size_of_INTERRUPT_InterruptManager 0036  
                                     _PIR1bits 0011                ??_EUSART_SetFramingErrorHandler 0054  
    __end_of_EUSART_DefaultOverrunErrorHandler 034E     __size_of_EUSART_DefaultOverrunErrorHandler 0004  
          ??_EUSART_DefaultOverrunErrorHandler 0070             ?_EUSART_DefaultOverrunErrorHandler 0070  
            _EUSART_DefaultOverrunErrorHandler 034A                                       _TMR2_ISR 0335  
                                   _ADCON0bits 009D                                     printf@flag 004D  
                                   printf@prec 004E                 ??_TMR2_DefaultInterruptHandler 007E  
            __size_of_TMR2_SetInterruptHandler 0006                      ?_TMR2_SetInterruptHandler 0052  
                            ??_TMR2_Initialize 0054                                 ?_TMR2_CallBack 0070  
                      ??_OSCILLATOR_Initialize 0052                            _EUSART_ErrorHandler 0055  
                  ?_EUSART_DefaultErrorHandler 0070                               __size_of___lwdiv 003C  
                             __size_of___lwmod 0034                                ___lwdiv@divisor 0070  
                         _EUSART_RxDataHandler 028C                                ___lwdiv@counter 0077  
                                     __ptext10 031D                                       __ptext11 0323  
                                     __ptext20 033B                                       __ptext12 0329  
                                     __ptext21 01F8                                       __ptext13 032F  
                                     __ptext22 01C4                                       __ptext14 02FA  
                                     __ptext23 014E                                       __ptext24 0249  
                                     __ptext16 0335                                       __ptext25 018A  
                                     __ptext17 02CF                                       __ptext26 034A  
                                     __ptext18 026B                                       __ptext27 0352  
                                     __ptext19 0048                                       __ptext28 034E  
                                     __ptext29 028C                                  __size_of_main 000B  
                      ?_EUSART_SetErrorHandler 0052                                     _RC1STAbits 019D  
EUSART_SetOverrunErrorHandler@interruptHandler 0052                                       int$flags 007E  
           __end_of_INTERRUPT_InterruptManager 003A                     _INTERRUPT_InterruptManager 0004  
        __end_of_EUSART_SetFramingErrorHandler 032F         __size_of_EUSART_SetFramingErrorHandler 0006  
                _EUSART_SetFramingErrorHandler 0329                                      printf@val 004F  
                                   _INTCONbits 000B                          ?_EUSART_RxDataHandler 0070  
                      __size_of_WDT_Initialize 0004                                       intlevel1 0000  
                              ??_TMR2_CallBack 007E                               ___lwmod@dividend 007A  
                      ?_PIN_MANAGER_Initialize 0070                 __end_of_EUSART_SetErrorHandler 0335  
                              _PWM1_Initialize 02F1                               ??_ADC_Initialize 0052  
         __end_of_EUSART_SetRxInterruptHandler 0323          __size_of_EUSART_SetRxInterruptHandler 0006  
                 _EUSART_SetRxInterruptHandler 031D                                       printf@ap 004C  
                           _EUSART_Receive_ISR 018A  EUSART_SetFramingErrorHandler@interruptHandler 0052  
                                __pstringtext1 02E7                                  __pstringtext2 0341  
                                __pstringtext3 0000                            ?_EUSART_Receive_ISR 0070  
                              ___lwmod@divisor 0078                                ___lwmod@counter 007D  
                                   _TX1STAbits 019E                             EUSART_Write@txData 0071  
                 __size_of_EUSART_Transmit_ISR 0022                 __end_of_PIN_MANAGER_Initialize 0249  
                         ??_EUSART_Receive_ISR 0071                          _TMR2_InterruptHandler 005F  
