

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Fri Feb 05 18:20:21 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F1705
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2
    29                           	psect	intentry,global,class=CODE,delta=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2
    33                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    34                           	psect	text21,local,class=CODE,merge=1,delta=2
    35                           	psect	text22,local,class=CODE,merge=1,delta=2
    36                           	psect	text23,local,class=CODE,merge=1,delta=2,group=2
    37                           	psect	text24,local,class=CODE,merge=1,delta=2,group=2
    38                           	psect	text25,local,class=CODE,merge=1,delta=2
    39                           	psect	text26,local,class=CODE,merge=1,delta=2
    40                           	psect	text27,local,class=CODE,merge=1,delta=2
    41                           	psect	text28,local,class=CODE,merge=1,delta=2
    42                           	psect	text29,local,class=CODE,merge=1,delta=2
    43                           	psect	text30,local,class=CODE,merge=1,delta=2
    44                           	psect	text31,local,class=CODE,merge=1,delta=2
    45                           	psect	text32,local,class=CODE,merge=1,delta=2
    46                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    47                           	dabs	1,0x7E,2
    48  0000                     
    49                           ; Version 2.20
    50                           ; Generated 12/02/2020 GMT
    51                           ; 
    52                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    53                           ; All rights reserved.
    54                           ; 
    55                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    56                           ; 
    57                           ; Redistribution and use in source and binary forms, with or without modification, are
    58                           ; permitted provided that the following conditions are met:
    59                           ; 
    60                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    61                           ;        conditions and the following disclaimer.
    62                           ; 
    63                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    64                           ;        of conditions and the following disclaimer in the documentation and/or other
    65                           ;        materials provided with the distribution.
    66                           ; 
    67                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    68                           ;        software without specific prior written permission.
    69                           ; 
    70                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    71                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    72                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    73                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    74                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    75                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    76                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    77                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    78                           ; 
    79                           ; 
    80                           ; Code-generator required, PIC16F1705 Definitions
    81                           ; 
    82                           ; SFR Addresses
    83  0000                     	;# 
    84  0001                     	;# 
    85  0002                     	;# 
    86  0003                     	;# 
    87  0004                     	;# 
    88  0005                     	;# 
    89  0006                     	;# 
    90  0007                     	;# 
    91  0008                     	;# 
    92  0009                     	;# 
    93  000A                     	;# 
    94  000B                     	;# 
    95  000C                     	;# 
    96  000E                     	;# 
    97  0011                     	;# 
    98  0012                     	;# 
    99  0013                     	;# 
   100  0015                     	;# 
   101  0016                     	;# 
   102  0016                     	;# 
   103  0017                     	;# 
   104  0018                     	;# 
   105  0019                     	;# 
   106  001A                     	;# 
   107  001B                     	;# 
   108  001C                     	;# 
   109  008C                     	;# 
   110  008E                     	;# 
   111  0091                     	;# 
   112  0092                     	;# 
   113  0093                     	;# 
   114  0095                     	;# 
   115  0096                     	;# 
   116  0097                     	;# 
   117  0098                     	;# 
   118  0099                     	;# 
   119  009A                     	;# 
   120  009B                     	;# 
   121  009B                     	;# 
   122  009C                     	;# 
   123  009D                     	;# 
   124  009E                     	;# 
   125  009F                     	;# 
   126  010C                     	;# 
   127  010E                     	;# 
   128  0111                     	;# 
   129  0112                     	;# 
   130  0113                     	;# 
   131  0114                     	;# 
   132  0115                     	;# 
   133  0116                     	;# 
   134  0117                     	;# 
   135  0118                     	;# 
   136  0119                     	;# 
   137  011C                     	;# 
   138  018C                     	;# 
   139  018E                     	;# 
   140  0191                     	;# 
   141  0191                     	;# 
   142  0192                     	;# 
   143  0193                     	;# 
   144  0193                     	;# 
   145  0194                     	;# 
   146  0195                     	;# 
   147  0196                     	;# 
   148  0197                     	;# 
   149  0199                     	;# 
   150  0199                     	;# 
   151  0199                     	;# 
   152  019A                     	;# 
   153  019A                     	;# 
   154  019A                     	;# 
   155  019B                     	;# 
   156  019B                     	;# 
   157  019B                     	;# 
   158  019B                     	;# 
   159  019B                     	;# 
   160  019C                     	;# 
   161  019C                     	;# 
   162  019C                     	;# 
   163  019D                     	;# 
   164  019D                     	;# 
   165  019D                     	;# 
   166  019E                     	;# 
   167  019E                     	;# 
   168  019E                     	;# 
   169  019F                     	;# 
   170  019F                     	;# 
   171  019F                     	;# 
   172  019F                     	;# 
   173  019F                     	;# 
   174  020C                     	;# 
   175  020E                     	;# 
   176  0211                     	;# 
   177  0211                     	;# 
   178  0212                     	;# 
   179  0212                     	;# 
   180  0213                     	;# 
   181  0213                     	;# 
   182  0214                     	;# 
   183  0214                     	;# 
   184  0215                     	;# 
   185  0215                     	;# 
   186  0215                     	;# 
   187  0215                     	;# 
   188  0216                     	;# 
   189  0216                     	;# 
   190  0217                     	;# 
   191  0217                     	;# 
   192  028C                     	;# 
   193  028E                     	;# 
   194  0291                     	;# 
   195  0291                     	;# 
   196  0292                     	;# 
   197  0293                     	;# 
   198  0293                     	;# 
   199  0298                     	;# 
   200  0298                     	;# 
   201  0299                     	;# 
   202  029A                     	;# 
   203  029A                     	;# 
   204  029E                     	;# 
   205  030C                     	;# 
   206  030E                     	;# 
   207  038C                     	;# 
   208  038E                     	;# 
   209  0391                     	;# 
   210  0392                     	;# 
   211  0393                     	;# 
   212  0397                     	;# 
   213  0398                     	;# 
   214  0399                     	;# 
   215  0415                     	;# 
   216  0416                     	;# 
   217  0417                     	;# 
   218  041C                     	;# 
   219  041D                     	;# 
   220  041E                     	;# 
   221  0511                     	;# 
   222  0515                     	;# 
   223  0617                     	;# 
   224  0618                     	;# 
   225  0619                     	;# 
   226  0619                     	;# 
   227  061A                     	;# 
   228  061B                     	;# 
   229  061C                     	;# 
   230  061C                     	;# 
   231  0691                     	;# 
   232  0692                     	;# 
   233  0693                     	;# 
   234  0694                     	;# 
   235  0695                     	;# 
   236  0696                     	;# 
   237  0697                     	;# 
   238  0698                     	;# 
   239  0699                     	;# 
   240  069A                     	;# 
   241  069B                     	;# 
   242  069C                     	;# 
   243  069D                     	;# 
   244  069E                     	;# 
   245  069F                     	;# 
   246  0E0F                     	;# 
   247  0E10                     	;# 
   248  0E11                     	;# 
   249  0E12                     	;# 
   250  0E13                     	;# 
   251  0E14                     	;# 
   252  0E15                     	;# 
   253  0E17                     	;# 
   254  0E20                     	;# 
   255  0E21                     	;# 
   256  0E22                     	;# 
   257  0E24                     	;# 
   258  0E25                     	;# 
   259  0E28                     	;# 
   260  0E29                     	;# 
   261  0E2A                     	;# 
   262  0E2B                     	;# 
   263  0E90                     	;# 
   264  0E91                     	;# 
   265  0E92                     	;# 
   266  0E94                     	;# 
   267  0E95                     	;# 
   268  0EA0                     	;# 
   269  0EA1                     	;# 
   270  0EA2                     	;# 
   271  0EA3                     	;# 
   272  0EA4                     	;# 
   273  0EA5                     	;# 
   274  0F0F                     	;# 
   275  0F10                     	;# 
   276  0F11                     	;# 
   277  0F12                     	;# 
   278  0F13                     	;# 
   279  0F14                     	;# 
   280  0F15                     	;# 
   281  0F16                     	;# 
   282  0F17                     	;# 
   283  0F18                     	;# 
   284  0F19                     	;# 
   285  0F1A                     	;# 
   286  0F1B                     	;# 
   287  0F1C                     	;# 
   288  0F1D                     	;# 
   289  0F1E                     	;# 
   290  0F1F                     	;# 
   291  0F20                     	;# 
   292  0F21                     	;# 
   293  0F22                     	;# 
   294  0F23                     	;# 
   295  0F24                     	;# 
   296  0F25                     	;# 
   297  0F26                     	;# 
   298  0F27                     	;# 
   299  0F28                     	;# 
   300  0F29                     	;# 
   301  0F2A                     	;# 
   302  0F2B                     	;# 
   303  0F2C                     	;# 
   304  0F2D                     	;# 
   305  0F9E                     	;# 
   306  0FE4                     	;# 
   307  0FE5                     	;# 
   308  0FE6                     	;# 
   309  0FE7                     	;# 
   310  0FE8                     	;# 
   311  0FE9                     	;# 
   312  0FEA                     	;# 
   313  0FEB                     	;# 
   314  0FED                     	;# 
   315  0FEE                     	;# 
   316  0FEF                     	;# 
   317  0000                     	;# 
   318  0001                     	;# 
   319  0002                     	;# 
   320  0003                     	;# 
   321  0004                     	;# 
   322  0005                     	;# 
   323  0006                     	;# 
   324  0007                     	;# 
   325  0008                     	;# 
   326  0009                     	;# 
   327  000A                     	;# 
   328  000B                     	;# 
   329  000C                     	;# 
   330  000E                     	;# 
   331  0011                     	;# 
   332  0012                     	;# 
   333  0013                     	;# 
   334  0015                     	;# 
   335  0016                     	;# 
   336  0016                     	;# 
   337  0017                     	;# 
   338  0018                     	;# 
   339  0019                     	;# 
   340  001A                     	;# 
   341  001B                     	;# 
   342  001C                     	;# 
   343  008C                     	;# 
   344  008E                     	;# 
   345  0091                     	;# 
   346  0092                     	;# 
   347  0093                     	;# 
   348  0095                     	;# 
   349  0096                     	;# 
   350  0097                     	;# 
   351  0098                     	;# 
   352  0099                     	;# 
   353  009A                     	;# 
   354  009B                     	;# 
   355  009B                     	;# 
   356  009C                     	;# 
   357  009D                     	;# 
   358  009E                     	;# 
   359  009F                     	;# 
   360  010C                     	;# 
   361  010E                     	;# 
   362  0111                     	;# 
   363  0112                     	;# 
   364  0113                     	;# 
   365  0114                     	;# 
   366  0115                     	;# 
   367  0116                     	;# 
   368  0117                     	;# 
   369  0118                     	;# 
   370  0119                     	;# 
   371  011C                     	;# 
   372  018C                     	;# 
   373  018E                     	;# 
   374  0191                     	;# 
   375  0191                     	;# 
   376  0192                     	;# 
   377  0193                     	;# 
   378  0193                     	;# 
   379  0194                     	;# 
   380  0195                     	;# 
   381  0196                     	;# 
   382  0197                     	;# 
   383  0199                     	;# 
   384  0199                     	;# 
   385  0199                     	;# 
   386  019A                     	;# 
   387  019A                     	;# 
   388  019A                     	;# 
   389  019B                     	;# 
   390  019B                     	;# 
   391  019B                     	;# 
   392  019B                     	;# 
   393  019B                     	;# 
   394  019C                     	;# 
   395  019C                     	;# 
   396  019C                     	;# 
   397  019D                     	;# 
   398  019D                     	;# 
   399  019D                     	;# 
   400  019E                     	;# 
   401  019E                     	;# 
   402  019E                     	;# 
   403  019F                     	;# 
   404  019F                     	;# 
   405  019F                     	;# 
   406  019F                     	;# 
   407  019F                     	;# 
   408  020C                     	;# 
   409  020E                     	;# 
   410  0211                     	;# 
   411  0211                     	;# 
   412  0212                     	;# 
   413  0212                     	;# 
   414  0213                     	;# 
   415  0213                     	;# 
   416  0214                     	;# 
   417  0214                     	;# 
   418  0215                     	;# 
   419  0215                     	;# 
   420  0215                     	;# 
   421  0215                     	;# 
   422  0216                     	;# 
   423  0216                     	;# 
   424  0217                     	;# 
   425  0217                     	;# 
   426  028C                     	;# 
   427  028E                     	;# 
   428  0291                     	;# 
   429  0291                     	;# 
   430  0292                     	;# 
   431  0293                     	;# 
   432  0293                     	;# 
   433  0298                     	;# 
   434  0298                     	;# 
   435  0299                     	;# 
   436  029A                     	;# 
   437  029A                     	;# 
   438  029E                     	;# 
   439  030C                     	;# 
   440  030E                     	;# 
   441  038C                     	;# 
   442  038E                     	;# 
   443  0391                     	;# 
   444  0392                     	;# 
   445  0393                     	;# 
   446  0397                     	;# 
   447  0398                     	;# 
   448  0399                     	;# 
   449  0415                     	;# 
   450  0416                     	;# 
   451  0417                     	;# 
   452  041C                     	;# 
   453  041D                     	;# 
   454  041E                     	;# 
   455  0511                     	;# 
   456  0515                     	;# 
   457  0617                     	;# 
   458  0618                     	;# 
   459  0619                     	;# 
   460  0619                     	;# 
   461  061A                     	;# 
   462  061B                     	;# 
   463  061C                     	;# 
   464  061C                     	;# 
   465  0691                     	;# 
   466  0692                     	;# 
   467  0693                     	;# 
   468  0694                     	;# 
   469  0695                     	;# 
   470  0696                     	;# 
   471  0697                     	;# 
   472  0698                     	;# 
   473  0699                     	;# 
   474  069A                     	;# 
   475  069B                     	;# 
   476  069C                     	;# 
   477  069D                     	;# 
   478  069E                     	;# 
   479  069F                     	;# 
   480  0E0F                     	;# 
   481  0E10                     	;# 
   482  0E11                     	;# 
   483  0E12                     	;# 
   484  0E13                     	;# 
   485  0E14                     	;# 
   486  0E15                     	;# 
   487  0E17                     	;# 
   488  0E20                     	;# 
   489  0E21                     	;# 
   490  0E22                     	;# 
   491  0E24                     	;# 
   492  0E25                     	;# 
   493  0E28                     	;# 
   494  0E29                     	;# 
   495  0E2A                     	;# 
   496  0E2B                     	;# 
   497  0E90                     	;# 
   498  0E91                     	;# 
   499  0E92                     	;# 
   500  0E94                     	;# 
   501  0E95                     	;# 
   502  0EA0                     	;# 
   503  0EA1                     	;# 
   504  0EA2                     	;# 
   505  0EA3                     	;# 
   506  0EA4                     	;# 
   507  0EA5                     	;# 
   508  0F0F                     	;# 
   509  0F10                     	;# 
   510  0F11                     	;# 
   511  0F12                     	;# 
   512  0F13                     	;# 
   513  0F14                     	;# 
   514  0F15                     	;# 
   515  0F16                     	;# 
   516  0F17                     	;# 
   517  0F18                     	;# 
   518  0F19                     	;# 
   519  0F1A                     	;# 
   520  0F1B                     	;# 
   521  0F1C                     	;# 
   522  0F1D                     	;# 
   523  0F1E                     	;# 
   524  0F1F                     	;# 
   525  0F20                     	;# 
   526  0F21                     	;# 
   527  0F22                     	;# 
   528  0F23                     	;# 
   529  0F24                     	;# 
   530  0F25                     	;# 
   531  0F26                     	;# 
   532  0F27                     	;# 
   533  0F28                     	;# 
   534  0F29                     	;# 
   535  0F2A                     	;# 
   536  0F2B                     	;# 
   537  0F2C                     	;# 
   538  0F2D                     	;# 
   539  0F9E                     	;# 
   540  0FE4                     	;# 
   541  0FE5                     	;# 
   542  0FE6                     	;# 
   543  0FE7                     	;# 
   544  0FE8                     	;# 
   545  0FE9                     	;# 
   546  0FEA                     	;# 
   547  0FEB                     	;# 
   548  0FED                     	;# 
   549  0FEE                     	;# 
   550  0FEF                     	;# 
   551  0000                     	;# 
   552  0001                     	;# 
   553  0002                     	;# 
   554  0003                     	;# 
   555  0004                     	;# 
   556  0005                     	;# 
   557  0006                     	;# 
   558  0007                     	;# 
   559  0008                     	;# 
   560  0009                     	;# 
   561  000A                     	;# 
   562  000B                     	;# 
   563  000C                     	;# 
   564  000E                     	;# 
   565  0011                     	;# 
   566  0012                     	;# 
   567  0013                     	;# 
   568  0015                     	;# 
   569  0016                     	;# 
   570  0016                     	;# 
   571  0017                     	;# 
   572  0018                     	;# 
   573  0019                     	;# 
   574  001A                     	;# 
   575  001B                     	;# 
   576  001C                     	;# 
   577  008C                     	;# 
   578  008E                     	;# 
   579  0091                     	;# 
   580  0092                     	;# 
   581  0093                     	;# 
   582  0095                     	;# 
   583  0096                     	;# 
   584  0097                     	;# 
   585  0098                     	;# 
   586  0099                     	;# 
   587  009A                     	;# 
   588  009B                     	;# 
   589  009B                     	;# 
   590  009C                     	;# 
   591  009D                     	;# 
   592  009E                     	;# 
   593  009F                     	;# 
   594  010C                     	;# 
   595  010E                     	;# 
   596  0111                     	;# 
   597  0112                     	;# 
   598  0113                     	;# 
   599  0114                     	;# 
   600  0115                     	;# 
   601  0116                     	;# 
   602  0117                     	;# 
   603  0118                     	;# 
   604  0119                     	;# 
   605  011C                     	;# 
   606  018C                     	;# 
   607  018E                     	;# 
   608  0191                     	;# 
   609  0191                     	;# 
   610  0192                     	;# 
   611  0193                     	;# 
   612  0193                     	;# 
   613  0194                     	;# 
   614  0195                     	;# 
   615  0196                     	;# 
   616  0197                     	;# 
   617  0199                     	;# 
   618  0199                     	;# 
   619  0199                     	;# 
   620  019A                     	;# 
   621  019A                     	;# 
   622  019A                     	;# 
   623  019B                     	;# 
   624  019B                     	;# 
   625  019B                     	;# 
   626  019B                     	;# 
   627  019B                     	;# 
   628  019C                     	;# 
   629  019C                     	;# 
   630  019C                     	;# 
   631  019D                     	;# 
   632  019D                     	;# 
   633  019D                     	;# 
   634  019E                     	;# 
   635  019E                     	;# 
   636  019E                     	;# 
   637  019F                     	;# 
   638  019F                     	;# 
   639  019F                     	;# 
   640  019F                     	;# 
   641  019F                     	;# 
   642  020C                     	;# 
   643  020E                     	;# 
   644  0211                     	;# 
   645  0211                     	;# 
   646  0212                     	;# 
   647  0212                     	;# 
   648  0213                     	;# 
   649  0213                     	;# 
   650  0214                     	;# 
   651  0214                     	;# 
   652  0215                     	;# 
   653  0215                     	;# 
   654  0215                     	;# 
   655  0215                     	;# 
   656  0216                     	;# 
   657  0216                     	;# 
   658  0217                     	;# 
   659  0217                     	;# 
   660  028C                     	;# 
   661  028E                     	;# 
   662  0291                     	;# 
   663  0291                     	;# 
   664  0292                     	;# 
   665  0293                     	;# 
   666  0293                     	;# 
   667  0298                     	;# 
   668  0298                     	;# 
   669  0299                     	;# 
   670  029A                     	;# 
   671  029A                     	;# 
   672  029E                     	;# 
   673  030C                     	;# 
   674  030E                     	;# 
   675  038C                     	;# 
   676  038E                     	;# 
   677  0391                     	;# 
   678  0392                     	;# 
   679  0393                     	;# 
   680  0397                     	;# 
   681  0398                     	;# 
   682  0399                     	;# 
   683  0415                     	;# 
   684  0416                     	;# 
   685  0417                     	;# 
   686  041C                     	;# 
   687  041D                     	;# 
   688  041E                     	;# 
   689  0511                     	;# 
   690  0515                     	;# 
   691  0617                     	;# 
   692  0618                     	;# 
   693  0619                     	;# 
   694  0619                     	;# 
   695  061A                     	;# 
   696  061B                     	;# 
   697  061C                     	;# 
   698  061C                     	;# 
   699  0691                     	;# 
   700  0692                     	;# 
   701  0693                     	;# 
   702  0694                     	;# 
   703  0695                     	;# 
   704  0696                     	;# 
   705  0697                     	;# 
   706  0698                     	;# 
   707  0699                     	;# 
   708  069A                     	;# 
   709  069B                     	;# 
   710  069C                     	;# 
   711  069D                     	;# 
   712  069E                     	;# 
   713  069F                     	;# 
   714  0E0F                     	;# 
   715  0E10                     	;# 
   716  0E11                     	;# 
   717  0E12                     	;# 
   718  0E13                     	;# 
   719  0E14                     	;# 
   720  0E15                     	;# 
   721  0E17                     	;# 
   722  0E20                     	;# 
   723  0E21                     	;# 
   724  0E22                     	;# 
   725  0E24                     	;# 
   726  0E25                     	;# 
   727  0E28                     	;# 
   728  0E29                     	;# 
   729  0E2A                     	;# 
   730  0E2B                     	;# 
   731  0E90                     	;# 
   732  0E91                     	;# 
   733  0E92                     	;# 
   734  0E94                     	;# 
   735  0E95                     	;# 
   736  0EA0                     	;# 
   737  0EA1                     	;# 
   738  0EA2                     	;# 
   739  0EA3                     	;# 
   740  0EA4                     	;# 
   741  0EA5                     	;# 
   742  0F0F                     	;# 
   743  0F10                     	;# 
   744  0F11                     	;# 
   745  0F12                     	;# 
   746  0F13                     	;# 
   747  0F14                     	;# 
   748  0F15                     	;# 
   749  0F16                     	;# 
   750  0F17                     	;# 
   751  0F18                     	;# 
   752  0F19                     	;# 
   753  0F1A                     	;# 
   754  0F1B                     	;# 
   755  0F1C                     	;# 
   756  0F1D                     	;# 
   757  0F1E                     	;# 
   758  0F1F                     	;# 
   759  0F20                     	;# 
   760  0F21                     	;# 
   761  0F22                     	;# 
   762  0F23                     	;# 
   763  0F24                     	;# 
   764  0F25                     	;# 
   765  0F26                     	;# 
   766  0F27                     	;# 
   767  0F28                     	;# 
   768  0F29                     	;# 
   769  0F2A                     	;# 
   770  0F2B                     	;# 
   771  0F2C                     	;# 
   772  0F2D                     	;# 
   773  0F9E                     	;# 
   774  0FE4                     	;# 
   775  0FE5                     	;# 
   776  0FE6                     	;# 
   777  0FE7                     	;# 
   778  0FE8                     	;# 
   779  0FE9                     	;# 
   780  0FEA                     	;# 
   781  0FEB                     	;# 
   782  0FED                     	;# 
   783  0FEE                     	;# 
   784  0FEF                     	;# 
   785  0000                     	;# 
   786  0001                     	;# 
   787  0002                     	;# 
   788  0003                     	;# 
   789  0004                     	;# 
   790  0005                     	;# 
   791  0006                     	;# 
   792  0007                     	;# 
   793  0008                     	;# 
   794  0009                     	;# 
   795  000A                     	;# 
   796  000B                     	;# 
   797  000C                     	;# 
   798  000E                     	;# 
   799  0011                     	;# 
   800  0012                     	;# 
   801  0013                     	;# 
   802  0015                     	;# 
   803  0016                     	;# 
   804  0016                     	;# 
   805  0017                     	;# 
   806  0018                     	;# 
   807  0019                     	;# 
   808  001A                     	;# 
   809  001B                     	;# 
   810  001C                     	;# 
   811  008C                     	;# 
   812  008E                     	;# 
   813  0091                     	;# 
   814  0092                     	;# 
   815  0093                     	;# 
   816  0095                     	;# 
   817  0096                     	;# 
   818  0097                     	;# 
   819  0098                     	;# 
   820  0099                     	;# 
   821  009A                     	;# 
   822  009B                     	;# 
   823  009B                     	;# 
   824  009C                     	;# 
   825  009D                     	;# 
   826  009E                     	;# 
   827  009F                     	;# 
   828  010C                     	;# 
   829  010E                     	;# 
   830  0111                     	;# 
   831  0112                     	;# 
   832  0113                     	;# 
   833  0114                     	;# 
   834  0115                     	;# 
   835  0116                     	;# 
   836  0117                     	;# 
   837  0118                     	;# 
   838  0119                     	;# 
   839  011C                     	;# 
   840  018C                     	;# 
   841  018E                     	;# 
   842  0191                     	;# 
   843  0191                     	;# 
   844  0192                     	;# 
   845  0193                     	;# 
   846  0193                     	;# 
   847  0194                     	;# 
   848  0195                     	;# 
   849  0196                     	;# 
   850  0197                     	;# 
   851  0199                     	;# 
   852  0199                     	;# 
   853  0199                     	;# 
   854  019A                     	;# 
   855  019A                     	;# 
   856  019A                     	;# 
   857  019B                     	;# 
   858  019B                     	;# 
   859  019B                     	;# 
   860  019B                     	;# 
   861  019B                     	;# 
   862  019C                     	;# 
   863  019C                     	;# 
   864  019C                     	;# 
   865  019D                     	;# 
   866  019D                     	;# 
   867  019D                     	;# 
   868  019E                     	;# 
   869  019E                     	;# 
   870  019E                     	;# 
   871  019F                     	;# 
   872  019F                     	;# 
   873  019F                     	;# 
   874  019F                     	;# 
   875  019F                     	;# 
   876  020C                     	;# 
   877  020E                     	;# 
   878  0211                     	;# 
   879  0211                     	;# 
   880  0212                     	;# 
   881  0212                     	;# 
   882  0213                     	;# 
   883  0213                     	;# 
   884  0214                     	;# 
   885  0214                     	;# 
   886  0215                     	;# 
   887  0215                     	;# 
   888  0215                     	;# 
   889  0215                     	;# 
   890  0216                     	;# 
   891  0216                     	;# 
   892  0217                     	;# 
   893  0217                     	;# 
   894  028C                     	;# 
   895  028E                     	;# 
   896  0291                     	;# 
   897  0291                     	;# 
   898  0292                     	;# 
   899  0293                     	;# 
   900  0293                     	;# 
   901  0298                     	;# 
   902  0298                     	;# 
   903  0299                     	;# 
   904  029A                     	;# 
   905  029A                     	;# 
   906  029E                     	;# 
   907  030C                     	;# 
   908  030E                     	;# 
   909  038C                     	;# 
   910  038E                     	;# 
   911  0391                     	;# 
   912  0392                     	;# 
   913  0393                     	;# 
   914  0397                     	;# 
   915  0398                     	;# 
   916  0399                     	;# 
   917  0415                     	;# 
   918  0416                     	;# 
   919  0417                     	;# 
   920  041C                     	;# 
   921  041D                     	;# 
   922  041E                     	;# 
   923  0511                     	;# 
   924  0515                     	;# 
   925  0617                     	;# 
   926  0618                     	;# 
   927  0619                     	;# 
   928  0619                     	;# 
   929  061A                     	;# 
   930  061B                     	;# 
   931  061C                     	;# 
   932  061C                     	;# 
   933  0691                     	;# 
   934  0692                     	;# 
   935  0693                     	;# 
   936  0694                     	;# 
   937  0695                     	;# 
   938  0696                     	;# 
   939  0697                     	;# 
   940  0698                     	;# 
   941  0699                     	;# 
   942  069A                     	;# 
   943  069B                     	;# 
   944  069C                     	;# 
   945  069D                     	;# 
   946  069E                     	;# 
   947  069F                     	;# 
   948  0E0F                     	;# 
   949  0E10                     	;# 
   950  0E11                     	;# 
   951  0E12                     	;# 
   952  0E13                     	;# 
   953  0E14                     	;# 
   954  0E15                     	;# 
   955  0E17                     	;# 
   956  0E20                     	;# 
   957  0E21                     	;# 
   958  0E22                     	;# 
   959  0E24                     	;# 
   960  0E25                     	;# 
   961  0E28                     	;# 
   962  0E29                     	;# 
   963  0E2A                     	;# 
   964  0E2B                     	;# 
   965  0E90                     	;# 
   966  0E91                     	;# 
   967  0E92                     	;# 
   968  0E94                     	;# 
   969  0E95                     	;# 
   970  0EA0                     	;# 
   971  0EA1                     	;# 
   972  0EA2                     	;# 
   973  0EA3                     	;# 
   974  0EA4                     	;# 
   975  0EA5                     	;# 
   976  0F0F                     	;# 
   977  0F10                     	;# 
   978  0F11                     	;# 
   979  0F12                     	;# 
   980  0F13                     	;# 
   981  0F14                     	;# 
   982  0F15                     	;# 
   983  0F16                     	;# 
   984  0F17                     	;# 
   985  0F18                     	;# 
   986  0F19                     	;# 
   987  0F1A                     	;# 
   988  0F1B                     	;# 
   989  0F1C                     	;# 
   990  0F1D                     	;# 
   991  0F1E                     	;# 
   992  0F1F                     	;# 
   993  0F20                     	;# 
   994  0F21                     	;# 
   995  0F22                     	;# 
   996  0F23                     	;# 
   997  0F24                     	;# 
   998  0F25                     	;# 
   999  0F26                     	;# 
  1000  0F27                     	;# 
  1001  0F28                     	;# 
  1002  0F29                     	;# 
  1003  0F2A                     	;# 
  1004  0F2B                     	;# 
  1005  0F2C                     	;# 
  1006  0F2D                     	;# 
  1007  0F9E                     	;# 
  1008  0FE4                     	;# 
  1009  0FE5                     	;# 
  1010  0FE6                     	;# 
  1011  0FE7                     	;# 
  1012  0FE8                     	;# 
  1013  0FE9                     	;# 
  1014  0FEA                     	;# 
  1015  0FEB                     	;# 
  1016  0FED                     	;# 
  1017  0FEE                     	;# 
  1018  0FEF                     	;# 
  1019  0000                     	;# 
  1020  0001                     	;# 
  1021  0002                     	;# 
  1022  0003                     	;# 
  1023  0004                     	;# 
  1024  0005                     	;# 
  1025  0006                     	;# 
  1026  0007                     	;# 
  1027  0008                     	;# 
  1028  0009                     	;# 
  1029  000A                     	;# 
  1030  000B                     	;# 
  1031  000C                     	;# 
  1032  000E                     	;# 
  1033  0011                     	;# 
  1034  0012                     	;# 
  1035  0013                     	;# 
  1036  0015                     	;# 
  1037  0016                     	;# 
  1038  0016                     	;# 
  1039  0017                     	;# 
  1040  0018                     	;# 
  1041  0019                     	;# 
  1042  001A                     	;# 
  1043  001B                     	;# 
  1044  001C                     	;# 
  1045  008C                     	;# 
  1046  008E                     	;# 
  1047  0091                     	;# 
  1048  0092                     	;# 
  1049  0093                     	;# 
  1050  0095                     	;# 
  1051  0096                     	;# 
  1052  0097                     	;# 
  1053  0098                     	;# 
  1054  0099                     	;# 
  1055  009A                     	;# 
  1056  009B                     	;# 
  1057  009B                     	;# 
  1058  009C                     	;# 
  1059  009D                     	;# 
  1060  009E                     	;# 
  1061  009F                     	;# 
  1062  010C                     	;# 
  1063  010E                     	;# 
  1064  0111                     	;# 
  1065  0112                     	;# 
  1066  0113                     	;# 
  1067  0114                     	;# 
  1068  0115                     	;# 
  1069  0116                     	;# 
  1070  0117                     	;# 
  1071  0118                     	;# 
  1072  0119                     	;# 
  1073  011C                     	;# 
  1074  018C                     	;# 
  1075  018E                     	;# 
  1076  0191                     	;# 
  1077  0191                     	;# 
  1078  0192                     	;# 
  1079  0193                     	;# 
  1080  0193                     	;# 
  1081  0194                     	;# 
  1082  0195                     	;# 
  1083  0196                     	;# 
  1084  0197                     	;# 
  1085  0199                     	;# 
  1086  0199                     	;# 
  1087  0199                     	;# 
  1088  019A                     	;# 
  1089  019A                     	;# 
  1090  019A                     	;# 
  1091  019B                     	;# 
  1092  019B                     	;# 
  1093  019B                     	;# 
  1094  019B                     	;# 
  1095  019B                     	;# 
  1096  019C                     	;# 
  1097  019C                     	;# 
  1098  019C                     	;# 
  1099  019D                     	;# 
  1100  019D                     	;# 
  1101  019D                     	;# 
  1102  019E                     	;# 
  1103  019E                     	;# 
  1104  019E                     	;# 
  1105  019F                     	;# 
  1106  019F                     	;# 
  1107  019F                     	;# 
  1108  019F                     	;# 
  1109  019F                     	;# 
  1110  020C                     	;# 
  1111  020E                     	;# 
  1112  0211                     	;# 
  1113  0211                     	;# 
  1114  0212                     	;# 
  1115  0212                     	;# 
  1116  0213                     	;# 
  1117  0213                     	;# 
  1118  0214                     	;# 
  1119  0214                     	;# 
  1120  0215                     	;# 
  1121  0215                     	;# 
  1122  0215                     	;# 
  1123  0215                     	;# 
  1124  0216                     	;# 
  1125  0216                     	;# 
  1126  0217                     	;# 
  1127  0217                     	;# 
  1128  028C                     	;# 
  1129  028E                     	;# 
  1130  0291                     	;# 
  1131  0291                     	;# 
  1132  0292                     	;# 
  1133  0293                     	;# 
  1134  0293                     	;# 
  1135  0298                     	;# 
  1136  0298                     	;# 
  1137  0299                     	;# 
  1138  029A                     	;# 
  1139  029A                     	;# 
  1140  029E                     	;# 
  1141  030C                     	;# 
  1142  030E                     	;# 
  1143  038C                     	;# 
  1144  038E                     	;# 
  1145  0391                     	;# 
  1146  0392                     	;# 
  1147  0393                     	;# 
  1148  0397                     	;# 
  1149  0398                     	;# 
  1150  0399                     	;# 
  1151  0415                     	;# 
  1152  0416                     	;# 
  1153  0417                     	;# 
  1154  041C                     	;# 
  1155  041D                     	;# 
  1156  041E                     	;# 
  1157  0511                     	;# 
  1158  0515                     	;# 
  1159  0617                     	;# 
  1160  0618                     	;# 
  1161  0619                     	;# 
  1162  0619                     	;# 
  1163  061A                     	;# 
  1164  061B                     	;# 
  1165  061C                     	;# 
  1166  061C                     	;# 
  1167  0691                     	;# 
  1168  0692                     	;# 
  1169  0693                     	;# 
  1170  0694                     	;# 
  1171  0695                     	;# 
  1172  0696                     	;# 
  1173  0697                     	;# 
  1174  0698                     	;# 
  1175  0699                     	;# 
  1176  069A                     	;# 
  1177  069B                     	;# 
  1178  069C                     	;# 
  1179  069D                     	;# 
  1180  069E                     	;# 
  1181  069F                     	;# 
  1182  0E0F                     	;# 
  1183  0E10                     	;# 
  1184  0E11                     	;# 
  1185  0E12                     	;# 
  1186  0E13                     	;# 
  1187  0E14                     	;# 
  1188  0E15                     	;# 
  1189  0E17                     	;# 
  1190  0E20                     	;# 
  1191  0E21                     	;# 
  1192  0E22                     	;# 
  1193  0E24                     	;# 
  1194  0E25                     	;# 
  1195  0E28                     	;# 
  1196  0E29                     	;# 
  1197  0E2A                     	;# 
  1198  0E2B                     	;# 
  1199  0E90                     	;# 
  1200  0E91                     	;# 
  1201  0E92                     	;# 
  1202  0E94                     	;# 
  1203  0E95                     	;# 
  1204  0EA0                     	;# 
  1205  0EA1                     	;# 
  1206  0EA2                     	;# 
  1207  0EA3                     	;# 
  1208  0EA4                     	;# 
  1209  0EA5                     	;# 
  1210  0F0F                     	;# 
  1211  0F10                     	;# 
  1212  0F11                     	;# 
  1213  0F12                     	;# 
  1214  0F13                     	;# 
  1215  0F14                     	;# 
  1216  0F15                     	;# 
  1217  0F16                     	;# 
  1218  0F17                     	;# 
  1219  0F18                     	;# 
  1220  0F19                     	;# 
  1221  0F1A                     	;# 
  1222  0F1B                     	;# 
  1223  0F1C                     	;# 
  1224  0F1D                     	;# 
  1225  0F1E                     	;# 
  1226  0F1F                     	;# 
  1227  0F20                     	;# 
  1228  0F21                     	;# 
  1229  0F22                     	;# 
  1230  0F23                     	;# 
  1231  0F24                     	;# 
  1232  0F25                     	;# 
  1233  0F26                     	;# 
  1234  0F27                     	;# 
  1235  0F28                     	;# 
  1236  0F29                     	;# 
  1237  0F2A                     	;# 
  1238  0F2B                     	;# 
  1239  0F2C                     	;# 
  1240  0F2D                     	;# 
  1241  0F9E                     	;# 
  1242  0FE4                     	;# 
  1243  0FE5                     	;# 
  1244  0FE6                     	;# 
  1245  0FE7                     	;# 
  1246  0FE8                     	;# 
  1247  0FE9                     	;# 
  1248  0FEA                     	;# 
  1249  0FEB                     	;# 
  1250  0FED                     	;# 
  1251  0FEE                     	;# 
  1252  0FEF                     	;# 
  1253  0000                     	;# 
  1254  0001                     	;# 
  1255  0002                     	;# 
  1256  0003                     	;# 
  1257  0004                     	;# 
  1258  0005                     	;# 
  1259  0006                     	;# 
  1260  0007                     	;# 
  1261  0008                     	;# 
  1262  0009                     	;# 
  1263  000A                     	;# 
  1264  000B                     	;# 
  1265  000C                     	;# 
  1266  000E                     	;# 
  1267  0011                     	;# 
  1268  0012                     	;# 
  1269  0013                     	;# 
  1270  0015                     	;# 
  1271  0016                     	;# 
  1272  0016                     	;# 
  1273  0017                     	;# 
  1274  0018                     	;# 
  1275  0019                     	;# 
  1276  001A                     	;# 
  1277  001B                     	;# 
  1278  001C                     	;# 
  1279  008C                     	;# 
  1280  008E                     	;# 
  1281  0091                     	;# 
  1282  0092                     	;# 
  1283  0093                     	;# 
  1284  0095                     	;# 
  1285  0096                     	;# 
  1286  0097                     	;# 
  1287  0098                     	;# 
  1288  0099                     	;# 
  1289  009A                     	;# 
  1290  009B                     	;# 
  1291  009B                     	;# 
  1292  009C                     	;# 
  1293  009D                     	;# 
  1294  009E                     	;# 
  1295  009F                     	;# 
  1296  010C                     	;# 
  1297  010E                     	;# 
  1298  0111                     	;# 
  1299  0112                     	;# 
  1300  0113                     	;# 
  1301  0114                     	;# 
  1302  0115                     	;# 
  1303  0116                     	;# 
  1304  0117                     	;# 
  1305  0118                     	;# 
  1306  0119                     	;# 
  1307  011C                     	;# 
  1308  018C                     	;# 
  1309  018E                     	;# 
  1310  0191                     	;# 
  1311  0191                     	;# 
  1312  0192                     	;# 
  1313  0193                     	;# 
  1314  0193                     	;# 
  1315  0194                     	;# 
  1316  0195                     	;# 
  1317  0196                     	;# 
  1318  0197                     	;# 
  1319  0199                     	;# 
  1320  0199                     	;# 
  1321  0199                     	;# 
  1322  019A                     	;# 
  1323  019A                     	;# 
  1324  019A                     	;# 
  1325  019B                     	;# 
  1326  019B                     	;# 
  1327  019B                     	;# 
  1328  019B                     	;# 
  1329  019B                     	;# 
  1330  019C                     	;# 
  1331  019C                     	;# 
  1332  019C                     	;# 
  1333  019D                     	;# 
  1334  019D                     	;# 
  1335  019D                     	;# 
  1336  019E                     	;# 
  1337  019E                     	;# 
  1338  019E                     	;# 
  1339  019F                     	;# 
  1340  019F                     	;# 
  1341  019F                     	;# 
  1342  019F                     	;# 
  1343  019F                     	;# 
  1344  020C                     	;# 
  1345  020E                     	;# 
  1346  0211                     	;# 
  1347  0211                     	;# 
  1348  0212                     	;# 
  1349  0212                     	;# 
  1350  0213                     	;# 
  1351  0213                     	;# 
  1352  0214                     	;# 
  1353  0214                     	;# 
  1354  0215                     	;# 
  1355  0215                     	;# 
  1356  0215                     	;# 
  1357  0215                     	;# 
  1358  0216                     	;# 
  1359  0216                     	;# 
  1360  0217                     	;# 
  1361  0217                     	;# 
  1362  028C                     	;# 
  1363  028E                     	;# 
  1364  0291                     	;# 
  1365  0291                     	;# 
  1366  0292                     	;# 
  1367  0293                     	;# 
  1368  0293                     	;# 
  1369  0298                     	;# 
  1370  0298                     	;# 
  1371  0299                     	;# 
  1372  029A                     	;# 
  1373  029A                     	;# 
  1374  029E                     	;# 
  1375  030C                     	;# 
  1376  030E                     	;# 
  1377  038C                     	;# 
  1378  038E                     	;# 
  1379  0391                     	;# 
  1380  0392                     	;# 
  1381  0393                     	;# 
  1382  0397                     	;# 
  1383  0398                     	;# 
  1384  0399                     	;# 
  1385  0415                     	;# 
  1386  0416                     	;# 
  1387  0417                     	;# 
  1388  041C                     	;# 
  1389  041D                     	;# 
  1390  041E                     	;# 
  1391  0511                     	;# 
  1392  0515                     	;# 
  1393  0617                     	;# 
  1394  0618                     	;# 
  1395  0619                     	;# 
  1396  0619                     	;# 
  1397  061A                     	;# 
  1398  061B                     	;# 
  1399  061C                     	;# 
  1400  061C                     	;# 
  1401  0691                     	;# 
  1402  0692                     	;# 
  1403  0693                     	;# 
  1404  0694                     	;# 
  1405  0695                     	;# 
  1406  0696                     	;# 
  1407  0697                     	;# 
  1408  0698                     	;# 
  1409  0699                     	;# 
  1410  069A                     	;# 
  1411  069B                     	;# 
  1412  069C                     	;# 
  1413  069D                     	;# 
  1414  069E                     	;# 
  1415  069F                     	;# 
  1416  0E0F                     	;# 
  1417  0E10                     	;# 
  1418  0E11                     	;# 
  1419  0E12                     	;# 
  1420  0E13                     	;# 
  1421  0E14                     	;# 
  1422  0E15                     	;# 
  1423  0E17                     	;# 
  1424  0E20                     	;# 
  1425  0E21                     	;# 
  1426  0E22                     	;# 
  1427  0E24                     	;# 
  1428  0E25                     	;# 
  1429  0E28                     	;# 
  1430  0E29                     	;# 
  1431  0E2A                     	;# 
  1432  0E2B                     	;# 
  1433  0E90                     	;# 
  1434  0E91                     	;# 
  1435  0E92                     	;# 
  1436  0E94                     	;# 
  1437  0E95                     	;# 
  1438  0EA0                     	;# 
  1439  0EA1                     	;# 
  1440  0EA2                     	;# 
  1441  0EA3                     	;# 
  1442  0EA4                     	;# 
  1443  0EA5                     	;# 
  1444  0F0F                     	;# 
  1445  0F10                     	;# 
  1446  0F11                     	;# 
  1447  0F12                     	;# 
  1448  0F13                     	;# 
  1449  0F14                     	;# 
  1450  0F15                     	;# 
  1451  0F16                     	;# 
  1452  0F17                     	;# 
  1453  0F18                     	;# 
  1454  0F19                     	;# 
  1455  0F1A                     	;# 
  1456  0F1B                     	;# 
  1457  0F1C                     	;# 
  1458  0F1D                     	;# 
  1459  0F1E                     	;# 
  1460  0F1F                     	;# 
  1461  0F20                     	;# 
  1462  0F21                     	;# 
  1463  0F22                     	;# 
  1464  0F23                     	;# 
  1465  0F24                     	;# 
  1466  0F25                     	;# 
  1467  0F26                     	;# 
  1468  0F27                     	;# 
  1469  0F28                     	;# 
  1470  0F29                     	;# 
  1471  0F2A                     	;# 
  1472  0F2B                     	;# 
  1473  0F2C                     	;# 
  1474  0F2D                     	;# 
  1475  0F9E                     	;# 
  1476  0FE4                     	;# 
  1477  0FE5                     	;# 
  1478  0FE6                     	;# 
  1479  0FE7                     	;# 
  1480  0FE8                     	;# 
  1481  0FE9                     	;# 
  1482  0FEA                     	;# 
  1483  0FEB                     	;# 
  1484  0FED                     	;# 
  1485  0FEE                     	;# 
  1486  0FEF                     	;# 
  1487  0000                     	;# 
  1488  0001                     	;# 
  1489  0002                     	;# 
  1490  0003                     	;# 
  1491  0004                     	;# 
  1492  0005                     	;# 
  1493  0006                     	;# 
  1494  0007                     	;# 
  1495  0008                     	;# 
  1496  0009                     	;# 
  1497  000A                     	;# 
  1498  000B                     	;# 
  1499  000C                     	;# 
  1500  000E                     	;# 
  1501  0011                     	;# 
  1502  0012                     	;# 
  1503  0013                     	;# 
  1504  0015                     	;# 
  1505  0016                     	;# 
  1506  0016                     	;# 
  1507  0017                     	;# 
  1508  0018                     	;# 
  1509  0019                     	;# 
  1510  001A                     	;# 
  1511  001B                     	;# 
  1512  001C                     	;# 
  1513  008C                     	;# 
  1514  008E                     	;# 
  1515  0091                     	;# 
  1516  0092                     	;# 
  1517  0093                     	;# 
  1518  0095                     	;# 
  1519  0096                     	;# 
  1520  0097                     	;# 
  1521  0098                     	;# 
  1522  0099                     	;# 
  1523  009A                     	;# 
  1524  009B                     	;# 
  1525  009B                     	;# 
  1526  009C                     	;# 
  1527  009D                     	;# 
  1528  009E                     	;# 
  1529  009F                     	;# 
  1530  010C                     	;# 
  1531  010E                     	;# 
  1532  0111                     	;# 
  1533  0112                     	;# 
  1534  0113                     	;# 
  1535  0114                     	;# 
  1536  0115                     	;# 
  1537  0116                     	;# 
  1538  0117                     	;# 
  1539  0118                     	;# 
  1540  0119                     	;# 
  1541  011C                     	;# 
  1542  018C                     	;# 
  1543  018E                     	;# 
  1544  0191                     	;# 
  1545  0191                     	;# 
  1546  0192                     	;# 
  1547  0193                     	;# 
  1548  0193                     	;# 
  1549  0194                     	;# 
  1550  0195                     	;# 
  1551  0196                     	;# 
  1552  0197                     	;# 
  1553  0199                     	;# 
  1554  0199                     	;# 
  1555  0199                     	;# 
  1556  019A                     	;# 
  1557  019A                     	;# 
  1558  019A                     	;# 
  1559  019B                     	;# 
  1560  019B                     	;# 
  1561  019B                     	;# 
  1562  019B                     	;# 
  1563  019B                     	;# 
  1564  019C                     	;# 
  1565  019C                     	;# 
  1566  019C                     	;# 
  1567  019D                     	;# 
  1568  019D                     	;# 
  1569  019D                     	;# 
  1570  019E                     	;# 
  1571  019E                     	;# 
  1572  019E                     	;# 
  1573  019F                     	;# 
  1574  019F                     	;# 
  1575  019F                     	;# 
  1576  019F                     	;# 
  1577  019F                     	;# 
  1578  020C                     	;# 
  1579  020E                     	;# 
  1580  0211                     	;# 
  1581  0211                     	;# 
  1582  0212                     	;# 
  1583  0212                     	;# 
  1584  0213                     	;# 
  1585  0213                     	;# 
  1586  0214                     	;# 
  1587  0214                     	;# 
  1588  0215                     	;# 
  1589  0215                     	;# 
  1590  0215                     	;# 
  1591  0215                     	;# 
  1592  0216                     	;# 
  1593  0216                     	;# 
  1594  0217                     	;# 
  1595  0217                     	;# 
  1596  028C                     	;# 
  1597  028E                     	;# 
  1598  0291                     	;# 
  1599  0291                     	;# 
  1600  0292                     	;# 
  1601  0293                     	;# 
  1602  0293                     	;# 
  1603  0298                     	;# 
  1604  0298                     	;# 
  1605  0299                     	;# 
  1606  029A                     	;# 
  1607  029A                     	;# 
  1608  029E                     	;# 
  1609  030C                     	;# 
  1610  030E                     	;# 
  1611  038C                     	;# 
  1612  038E                     	;# 
  1613  0391                     	;# 
  1614  0392                     	;# 
  1615  0393                     	;# 
  1616  0397                     	;# 
  1617  0398                     	;# 
  1618  0399                     	;# 
  1619  0415                     	;# 
  1620  0416                     	;# 
  1621  0417                     	;# 
  1622  041C                     	;# 
  1623  041D                     	;# 
  1624  041E                     	;# 
  1625  0511                     	;# 
  1626  0515                     	;# 
  1627  0617                     	;# 
  1628  0618                     	;# 
  1629  0619                     	;# 
  1630  0619                     	;# 
  1631  061A                     	;# 
  1632  061B                     	;# 
  1633  061C                     	;# 
  1634  061C                     	;# 
  1635  0691                     	;# 
  1636  0692                     	;# 
  1637  0693                     	;# 
  1638  0694                     	;# 
  1639  0695                     	;# 
  1640  0696                     	;# 
  1641  0697                     	;# 
  1642  0698                     	;# 
  1643  0699                     	;# 
  1644  069A                     	;# 
  1645  069B                     	;# 
  1646  069C                     	;# 
  1647  069D                     	;# 
  1648  069E                     	;# 
  1649  069F                     	;# 
  1650  0E0F                     	;# 
  1651  0E10                     	;# 
  1652  0E11                     	;# 
  1653  0E12                     	;# 
  1654  0E13                     	;# 
  1655  0E14                     	;# 
  1656  0E15                     	;# 
  1657  0E17                     	;# 
  1658  0E20                     	;# 
  1659  0E21                     	;# 
  1660  0E22                     	;# 
  1661  0E24                     	;# 
  1662  0E25                     	;# 
  1663  0E28                     	;# 
  1664  0E29                     	;# 
  1665  0E2A                     	;# 
  1666  0E2B                     	;# 
  1667  0E90                     	;# 
  1668  0E91                     	;# 
  1669  0E92                     	;# 
  1670  0E94                     	;# 
  1671  0E95                     	;# 
  1672  0EA0                     	;# 
  1673  0EA1                     	;# 
  1674  0EA2                     	;# 
  1675  0EA3                     	;# 
  1676  0EA4                     	;# 
  1677  0EA5                     	;# 
  1678  0F0F                     	;# 
  1679  0F10                     	;# 
  1680  0F11                     	;# 
  1681  0F12                     	;# 
  1682  0F13                     	;# 
  1683  0F14                     	;# 
  1684  0F15                     	;# 
  1685  0F16                     	;# 
  1686  0F17                     	;# 
  1687  0F18                     	;# 
  1688  0F19                     	;# 
  1689  0F1A                     	;# 
  1690  0F1B                     	;# 
  1691  0F1C                     	;# 
  1692  0F1D                     	;# 
  1693  0F1E                     	;# 
  1694  0F1F                     	;# 
  1695  0F20                     	;# 
  1696  0F21                     	;# 
  1697  0F22                     	;# 
  1698  0F23                     	;# 
  1699  0F24                     	;# 
  1700  0F25                     	;# 
  1701  0F26                     	;# 
  1702  0F27                     	;# 
  1703  0F28                     	;# 
  1704  0F29                     	;# 
  1705  0F2A                     	;# 
  1706  0F2B                     	;# 
  1707  0F2C                     	;# 
  1708  0F2D                     	;# 
  1709  0F9E                     	;# 
  1710  0FE4                     	;# 
  1711  0FE5                     	;# 
  1712  0FE6                     	;# 
  1713  0FE7                     	;# 
  1714  0FE8                     	;# 
  1715  0FE9                     	;# 
  1716  0FEA                     	;# 
  1717  0FEB                     	;# 
  1718  0FED                     	;# 
  1719  0FEE                     	;# 
  1720  0FEF                     	;# 
  1721  0000                     	;# 
  1722  0001                     	;# 
  1723  0002                     	;# 
  1724  0003                     	;# 
  1725  0004                     	;# 
  1726  0005                     	;# 
  1727  0006                     	;# 
  1728  0007                     	;# 
  1729  0008                     	;# 
  1730  0009                     	;# 
  1731  000A                     	;# 
  1732  000B                     	;# 
  1733  000C                     	;# 
  1734  000E                     	;# 
  1735  0011                     	;# 
  1736  0012                     	;# 
  1737  0013                     	;# 
  1738  0015                     	;# 
  1739  0016                     	;# 
  1740  0016                     	;# 
  1741  0017                     	;# 
  1742  0018                     	;# 
  1743  0019                     	;# 
  1744  001A                     	;# 
  1745  001B                     	;# 
  1746  001C                     	;# 
  1747  008C                     	;# 
  1748  008E                     	;# 
  1749  0091                     	;# 
  1750  0092                     	;# 
  1751  0093                     	;# 
  1752  0095                     	;# 
  1753  0096                     	;# 
  1754  0097                     	;# 
  1755  0098                     	;# 
  1756  0099                     	;# 
  1757  009A                     	;# 
  1758  009B                     	;# 
  1759  009B                     	;# 
  1760  009C                     	;# 
  1761  009D                     	;# 
  1762  009E                     	;# 
  1763  009F                     	;# 
  1764  010C                     	;# 
  1765  010E                     	;# 
  1766  0111                     	;# 
  1767  0112                     	;# 
  1768  0113                     	;# 
  1769  0114                     	;# 
  1770  0115                     	;# 
  1771  0116                     	;# 
  1772  0117                     	;# 
  1773  0118                     	;# 
  1774  0119                     	;# 
  1775  011C                     	;# 
  1776  018C                     	;# 
  1777  018E                     	;# 
  1778  0191                     	;# 
  1779  0191                     	;# 
  1780  0192                     	;# 
  1781  0193                     	;# 
  1782  0193                     	;# 
  1783  0194                     	;# 
  1784  0195                     	;# 
  1785  0196                     	;# 
  1786  0197                     	;# 
  1787  0199                     	;# 
  1788  0199                     	;# 
  1789  0199                     	;# 
  1790  019A                     	;# 
  1791  019A                     	;# 
  1792  019A                     	;# 
  1793  019B                     	;# 
  1794  019B                     	;# 
  1795  019B                     	;# 
  1796  019B                     	;# 
  1797  019B                     	;# 
  1798  019C                     	;# 
  1799  019C                     	;# 
  1800  019C                     	;# 
  1801  019D                     	;# 
  1802  019D                     	;# 
  1803  019D                     	;# 
  1804  019E                     	;# 
  1805  019E                     	;# 
  1806  019E                     	;# 
  1807  019F                     	;# 
  1808  019F                     	;# 
  1809  019F                     	;# 
  1810  019F                     	;# 
  1811  019F                     	;# 
  1812  020C                     	;# 
  1813  020E                     	;# 
  1814  0211                     	;# 
  1815  0211                     	;# 
  1816  0212                     	;# 
  1817  0212                     	;# 
  1818  0213                     	;# 
  1819  0213                     	;# 
  1820  0214                     	;# 
  1821  0214                     	;# 
  1822  0215                     	;# 
  1823  0215                     	;# 
  1824  0215                     	;# 
  1825  0215                     	;# 
  1826  0216                     	;# 
  1827  0216                     	;# 
  1828  0217                     	;# 
  1829  0217                     	;# 
  1830  028C                     	;# 
  1831  028E                     	;# 
  1832  0291                     	;# 
  1833  0291                     	;# 
  1834  0292                     	;# 
  1835  0293                     	;# 
  1836  0293                     	;# 
  1837  0298                     	;# 
  1838  0298                     	;# 
  1839  0299                     	;# 
  1840  029A                     	;# 
  1841  029A                     	;# 
  1842  029E                     	;# 
  1843  030C                     	;# 
  1844  030E                     	;# 
  1845  038C                     	;# 
  1846  038E                     	;# 
  1847  0391                     	;# 
  1848  0392                     	;# 
  1849  0393                     	;# 
  1850  0397                     	;# 
  1851  0398                     	;# 
  1852  0399                     	;# 
  1853  0415                     	;# 
  1854  0416                     	;# 
  1855  0417                     	;# 
  1856  041C                     	;# 
  1857  041D                     	;# 
  1858  041E                     	;# 
  1859  0511                     	;# 
  1860  0515                     	;# 
  1861  0617                     	;# 
  1862  0618                     	;# 
  1863  0619                     	;# 
  1864  0619                     	;# 
  1865  061A                     	;# 
  1866  061B                     	;# 
  1867  061C                     	;# 
  1868  061C                     	;# 
  1869  0691                     	;# 
  1870  0692                     	;# 
  1871  0693                     	;# 
  1872  0694                     	;# 
  1873  0695                     	;# 
  1874  0696                     	;# 
  1875  0697                     	;# 
  1876  0698                     	;# 
  1877  0699                     	;# 
  1878  069A                     	;# 
  1879  069B                     	;# 
  1880  069C                     	;# 
  1881  069D                     	;# 
  1882  069E                     	;# 
  1883  069F                     	;# 
  1884  0E0F                     	;# 
  1885  0E10                     	;# 
  1886  0E11                     	;# 
  1887  0E12                     	;# 
  1888  0E13                     	;# 
  1889  0E14                     	;# 
  1890  0E15                     	;# 
  1891  0E17                     	;# 
  1892  0E20                     	;# 
  1893  0E21                     	;# 
  1894  0E22                     	;# 
  1895  0E24                     	;# 
  1896  0E25                     	;# 
  1897  0E28                     	;# 
  1898  0E29                     	;# 
  1899  0E2A                     	;# 
  1900  0E2B                     	;# 
  1901  0E90                     	;# 
  1902  0E91                     	;# 
  1903  0E92                     	;# 
  1904  0E94                     	;# 
  1905  0E95                     	;# 
  1906  0EA0                     	;# 
  1907  0EA1                     	;# 
  1908  0EA2                     	;# 
  1909  0EA3                     	;# 
  1910  0EA4                     	;# 
  1911  0EA5                     	;# 
  1912  0F0F                     	;# 
  1913  0F10                     	;# 
  1914  0F11                     	;# 
  1915  0F12                     	;# 
  1916  0F13                     	;# 
  1917  0F14                     	;# 
  1918  0F15                     	;# 
  1919  0F16                     	;# 
  1920  0F17                     	;# 
  1921  0F18                     	;# 
  1922  0F19                     	;# 
  1923  0F1A                     	;# 
  1924  0F1B                     	;# 
  1925  0F1C                     	;# 
  1926  0F1D                     	;# 
  1927  0F1E                     	;# 
  1928  0F1F                     	;# 
  1929  0F20                     	;# 
  1930  0F21                     	;# 
  1931  0F22                     	;# 
  1932  0F23                     	;# 
  1933  0F24                     	;# 
  1934  0F25                     	;# 
  1935  0F26                     	;# 
  1936  0F27                     	;# 
  1937  0F28                     	;# 
  1938  0F29                     	;# 
  1939  0F2A                     	;# 
  1940  0F2B                     	;# 
  1941  0F2C                     	;# 
  1942  0F2D                     	;# 
  1943  0F9E                     	;# 
  1944  0FE4                     	;# 
  1945  0FE5                     	;# 
  1946  0FE6                     	;# 
  1947  0FE7                     	;# 
  1948  0FE8                     	;# 
  1949  0FE9                     	;# 
  1950  0FEA                     	;# 
  1951  0FEB                     	;# 
  1952  0FED                     	;# 
  1953  0FEE                     	;# 
  1954  0FEF                     	;# 
  1955                           
  1956                           	psect	stringtext1
  1957  0316                     __pstringtext1:
  1958  0316                     _dpowers:
  1959  0316  3401               	retlw	1
  1960  0317  3400               	retlw	0
  1961  0318  340A               	retlw	10
  1962  0319  3400               	retlw	0
  1963  031A  3464               	retlw	100
  1964  031B  3400               	retlw	0
  1965  031C  34E8               	retlw	232
  1966  031D  3403               	retlw	3
  1967  031E  3410               	retlw	16
  1968  031F  3427               	retlw	39
  1969  0320                     __end_of_dpowers:
  1970                           
  1971                           	psect	nvBANK0
  1972  0055                     __pnvBANK0:
  1973  0055                     _EUSART_ErrorHandler:
  1974  0055                     	ds	2
  1975  0057                     _EUSART_OverrunErrorHandler:
  1976  0057                     	ds	2
  1977  0059                     _EUSART_FramingErrorHandler:
  1978  0059                     	ds	2
  1979  005B                     _EUSART_RxDefaultInterruptHandler:
  1980  005B                     	ds	2
  1981  005D                     _EUSART_TxDefaultInterruptHandler:
  1982  005D                     	ds	2
  1983  005F                     _TMR2_InterruptHandler:
  1984  005F                     	ds	2
  1985  0061                     _eusartTxBufferRemaining:
  1986  0061                     	ds	1
  1987  000B                     _INTCONbits	set	11
  1988  001C                     _T2CONbits	set	28
  1989  001C                     _T2CON	set	28
  1990  0011                     _PIR1bits	set	17
  1991  001A                     _TMR2	set	26
  1992  001B                     _PR2	set	27
  1993  009D                     _ADCON0bits	set	157
  1994  009D                     _ADCON0	set	157
  1995  009C                     _ADRESH	set	156
  1996  009B                     _ADRESL	set	155
  1997  009F                     _ADCON2	set	159
  1998  009E                     _ADCON1	set	158
  1999  0097                     _WDTCON	set	151
  2000  0098                     _OSCTUNE	set	152
  2001  009A                     _OSCSTAT	set	154
  2002  0099                     _OSCCON	set	153
  2003  0091                     _PIE1bits	set	145
  2004  0095                     _OPTION_REGbits	set	149
  2005  008E                     _TRISC	set	142
  2006  008C                     _TRISA	set	140
  2007  0116                     _BORCON	set	278
  2008  010E                     _LATC	set	270
  2009  010C                     _LATA	set	268
  2010  019D                     _RCSTAbits	set	413
  2011  019E                     _TXSTAbits	set	414
  2012  0199                     _RC1REG	set	409
  2013  019D                     _RC1STAbits	set	413
  2014  019A                     _TX1REG	set	410
  2015  019E                     _TX1STAbits	set	414
  2016  019C                     _SP1BRGH	set	412
  2017  019B                     _SP1BRGL	set	411
  2018  019E                     _TX1STA	set	414
  2019  019D                     _RC1STA	set	413
  2020  019F                     _BAUD1CON	set	415
  2021  018C                     _ANSELA	set	396
  2022  018E                     _ANSELC	set	398
  2023  020E                     _WPUC	set	526
  2024  020C                     _WPUA	set	524
  2025  029E                     _CCPTMRSbits	set	670
  2026  0292                     _CCPR1H	set	658
  2027  0291                     _CCPR1L	set	657
  2028  0293                     _CCP1CON	set	659
  2029  028E                     _ODCONC	set	654
  2030  028C                     _ODCONA	set	652
  2031  030E                     _SLRCONC	set	782
  2032  030C                     _SLRCONA	set	780
  2033  038E                     _INLVLC	set	910
  2034  038C                     _INLVLA	set	908
  2035  0E24                     _RXPPS	set	3620
  2036  0EA4                     _RC4PPS	set	3748
  2037  0EA1                     _RC1PPS	set	3745
  2038                           
  2039                           	psect	stringtext2
  2040  0377                     __pstringtext2:
  2041  0377                     STR_1:
  2042  0377  3425               	retlw	37	;'%'
  2043  0378  3464               	retlw	100	;'d'
  2044  0379  340D               	retlw	13
  2045  037A  340A               	retlw	10
  2046  037B  3400               	retlw	0
  2047                           
  2048                           	psect	stringtext3
  2049  0000                     __pstringtext3:
  2050                           
  2051                           	psect	cinit
  2052  003C                     start_initialization:	
  2053                           ; #config settings
  2054                           
  2055  003C                     __initialization:
  2056                           
  2057                           ; Clear objects allocated to BANK0
  2058  003C  3020               	movlw	low __pbssBANK0
  2059  003D  0084               	movwf	4
  2060  003E  3000               	movlw	high __pbssBANK0
  2061  003F  0085               	movwf	5
  2062  0040  3024               	movlw	36
  2063  0041  3183  2341  3180   	fcall	clear_ram0
  2064  0044                     end_of_initialization:	
  2065                           ;End of C runtime variable initialization code
  2066                           
  2067  0044                     __end_of__initialization:
  2068  0044  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2069  0045  0020               	movlb	0
  2070  0046  3183  2B0B         	ljmp	_main	;jump to C main() function
  2071                           
  2072                           	psect	bssBANK0
  2073  0020                     __pbssBANK0:
  2074  0020                     _eusartRxStatusBuffer:
  2075  0020                     	ds	8
  2076  0028                     _eusartRxBuffer:
  2077  0028                     	ds	8
  2078  0030                     _eusartTxBuffer:
  2079  0030                     	ds	8
  2080  0038                     _ADC_InterruptHandler:
  2081  0038                     	ds	2
  2082  003A                     _val:
  2083  003A                     	ds	2
  2084  003C                     _cnt:
  2085  003C                     	ds	2
  2086  003E                     _eusartRxLastError:
  2087  003E                     	ds	1
  2088  003F                     _eusartRxCount:
  2089  003F                     	ds	1
  2090  0040                     _eusartRxTail:
  2091  0040                     	ds	1
  2092  0041                     _eusartRxHead:
  2093  0041                     	ds	1
  2094  0042                     _eusartTxTail:
  2095  0042                     	ds	1
  2096  0043                     _eusartTxHead:
  2097  0043                     	ds	1
  2098                           
  2099                           	psect	clrtext
  2100  0341                     clear_ram0:	
  2101                           ;	Called with FSR0 containing the base address, and
  2102                           ;	WREG with the size to clear
  2103                           
  2104  0341  0064               	clrwdt	;clear the watchdog before getting into this loop
  2105  0342                     clrloop0:
  2106  0342  0180               	clrf	0	;clear RAM location pointed to by FSR
  2107  0343  3101               	addfsr 0,1
  2108  0344  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2109  0345  2B42               	goto	clrloop0	;have we reached the end yet?
  2110  0346  3400               	retlw	0	;all done for this memory range, return
  2111                           
  2112                           	psect	cstackCOMMON
  2113  0070                     __pcstackCOMMON:
  2114  0070                     ?_TMR2_DefaultInterruptHandler:
  2115  0070                     ?_ADC_Initialize:	
  2116                           ; 1 bytes @ 0x0
  2117                           
  2118  0070                     ?_ADC_StartConversion:	
  2119                           ; 1 bytes @ 0x0
  2120                           
  2121  0070                     ?_TMR2_CallBack:	
  2122                           ; 1 bytes @ 0x0
  2123                           
  2124  0070                     ?_ADC_IsConversionDone:	
  2125                           ; 1 bytes @ 0x0
  2126                           
  2127  0070                     ??_ADC_IsConversionDone:	
  2128                           ; 1 bytes @ 0x0
  2129                           
  2130  0070                     ?_OSCILLATOR_Initialize:	
  2131                           ; 1 bytes @ 0x0
  2132                           
  2133  0070                     ?_WDT_Initialize:	
  2134                           ; 1 bytes @ 0x0
  2135                           
  2136  0070                     ?_EUSART_Initialize:	
  2137                           ; 1 bytes @ 0x0
  2138                           
  2139  0070                     ?_EUSART_Receive_ISR:	
  2140                           ; 1 bytes @ 0x0
  2141                           
  2142  0070                     ?_EUSART_Transmit_ISR:	
  2143                           ; 1 bytes @ 0x0
  2144                           
  2145  0070                     ??_EUSART_Transmit_ISR:	
  2146                           ; 1 bytes @ 0x0
  2147                           
  2148  0070                     ?_EUSART_DefaultFramingErrorHandler:	
  2149                           ; 1 bytes @ 0x0
  2150                           
  2151  0070                     ??_EUSART_DefaultFramingErrorHandler:	
  2152                           ; 1 bytes @ 0x0
  2153                           
  2154  0070                     ?_EUSART_DefaultOverrunErrorHandler:	
  2155                           ; 1 bytes @ 0x0
  2156                           
  2157  0070                     ??_EUSART_DefaultOverrunErrorHandler:	
  2158                           ; 1 bytes @ 0x0
  2159                           
  2160  0070                     ?_EUSART_DefaultErrorHandler:	
  2161                           ; 1 bytes @ 0x0
  2162                           
  2163  0070                     ?_EUSART_RxDataHandler:	
  2164                           ; 1 bytes @ 0x0
  2165                           
  2166  0070                     ??_EUSART_RxDataHandler:	
  2167                           ; 1 bytes @ 0x0
  2168                           
  2169  0070                     ?_PIN_MANAGER_Initialize:	
  2170                           ; 1 bytes @ 0x0
  2171                           
  2172  0070                     ?_PWM1_Initialize:	
  2173                           ; 1 bytes @ 0x0
  2174                           
  2175  0070                     ?_TMR2_Initialize:	
  2176                           ; 1 bytes @ 0x0
  2177                           
  2178  0070                     ?_TMR2_ISR:	
  2179                           ; 1 bytes @ 0x0
  2180                           
  2181  0070                     ?_SYSTEM_Initialize:	
  2182                           ; 1 bytes @ 0x0
  2183                           
  2184  0070                     ?_EUSART_Write:	
  2185                           ; 1 bytes @ 0x0
  2186                           
  2187  0070                     ??_EUSART_Write:	
  2188                           ; 1 bytes @ 0x0
  2189                           
  2190  0070                     ?_putch:	
  2191                           ; 1 bytes @ 0x0
  2192                           
  2193  0070                     ?_INTERRUPT_InterruptManager:	
  2194                           ; 1 bytes @ 0x0
  2195                           
  2196  0070                     ?_main:	
  2197                           ; 1 bytes @ 0x0
  2198                           
  2199  0070                     ?_ADC_GetConversion:	
  2200                           ; 1 bytes @ 0x0
  2201                           
  2202  0070                     ?___lwdiv:	
  2203                           ; 2 bytes @ 0x0
  2204                           
  2205  0070                     ___lwdiv@divisor:	
  2206                           ; 2 bytes @ 0x0
  2207                           
  2208                           
  2209                           ; 2 bytes @ 0x0
  2210  0070                     	ds	1
  2211  0071                     ??_EUSART_Receive_ISR:
  2212  0071                     ??_EUSART_DefaultErrorHandler:	
  2213                           ; 1 bytes @ 0x1
  2214                           
  2215  0071                     EUSART_Write@txData:	
  2216                           ; 1 bytes @ 0x1
  2217                           
  2218                           
  2219                           ; 1 bytes @ 0x1
  2220  0071                     	ds	1
  2221  0072                     ??_ADC_GetConversion:
  2222  0072                     ??_putch:	
  2223                           ; 1 bytes @ 0x2
  2224                           
  2225  0072                     putch@txData:	
  2226                           ; 1 bytes @ 0x2
  2227                           
  2228  0072                     ___lwdiv@dividend:	
  2229                           ; 1 bytes @ 0x2
  2230                           
  2231                           
  2232                           ; 2 bytes @ 0x2
  2233  0072                     	ds	1
  2234  0073                     ADC_GetConversion@channel:
  2235                           
  2236                           ; 1 bytes @ 0x3
  2237  0073                     	ds	1
  2238  0074                     ??___lwdiv:
  2239                           
  2240                           ; 1 bytes @ 0x4
  2241  0074                     	ds	1
  2242  0075                     ___lwdiv@quotient:
  2243                           
  2244                           ; 2 bytes @ 0x5
  2245  0075                     	ds	2
  2246  0077                     ___lwdiv@counter:
  2247                           
  2248                           ; 1 bytes @ 0x7
  2249  0077                     	ds	1
  2250  0078                     ?___lwmod:
  2251  0078                     ___lwmod@divisor:	
  2252                           ; 2 bytes @ 0x8
  2253                           
  2254                           
  2255                           ; 2 bytes @ 0x8
  2256  0078                     	ds	2
  2257  007A                     ___lwmod@dividend:
  2258                           
  2259                           ; 2 bytes @ 0xA
  2260  007A                     	ds	2
  2261  007C                     ??___lwmod:
  2262                           
  2263                           ; 1 bytes @ 0xC
  2264  007C                     	ds	1
  2265  007D                     ___lwmod@counter:
  2266                           
  2267                           ; 1 bytes @ 0xD
  2268  007D                     	ds	1
  2269  007E                     ??_TMR2_DefaultInterruptHandler:
  2270  007E                     ??_TMR2_CallBack:	
  2271                           ; 1 bytes @ 0xE
  2272                           
  2273  007E                     ??_TMR2_ISR:	
  2274                           ; 1 bytes @ 0xE
  2275                           
  2276  007E                     ??_INTERRUPT_InterruptManager:	
  2277                           ; 1 bytes @ 0xE
  2278                           
  2279                           
  2280                           	psect	cstackBANK0
  2281  0044                     __pcstackBANK0:	
  2282                           ; 1 bytes @ 0xE
  2283                           
  2284  0044                     ?_printf:
  2285  0044                     printf@f:	
  2286                           ; 2 bytes @ 0x0
  2287                           
  2288                           
  2289                           ; 2 bytes @ 0x0
  2290  0044                     	ds	4
  2291  0048                     ??_printf:
  2292                           
  2293                           ; 1 bytes @ 0x4
  2294  0048                     	ds	4
  2295  004C                     printf@ap:
  2296                           
  2297                           ; 1 bytes @ 0x8
  2298  004C                     	ds	1
  2299  004D                     printf@flag:
  2300                           
  2301                           ; 1 bytes @ 0x9
  2302  004D                     	ds	1
  2303  004E                     printf@prec:
  2304                           
  2305                           ; 1 bytes @ 0xA
  2306  004E                     	ds	1
  2307  004F                     printf@val:
  2308                           
  2309                           ; 2 bytes @ 0xB
  2310  004F                     	ds	2
  2311  0051                     printf@c:
  2312                           
  2313                           ; 1 bytes @ 0xD
  2314  0051                     	ds	1
  2315  0052                     ?_TMR2_SetInterruptHandler:
  2316  0052                     ??_ADC_Initialize:	
  2317                           ; 1 bytes @ 0xE
  2318                           
  2319  0052                     ??_ADC_StartConversion:	
  2320                           ; 1 bytes @ 0xE
  2321                           
  2322  0052                     ??_OSCILLATOR_Initialize:	
  2323                           ; 1 bytes @ 0xE
  2324                           
  2325  0052                     ??_WDT_Initialize:	
  2326                           ; 1 bytes @ 0xE
  2327                           
  2328  0052                     ?_EUSART_SetRxInterruptHandler:	
  2329                           ; 1 bytes @ 0xE
  2330                           
  2331  0052                     ?_EUSART_SetTxInterruptHandler:	
  2332                           ; 1 bytes @ 0xE
  2333                           
  2334  0052                     ?_EUSART_SetFramingErrorHandler:	
  2335                           ; 1 bytes @ 0xE
  2336                           
  2337  0052                     ?_EUSART_SetOverrunErrorHandler:	
  2338                           ; 1 bytes @ 0xE
  2339                           
  2340  0052                     ?_EUSART_SetErrorHandler:	
  2341                           ; 1 bytes @ 0xE
  2342                           
  2343  0052                     ??_PIN_MANAGER_Initialize:	
  2344                           ; 1 bytes @ 0xE
  2345                           
  2346  0052                     ??_PWM1_Initialize:	
  2347                           ; 1 bytes @ 0xE
  2348                           
  2349  0052                     TMR2_SetInterruptHandler@InterruptHandler:	
  2350                           ; 1 bytes @ 0xE
  2351                           
  2352  0052                     EUSART_SetFramingErrorHandler@interruptHandler:	
  2353                           ; 2 bytes @ 0xE
  2354                           
  2355  0052                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  2356                           ; 2 bytes @ 0xE
  2357                           
  2358  0052                     EUSART_SetErrorHandler@interruptHandler:	
  2359                           ; 2 bytes @ 0xE
  2360                           
  2361  0052                     EUSART_SetTxInterruptHandler@interruptHandler:	
  2362                           ; 2 bytes @ 0xE
  2363                           
  2364  0052                     EUSART_SetRxInterruptHandler@interruptHandler:	
  2365                           ; 2 bytes @ 0xE
  2366                           
  2367                           
  2368                           ; 2 bytes @ 0xE
  2369  0052                     	ds	2
  2370  0054                     ??_TMR2_SetInterruptHandler:
  2371  0054                     ??_EUSART_Initialize:	
  2372                           ; 1 bytes @ 0x10
  2373                           
  2374  0054                     ??_EUSART_SetRxInterruptHandler:	
  2375                           ; 1 bytes @ 0x10
  2376                           
  2377  0054                     ??_EUSART_SetTxInterruptHandler:	
  2378                           ; 1 bytes @ 0x10
  2379                           
  2380  0054                     ??_EUSART_SetFramingErrorHandler:	
  2381                           ; 1 bytes @ 0x10
  2382                           
  2383  0054                     ??_EUSART_SetOverrunErrorHandler:	
  2384                           ; 1 bytes @ 0x10
  2385                           
  2386  0054                     ??_EUSART_SetErrorHandler:	
  2387                           ; 1 bytes @ 0x10
  2388                           
  2389  0054                     ??_TMR2_Initialize:	
  2390                           ; 1 bytes @ 0x10
  2391                           
  2392                           
  2393                           ; 1 bytes @ 0x10
  2394  0054                     	ds	1
  2395  0055                     ??_SYSTEM_Initialize:
  2396  0055                     ??_main:	
  2397                           ; 1 bytes @ 0x11
  2398                           
  2399                           
  2400                           	psect	maintext
  2401  030B                     __pmaintext:	
  2402                           ; 1 bytes @ 0x11
  2403 ;;
  2404 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2405 ;;
  2406 ;; *************** function _main *****************
  2407 ;; Defined at:
  2408 ;;		line 52 in file "main.c"
  2409 ;; Parameters:    Size  Location     Type
  2410 ;;		None
  2411 ;; Auto vars:     Size  Location     Type
  2412 ;;		None
  2413 ;; Return value:  Size  Location     Type
  2414 ;;                  1    wreg      void 
  2415 ;; Registers used:
  2416 ;;		wreg, status,2, status,0, pclath, cstack
  2417 ;; Tracked objects:
  2418 ;;		On entry : B1F/0
  2419 ;;		On exit  : 0/0
  2420 ;;		Unchanged: 0/0
  2421 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2422 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2423 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2424 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2425 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2426 ;;Total ram usage:        0 bytes
  2427 ;; Hardware stack levels required when called:   10
  2428 ;; This function calls:
  2429 ;;		_SYSTEM_Initialize
  2430 ;; This function is called by:
  2431 ;;		Startup code after reset
  2432 ;; This function uses a non-reentrant model
  2433 ;;
  2434                           
  2435                           
  2436                           ;psect for function _main
  2437  030B                     _main:
  2438  030B                     l1757:	
  2439                           ;incstack = 0
  2440                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
  2441                           
  2442                           
  2443                           ;main.c: 54: TXSTAbits.TXEN = 1;
  2444  030B  0023               	movlb	3	; select bank3
  2445  030C  169E               	bsf	30,5	;volatile
  2446                           
  2447                           ;main.c: 55: RCSTAbits.SPEN = 1;
  2448  030D  179D               	bsf	29,7	;volatile
  2449  030E                     l1759:
  2450                           
  2451                           ;main.c: 58: SYSTEM_Initialize();
  2452  030E  3182  22E8  3183   	fcall	_SYSTEM_Initialize
  2453  0311                     l1761:
  2454                           
  2455                           ;main.c: 65: (INTCONbits.GIE = 1);
  2456  0311  178B               	bsf	11,7	;volatile
  2457  0312                     l1763:
  2458                           
  2459                           ;main.c: 68: (INTCONbits.PEIE = 1);
  2460  0312  170B               	bsf	11,6	;volatile
  2461  0313                     l384:	
  2462                           ;main.c: 76: while (1)
  2463                           
  2464  0313                     l385:	
  2465                           ;main.c: 77: {
  2466                           
  2467  0313  2B13               	goto	l384
  2468  0314  3180  283A         	ljmp	start
  2469  0316                     __end_of_main:
  2470                           
  2471                           	psect	text1
  2472  02E8                     __ptext1:	
  2473 ;; *************** function _SYSTEM_Initialize *****************
  2474 ;; Defined at:
  2475 ;;		line 50 in file "mcc_generated_files/mcc.c"
  2476 ;; Parameters:    Size  Location     Type
  2477 ;;		None
  2478 ;; Auto vars:     Size  Location     Type
  2479 ;;		None
  2480 ;; Return value:  Size  Location     Type
  2481 ;;                  1    wreg      void 
  2482 ;; Registers used:
  2483 ;;		wreg, status,2, status,0, pclath, cstack
  2484 ;; Tracked objects:
  2485 ;;		On entry : 0/0
  2486 ;;		On exit  : 0/0
  2487 ;;		Unchanged: 0/0
  2488 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2489 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2490 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2491 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2492 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2493 ;;Total ram usage:        0 bytes
  2494 ;; Hardware stack levels used:    1
  2495 ;; Hardware stack levels required when called:    9
  2496 ;; This function calls:
  2497 ;;		_ADC_Initialize
  2498 ;;		_EUSART_Initialize
  2499 ;;		_OSCILLATOR_Initialize
  2500 ;;		_PIN_MANAGER_Initialize
  2501 ;;		_PWM1_Initialize
  2502 ;;		_TMR2_Initialize
  2503 ;;		_WDT_Initialize
  2504 ;; This function is called by:
  2505 ;;		_main
  2506 ;; This function uses a non-reentrant model
  2507 ;;
  2508                           
  2509                           
  2510                           ;psect for function _SYSTEM_Initialize
  2511  02E8                     _SYSTEM_Initialize:
  2512  02E8                     l1681:	
  2513                           ;incstack = 0
  2514                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2515                           
  2516                           
  2517                           ;mcc.c: 53: PIN_MANAGER_Initialize();
  2518  02E8  3182  2252  3182   	fcall	_PIN_MANAGER_Initialize
  2519                           
  2520                           ;mcc.c: 54: OSCILLATOR_Initialize();
  2521  02EB  3183  2332  3182   	fcall	_OSCILLATOR_Initialize
  2522                           
  2523                           ;mcc.c: 55: WDT_Initialize();
  2524  02EE  3183  237C  3182   	fcall	_WDT_Initialize
  2525                           
  2526                           ;mcc.c: 56: PWM1_Initialize();
  2527  02F1  3183  2329  3182   	fcall	_PWM1_Initialize
  2528                           
  2529                           ;mcc.c: 57: ADC_Initialize();
  2530  02F4  3183  2320  3182   	fcall	_ADC_Initialize
  2531                           
  2532                           ;mcc.c: 58: TMR2_Initialize();
  2533  02F7  3182  22CF  3182   	fcall	_TMR2_Initialize
  2534                           
  2535                           ;mcc.c: 59: EUSART_Initialize();
  2536  02FA  3181  210A  3182   	fcall	_EUSART_Initialize
  2537  02FD                     l150:
  2538  02FD  0008               	return
  2539  02FE                     __end_of_SYSTEM_Initialize:
  2540                           
  2541                           	psect	text2
  2542  037C                     __ptext2:	
  2543 ;; *************** function _WDT_Initialize *****************
  2544 ;; Defined at:
  2545 ;;		line 74 in file "mcc_generated_files/mcc.c"
  2546 ;; Parameters:    Size  Location     Type
  2547 ;;		None
  2548 ;; Auto vars:     Size  Location     Type
  2549 ;;		None
  2550 ;; Return value:  Size  Location     Type
  2551 ;;                  1    wreg      void 
  2552 ;; Registers used:
  2553 ;;		wreg
  2554 ;; Tracked objects:
  2555 ;;		On entry : 0/0
  2556 ;;		On exit  : 0/0
  2557 ;;		Unchanged: 0/0
  2558 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2559 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2560 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2561 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2562 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2563 ;;Total ram usage:        0 bytes
  2564 ;; Hardware stack levels used:    1
  2565 ;; Hardware stack levels required when called:    7
  2566 ;; This function calls:
  2567 ;;		Nothing
  2568 ;; This function is called by:
  2569 ;;		_SYSTEM_Initialize
  2570 ;; This function uses a non-reentrant model
  2571 ;;
  2572                           
  2573                           
  2574                           ;psect for function _WDT_Initialize
  2575  037C                     _WDT_Initialize:
  2576  037C                     l1639:	
  2577                           ;incstack = 0
  2578                           ; Regs used in _WDT_Initialize: [wreg]
  2579                           
  2580                           
  2581                           ;mcc.c: 77: WDTCON = 0x16;
  2582  037C  3016               	movlw	22
  2583  037D  0021               	movlb	1	; select bank1
  2584  037E  0097               	movwf	23	;volatile
  2585  037F                     l156:
  2586  037F  0008               	return
  2587  0380                     __end_of_WDT_Initialize:
  2588                           
  2589                           	psect	text3
  2590  02CF                     __ptext3:	
  2591 ;; *************** function _TMR2_Initialize *****************
  2592 ;; Defined at:
  2593 ;;		line 67 in file "mcc_generated_files/tmr2.c"
  2594 ;; Parameters:    Size  Location     Type
  2595 ;;		None
  2596 ;; Auto vars:     Size  Location     Type
  2597 ;;		None
  2598 ;; Return value:  Size  Location     Type
  2599 ;;                  1    wreg      void 
  2600 ;; Registers used:
  2601 ;;		wreg, status,2, status,0, pclath, cstack
  2602 ;; Tracked objects:
  2603 ;;		On entry : 0/0
  2604 ;;		On exit  : 0/0
  2605 ;;		Unchanged: 0/0
  2606 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2607 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2608 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2609 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2610 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2611 ;;Total ram usage:        0 bytes
  2612 ;; Hardware stack levels used:    1
  2613 ;; Hardware stack levels required when called:    8
  2614 ;; This function calls:
  2615 ;;		_ADC_Initialize
  2616 ;;		_ADC_StartConversion
  2617 ;;		_TMR2_SetInterruptHandler
  2618 ;; This function is called by:
  2619 ;;		_SYSTEM_Initialize
  2620 ;; This function uses a non-reentrant model
  2621 ;;
  2622                           
  2623                           
  2624                           ;psect for function _TMR2_Initialize
  2625  02CF                     _TMR2_Initialize:
  2626  02CF                     l1611:	
  2627                           ;incstack = 0
  2628                           ; Regs used in _TMR2_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2629                           
  2630                           
  2631                           ;tmr2.c: 72: PR2 = 0x03;
  2632  02CF  3003               	movlw	3
  2633  02D0  0020               	movlb	0	; select bank0
  2634  02D1  009B               	movwf	27	;volatile
  2635  02D2                     l1613:
  2636                           
  2637                           ;tmr2.c: 75: TMR2 = 0x00;
  2638  02D2  019A               	clrf	26	;volatile
  2639  02D3                     l1615:
  2640                           
  2641                           ;tmr2.c: 78: PIR1bits.TMR2IF = 0;
  2642  02D3  1091               	bcf	17,1	;volatile
  2643  02D4                     l1617:
  2644                           
  2645                           ;tmr2.c: 81: PIE1bits.TMR2IE = 1;
  2646  02D4  0021               	movlb	1	; select bank1
  2647  02D5  1491               	bsf	17,1	;volatile
  2648  02D6                     l1619:
  2649                           
  2650                           ;tmr2.c: 84: TMR2_SetInterruptHandler(TMR2_DefaultInterruptHandler);
  2651  02D6  30F8               	movlw	low _TMR2_DefaultInterruptHandler
  2652  02D7  0020               	movlb	0	; select bank0
  2653  02D8  00D2               	movwf	TMR2_SetInterruptHandler@InterruptHandler
  2654  02D9  3001               	movlw	high _TMR2_DefaultInterruptHandler
  2655  02DA  00D3               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1
  2656  02DB  3183  2347  3182   	fcall	_TMR2_SetInterruptHandler
  2657  02DE                     l1621:
  2658                           
  2659                           ;tmr2.c: 87: T2CON = 0x1F;
  2660  02DE  301F               	movlw	31
  2661  02DF  0020               	movlb	0	; select bank0
  2662  02E0  009C               	movwf	28	;volatile
  2663  02E1                     l1623:
  2664                           
  2665                           ;tmr2.c: 89: ADC_Initialize();
  2666  02E1  3183  2320  3182   	fcall	_ADC_Initialize
  2667  02E4                     l1625:
  2668                           
  2669                           ;tmr2.c: 90: ADC_StartConversion();
  2670  02E4  3183  2388  3182   	fcall	_ADC_StartConversion
  2671  02E7                     l89:
  2672  02E7  0008               	return
  2673  02E8                     __end_of_TMR2_Initialize:
  2674                           
  2675                           	psect	text4
  2676  0347                     __ptext4:	
  2677 ;; *************** function _TMR2_SetInterruptHandler *****************
  2678 ;; Defined at:
  2679 ;;		line 146 in file "mcc_generated_files/tmr2.c"
  2680 ;; Parameters:    Size  Location     Type
  2681 ;;  InterruptHan    2   14[BANK0 ] PTR FTN()void 
  2682 ;;		 -> TMR2_DefaultInterruptHandler(1), 
  2683 ;; Auto vars:     Size  Location     Type
  2684 ;;		None
  2685 ;; Return value:  Size  Location     Type
  2686 ;;                  1    wreg      void 
  2687 ;; Registers used:
  2688 ;;		wreg
  2689 ;; Tracked objects:
  2690 ;;		On entry : 0/0
  2691 ;;		On exit  : 0/0
  2692 ;;		Unchanged: 0/0
  2693 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2694 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2695 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2696 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2697 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2698 ;;Total ram usage:        2 bytes
  2699 ;; Hardware stack levels used:    1
  2700 ;; Hardware stack levels required when called:    7
  2701 ;; This function calls:
  2702 ;;		Nothing
  2703 ;; This function is called by:
  2704 ;;		_TMR2_Initialize
  2705 ;; This function uses a non-reentrant model
  2706 ;;
  2707                           
  2708                           
  2709                           ;psect for function _TMR2_SetInterruptHandler
  2710  0347                     _TMR2_SetInterruptHandler:
  2711  0347                     l1527:	
  2712                           ;incstack = 0
  2713                           ; Regs used in _TMR2_SetInterruptHandler: [wreg]
  2714                           
  2715                           
  2716                           ;tmr2.c: 147: TMR2_InterruptHandler = InterruptHandler;
  2717  0347  0020               	movlb	0	; select bank0
  2718  0348  0853               	movf	TMR2_SetInterruptHandler@InterruptHandler+1,w
  2719  0349  00E0               	movwf	_TMR2_InterruptHandler+1
  2720  034A  0852               	movf	TMR2_SetInterruptHandler@InterruptHandler,w
  2721  034B  00DF               	movwf	_TMR2_InterruptHandler
  2722  034C                     l114:
  2723  034C  0008               	return
  2724  034D                     __end_of_TMR2_SetInterruptHandler:
  2725                           
  2726                           	psect	text5
  2727  0388                     __ptext5:	
  2728 ;; *************** function _ADC_StartConversion *****************
  2729 ;; Defined at:
  2730 ;;		line 96 in file "mcc_generated_files/adc.c"
  2731 ;; Parameters:    Size  Location     Type
  2732 ;;		None
  2733 ;; Auto vars:     Size  Location     Type
  2734 ;;		None
  2735 ;; Return value:  Size  Location     Type
  2736 ;;                  1    wreg      void 
  2737 ;; Registers used:
  2738 ;;		None
  2739 ;; Tracked objects:
  2740 ;;		On entry : 0/0
  2741 ;;		On exit  : 0/0
  2742 ;;		Unchanged: 0/0
  2743 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2744 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2745 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2746 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2747 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2748 ;;Total ram usage:        0 bytes
  2749 ;; Hardware stack levels used:    1
  2750 ;; Hardware stack levels required when called:    7
  2751 ;; This function calls:
  2752 ;;		Nothing
  2753 ;; This function is called by:
  2754 ;;		_TMR2_Initialize
  2755 ;; This function uses a non-reentrant model
  2756 ;;
  2757                           
  2758                           
  2759                           ;psect for function _ADC_StartConversion
  2760  0388                     _ADC_StartConversion:
  2761  0388                     l1539:	
  2762                           ;incstack = 0
  2763                           ; Regs used in _ADC_StartConversion: []
  2764                           
  2765                           
  2766                           ;adc.c: 99: ADCON0bits.GO_nDONE = 1;
  2767  0388  0021               	movlb	1	; select bank1
  2768  0389  149D               	bsf	29,1	;volatile
  2769  038A                     l181:
  2770  038A  0008               	return
  2771  038B                     __end_of_ADC_StartConversion:
  2772                           
  2773                           	psect	text6
  2774  0320                     __ptext6:	
  2775 ;; *************** function _ADC_Initialize *****************
  2776 ;; Defined at:
  2777 ;;		line 67 in file "mcc_generated_files/adc.c"
  2778 ;; Parameters:    Size  Location     Type
  2779 ;;		None
  2780 ;; Auto vars:     Size  Location     Type
  2781 ;;		None
  2782 ;; Return value:  Size  Location     Type
  2783 ;;                  1    wreg      void 
  2784 ;; Registers used:
  2785 ;;		wreg, status,2
  2786 ;; Tracked objects:
  2787 ;;		On entry : 0/0
  2788 ;;		On exit  : 0/0
  2789 ;;		Unchanged: 0/0
  2790 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2791 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2792 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2793 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2794 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2795 ;;Total ram usage:        0 bytes
  2796 ;; Hardware stack levels used:    1
  2797 ;; Hardware stack levels required when called:    7
  2798 ;; This function calls:
  2799 ;;		Nothing
  2800 ;; This function is called by:
  2801 ;;		_TMR2_Initialize
  2802 ;;		_SYSTEM_Initialize
  2803 ;; This function uses a non-reentrant model
  2804 ;;
  2805                           
  2806                           
  2807                           ;psect for function _ADC_Initialize
  2808  0320                     _ADC_Initialize:
  2809  0320                     l1529:	
  2810                           ;incstack = 0
  2811                           ; Regs used in _ADC_Initialize: [wreg+status,2]
  2812                           
  2813                           
  2814                           ;adc.c: 72: ADCON1 = 0x42;
  2815  0320  3042               	movlw	66
  2816  0321  0021               	movlb	1	; select bank1
  2817  0322  009E               	movwf	30	;volatile
  2818  0323                     l1531:
  2819                           
  2820                           ;adc.c: 75: ADCON2 = 0x00;
  2821  0323  019F               	clrf	31	;volatile
  2822  0324                     l1533:
  2823                           
  2824                           ;adc.c: 78: ADRESL = 0x00;
  2825  0324  019B               	clrf	27	;volatile
  2826  0325                     l1535:
  2827                           
  2828                           ;adc.c: 81: ADRESH = 0x00;
  2829  0325  019C               	clrf	28	;volatile
  2830  0326                     l1537:
  2831                           
  2832                           ;adc.c: 84: ADCON0 = 0x01;
  2833  0326  3001               	movlw	1
  2834  0327  009D               	movwf	29	;volatile
  2835  0328                     l175:
  2836  0328  0008               	return
  2837  0329                     __end_of_ADC_Initialize:
  2838                           
  2839                           	psect	text7
  2840  0329                     __ptext7:	
  2841 ;; *************** function _PWM1_Initialize *****************
  2842 ;; Defined at:
  2843 ;;		line 64 in file "mcc_generated_files/pwm1.c"
  2844 ;; Parameters:    Size  Location     Type
  2845 ;;		None
  2846 ;; Auto vars:     Size  Location     Type
  2847 ;;		None
  2848 ;; Return value:  Size  Location     Type
  2849 ;;                  1    wreg      void 
  2850 ;; Registers used:
  2851 ;;		wreg, status,2, status,0
  2852 ;; Tracked objects:
  2853 ;;		On entry : 0/0
  2854 ;;		On exit  : 0/0
  2855 ;;		Unchanged: 0/0
  2856 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2857 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2858 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2859 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2860 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2861 ;;Total ram usage:        0 bytes
  2862 ;; Hardware stack levels used:    1
  2863 ;; Hardware stack levels required when called:    7
  2864 ;; This function calls:
  2865 ;;		Nothing
  2866 ;; This function is called by:
  2867 ;;		_SYSTEM_Initialize
  2868 ;; This function uses a non-reentrant model
  2869 ;;
  2870                           
  2871                           
  2872                           ;psect for function _PWM1_Initialize
  2873  0329                     _PWM1_Initialize:
  2874  0329                     l1605:	
  2875                           ;incstack = 0
  2876                           ; Regs used in _PWM1_Initialize: [wreg+status,2+status,0]
  2877                           
  2878                           
  2879                           ;pwm1.c: 69: CCP1CON = 0x1C;
  2880  0329  301C               	movlw	28
  2881  032A  0025               	movlb	5	; select bank5
  2882  032B  0093               	movwf	19	;volatile
  2883                           
  2884                           ;pwm1.c: 72: CCPR1L = 0x3E;
  2885  032C  303E               	movlw	62
  2886  032D  0091               	movwf	17	;volatile
  2887  032E                     l1607:
  2888                           
  2889                           ;pwm1.c: 75: CCPR1H = 0x00;
  2890  032E  0192               	clrf	18	;volatile
  2891  032F                     l1609:
  2892                           
  2893                           ;pwm1.c: 78: CCPTMRSbits.C1TSEL = 0x0;
  2894  032F  30FC               	movlw	-4
  2895  0330  059E               	andwf	30,f	;volatile
  2896  0331                     l53:
  2897  0331  0008               	return
  2898  0332                     __end_of_PWM1_Initialize:
  2899                           
  2900                           	psect	text8
  2901  0252                     __ptext8:	
  2902 ;; *************** function _PIN_MANAGER_Initialize *****************
  2903 ;; Defined at:
  2904 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  2905 ;; Parameters:    Size  Location     Type
  2906 ;;		None
  2907 ;; Auto vars:     Size  Location     Type
  2908 ;;		None
  2909 ;; Return value:  Size  Location     Type
  2910 ;;                  1    wreg      void 
  2911 ;; Registers used:
  2912 ;;		wreg, status,2
  2913 ;; Tracked objects:
  2914 ;;		On entry : 0/0
  2915 ;;		On exit  : 0/0
  2916 ;;		Unchanged: 0/0
  2917 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2918 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2919 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2920 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2921 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2922 ;;Total ram usage:        0 bytes
  2923 ;; Hardware stack levels used:    1
  2924 ;; Hardware stack levels required when called:    7
  2925 ;; This function calls:
  2926 ;;		Nothing
  2927 ;; This function is called by:
  2928 ;;		_SYSTEM_Initialize
  2929 ;; This function uses a non-reentrant model
  2930 ;;
  2931                           
  2932                           
  2933                           ;psect for function _PIN_MANAGER_Initialize
  2934  0252                     _PIN_MANAGER_Initialize:
  2935  0252                     l1573:	
  2936                           ;incstack = 0
  2937                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  2938                           
  2939                           
  2940                           ;pin_manager.c: 60: LATA = 0x00;
  2941  0252  0022               	movlb	2	; select bank2
  2942  0253  018C               	clrf	12	;volatile
  2943                           
  2944                           ;pin_manager.c: 61: LATC = 0x00;
  2945  0254  018E               	clrf	14	;volatile
  2946  0255                     l1575:
  2947                           
  2948                           ;pin_manager.c: 66: TRISA = 0x06;
  2949  0255  3006               	movlw	6
  2950  0256  0021               	movlb	1	; select bank1
  2951  0257  008C               	movwf	12	;volatile
  2952  0258                     l1577:
  2953                           
  2954                           ;pin_manager.c: 67: TRISC = 0x20;
  2955  0258  3020               	movlw	32
  2956  0259  008E               	movwf	14	;volatile
  2957                           
  2958                           ;pin_manager.c: 72: ANSELC = 0x00;
  2959  025A  0023               	movlb	3	; select bank3
  2960  025B  018E               	clrf	14	;volatile
  2961  025C                     l1579:
  2962                           
  2963                           ;pin_manager.c: 73: ANSELA = 0x06;
  2964  025C  3006               	movlw	6
  2965  025D  008C               	movwf	12	;volatile
  2966  025E                     l1581:
  2967                           
  2968                           ;pin_manager.c: 78: WPUA = 0x00;
  2969  025E  0024               	movlb	4	; select bank4
  2970  025F  018C               	clrf	12	;volatile
  2971  0260                     l1583:
  2972                           
  2973                           ;pin_manager.c: 79: WPUC = 0x00;
  2974  0260  018E               	clrf	14	;volatile
  2975  0261                     l1585:
  2976                           
  2977                           ;pin_manager.c: 80: OPTION_REGbits.nWPUEN = 1;
  2978  0261  0021               	movlb	1	; select bank1
  2979  0262  1795               	bsf	21,7	;volatile
  2980  0263                     l1587:
  2981                           
  2982                           ;pin_manager.c: 85: ODCONA = 0x00;
  2983  0263  0025               	movlb	5	; select bank5
  2984  0264  018C               	clrf	12	;volatile
  2985  0265                     l1589:
  2986                           
  2987                           ;pin_manager.c: 86: ODCONC = 0x00;
  2988  0265  018E               	clrf	14	;volatile
  2989  0266                     l1591:
  2990                           
  2991                           ;pin_manager.c: 91: SLRCONA = 0x37;
  2992  0266  3037               	movlw	55
  2993  0267  0026               	movlb	6	; select bank6
  2994  0268  008C               	movwf	12	;volatile
  2995  0269                     l1593:
  2996                           
  2997                           ;pin_manager.c: 92: SLRCONC = 0x3F;
  2998  0269  303F               	movlw	63
  2999  026A  008E               	movwf	14	;volatile
  3000  026B                     l1595:
  3001                           
  3002                           ;pin_manager.c: 97: INLVLA = 0x3F;
  3003  026B  303F               	movlw	63
  3004  026C  0027               	movlb	7	; select bank7
  3005  026D  008C               	movwf	12	;volatile
  3006  026E                     l1597:
  3007                           
  3008                           ;pin_manager.c: 98: INLVLC = 0x3F;
  3009  026E  303F               	movlw	63
  3010  026F  008E               	movwf	14	;volatile
  3011  0270                     l1599:
  3012                           
  3013                           ;pin_manager.c: 107: RXPPS = 0x15;
  3014  0270  3015               	movlw	21
  3015  0271  003C               	movlb	28	; select bank28
  3016  0272  00A4               	movwf	36	;volatile
  3017  0273                     l1601:
  3018                           
  3019                           ;pin_manager.c: 108: RC1PPS = 0x0C;
  3020  0273  300C               	movlw	12
  3021  0274  003D               	movlb	29	; select bank29
  3022  0275  00A1               	movwf	33	;volatile
  3023  0276                     l1603:
  3024                           
  3025                           ;pin_manager.c: 109: RC4PPS = 0x14;
  3026  0276  3014               	movlw	20
  3027  0277  00A4               	movwf	36	;volatile
  3028  0278                     l39:
  3029  0278  0008               	return
  3030  0279                     __end_of_PIN_MANAGER_Initialize:
  3031                           
  3032                           	psect	text9
  3033  0332                     __ptext9:	
  3034 ;; *************** function _OSCILLATOR_Initialize *****************
  3035 ;; Defined at:
  3036 ;;		line 62 in file "mcc_generated_files/mcc.c"
  3037 ;; Parameters:    Size  Location     Type
  3038 ;;		None
  3039 ;; Auto vars:     Size  Location     Type
  3040 ;;		None
  3041 ;; Return value:  Size  Location     Type
  3042 ;;                  1    wreg      void 
  3043 ;; Registers used:
  3044 ;;		wreg, status,2
  3045 ;; Tracked objects:
  3046 ;;		On entry : 0/0
  3047 ;;		On exit  : 0/0
  3048 ;;		Unchanged: 0/0
  3049 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3050 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3051 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3052 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3053 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3054 ;;Total ram usage:        0 bytes
  3055 ;; Hardware stack levels used:    1
  3056 ;; Hardware stack levels required when called:    7
  3057 ;; This function calls:
  3058 ;;		Nothing
  3059 ;; This function is called by:
  3060 ;;		_SYSTEM_Initialize
  3061 ;; This function uses a non-reentrant model
  3062 ;;
  3063                           
  3064                           
  3065                           ;psect for function _OSCILLATOR_Initialize
  3066  0332                     _OSCILLATOR_Initialize:
  3067  0332                     l1631:	
  3068                           ;incstack = 0
  3069                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  3070                           
  3071                           
  3072                           ;mcc.c: 65: OSCCON = 0x6A;
  3073  0332  306A               	movlw	106
  3074  0333  0021               	movlb	1	; select bank1
  3075  0334  0099               	movwf	25	;volatile
  3076  0335                     l1633:
  3077                           
  3078                           ;mcc.c: 67: OSCSTAT = 0x00;
  3079  0335  019A               	clrf	26	;volatile
  3080  0336                     l1635:
  3081                           
  3082                           ;mcc.c: 69: OSCTUNE = 0x00;
  3083  0336  0198               	clrf	24	;volatile
  3084  0337                     l1637:
  3085                           
  3086                           ;mcc.c: 71: BORCON = 0x00;
  3087  0337  0022               	movlb	2	; select bank2
  3088  0338  0196               	clrf	22	;volatile
  3089  0339                     l153:
  3090  0339  0008               	return
  3091  033A                     __end_of_OSCILLATOR_Initialize:
  3092                           
  3093                           	psect	text10
  3094  010A                     __ptext10:	
  3095 ;; *************** function _EUSART_Initialize *****************
  3096 ;; Defined at:
  3097 ;;		line 88 in file "mcc_generated_files/eusart.c"
  3098 ;; Parameters:    Size  Location     Type
  3099 ;;		None
  3100 ;; Auto vars:     Size  Location     Type
  3101 ;;		None
  3102 ;; Return value:  Size  Location     Type
  3103 ;;                  1    wreg      void 
  3104 ;; Registers used:
  3105 ;;		wreg, status,2, status,0, pclath, cstack
  3106 ;; Tracked objects:
  3107 ;;		On entry : 0/0
  3108 ;;		On exit  : 0/0
  3109 ;;		Unchanged: 0/0
  3110 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3111 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3112 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3113 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3114 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3115 ;;Total ram usage:        1 bytes
  3116 ;; Hardware stack levels used:    1
  3117 ;; Hardware stack levels required when called:    8
  3118 ;; This function calls:
  3119 ;;		_EUSART_SetErrorHandler
  3120 ;;		_EUSART_SetFramingErrorHandler
  3121 ;;		_EUSART_SetOverrunErrorHandler
  3122 ;;		_EUSART_SetRxInterruptHandler
  3123 ;;		_EUSART_SetTxInterruptHandler
  3124 ;; This function is called by:
  3125 ;;		_SYSTEM_Initialize
  3126 ;; This function uses a non-reentrant model
  3127 ;;
  3128                           
  3129                           
  3130                           ;psect for function _EUSART_Initialize
  3131  010A                     _EUSART_Initialize:
  3132  010A                     l1641:	
  3133                           ;incstack = 0
  3134                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3135                           
  3136                           
  3137                           ;eusart.c: 91: PIE1bits.RCIE = 0;
  3138  010A  0021               	movlb	1	; select bank1
  3139  010B  1291               	bcf	17,5	;volatile
  3140  010C                     l1643:
  3141                           
  3142                           ;eusart.c: 92: EUSART_SetRxInterruptHandler(EUSART_Receive_ISR);
  3143  010C  308A               	movlw	low _EUSART_Receive_ISR
  3144  010D  0020               	movlb	0	; select bank0
  3145  010E  00D2               	movwf	EUSART_SetRxInterruptHandler@interruptHandler
  3146  010F  3001               	movlw	high _EUSART_Receive_ISR
  3147  0110  00D3               	movwf	EUSART_SetRxInterruptHandler@interruptHandler+1
  3148  0111  3183  2353  3181   	fcall	_EUSART_SetRxInterruptHandler
  3149  0114                     l1645:
  3150                           
  3151                           ;eusart.c: 93: PIE1bits.TXIE = 0;
  3152  0114  0021               	movlb	1	; select bank1
  3153  0115  1211               	bcf	17,4	;volatile
  3154                           
  3155                           ;eusart.c: 94: EUSART_SetTxInterruptHandler(EUSART_Transmit_ISR);
  3156  0116  3079               	movlw	low _EUSART_Transmit_ISR
  3157  0117  0020               	movlb	0	; select bank0
  3158  0118  00D2               	movwf	EUSART_SetTxInterruptHandler@interruptHandler
  3159  0119  3002               	movlw	high _EUSART_Transmit_ISR
  3160  011A  00D3               	movwf	EUSART_SetTxInterruptHandler@interruptHandler+1
  3161  011B  3183  234D  3181   	fcall	_EUSART_SetTxInterruptHandler
  3162  011E                     l1647:
  3163                           
  3164                           ;eusart.c: 98: BAUD1CON = 0x08;
  3165  011E  3008               	movlw	8
  3166  011F  0023               	movlb	3	; select bank3
  3167  0120  009F               	movwf	31	;volatile
  3168  0121                     l1649:
  3169                           
  3170                           ;eusart.c: 101: RC1STA = 0x90;
  3171  0121  3090               	movlw	144
  3172  0122  009D               	movwf	29	;volatile
  3173  0123                     l1651:
  3174                           
  3175                           ;eusart.c: 104: TX1STA = 0x24;
  3176  0123  3024               	movlw	36
  3177  0124  009E               	movwf	30	;volatile
  3178  0125                     l1653:
  3179                           
  3180                           ;eusart.c: 107: SP1BRGL = 0x67;
  3181  0125  3067               	movlw	103
  3182  0126  009B               	movwf	27	;volatile
  3183  0127                     l1655:
  3184                           
  3185                           ;eusart.c: 110: SP1BRGH = 0x00;
  3186  0127  019C               	clrf	28	;volatile
  3187  0128                     l1657:
  3188                           
  3189                           ;eusart.c: 113: EUSART_SetFramingErrorHandler(EUSART_DefaultFramingErrorHandler);
  3190  0128  308B               	movlw	low _EUSART_DefaultFramingErrorHandler
  3191  0129  0020               	movlb	0	; select bank0
  3192  012A  00D2               	movwf	EUSART_SetFramingErrorHandler@interruptHandler
  3193  012B  3003               	movlw	high _EUSART_DefaultFramingErrorHandler
  3194  012C  00D3               	movwf	EUSART_SetFramingErrorHandler@interruptHandler+1
  3195  012D  3183  235F  3181   	fcall	_EUSART_SetFramingErrorHandler
  3196  0130                     l1659:
  3197                           
  3198                           ;eusart.c: 114: EUSART_SetOverrunErrorHandler(EUSART_DefaultOverrunErrorHandler);
  3199  0130  3080               	movlw	low _EUSART_DefaultOverrunErrorHandler
  3200  0131  0020               	movlb	0	; select bank0
  3201  0132  00D2               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler
  3202  0133  3003               	movlw	high _EUSART_DefaultOverrunErrorHandler
  3203  0134  00D3               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler+1
  3204  0135  3183  2359  3181   	fcall	_EUSART_SetOverrunErrorHandler
  3205  0138                     l1661:
  3206                           
  3207                           ;eusart.c: 115: EUSART_SetErrorHandler(EUSART_DefaultErrorHandler);
  3208  0138  3084               	movlw	low _EUSART_DefaultErrorHandler
  3209  0139  0020               	movlb	0	; select bank0
  3210  013A  00D2               	movwf	EUSART_SetErrorHandler@interruptHandler
  3211  013B  3003               	movlw	high _EUSART_DefaultErrorHandler
  3212  013C  00D3               	movwf	EUSART_SetErrorHandler@interruptHandler+1
  3213  013D  3183  2365  3181   	fcall	_EUSART_SetErrorHandler
  3214                           
  3215                           ;eusart.c: 117: eusartRxLastError.status = 0;
  3216  0140  0020               	movlb	0	; select bank0
  3217  0141  01BE               	clrf	_eusartRxLastError	;volatile
  3218                           
  3219                           ;eusart.c: 120: eusartTxHead = 0;
  3220  0142  01C3               	clrf	_eusartTxHead	;volatile
  3221                           
  3222                           ;eusart.c: 121: eusartTxTail = 0;
  3223  0143  01C2               	clrf	_eusartTxTail	;volatile
  3224  0144                     l1663:
  3225                           
  3226                           ;eusart.c: 122: eusartTxBufferRemaining = sizeof(eusartTxBuffer);
  3227  0144  3008               	movlw	8
  3228  0145  00D4               	movwf	??_EUSART_Initialize
  3229  0146  0854               	movf	??_EUSART_Initialize,w
  3230  0147  00E1               	movwf	_eusartTxBufferRemaining	;volatile
  3231  0148                     l1665:
  3232                           
  3233                           ;eusart.c: 124: eusartRxHead = 0;
  3234  0148  01C1               	clrf	_eusartRxHead	;volatile
  3235  0149                     l1667:
  3236                           
  3237                           ;eusart.c: 125: eusartRxTail = 0;
  3238  0149  01C0               	clrf	_eusartRxTail	;volatile
  3239  014A                     l1669:
  3240                           
  3241                           ;eusart.c: 126: eusartRxCount = 0;
  3242  014A  01BF               	clrf	_eusartRxCount	;volatile
  3243  014B                     l1671:
  3244                           
  3245                           ;eusart.c: 129: PIE1bits.RCIE = 1;
  3246  014B  0021               	movlb	1	; select bank1
  3247  014C  1691               	bsf	17,5	;volatile
  3248  014D                     l271:
  3249  014D  0008               	return
  3250  014E                     __end_of_EUSART_Initialize:
  3251                           
  3252                           	psect	text11
  3253  034D                     __ptext11:	
  3254 ;; *************** function _EUSART_SetTxInterruptHandler *****************
  3255 ;; Defined at:
  3256 ;;		line 285 in file "mcc_generated_files/eusart.c"
  3257 ;; Parameters:    Size  Location     Type
  3258 ;;  interruptHan    2   14[BANK0 ] PTR FTN()void 
  3259 ;;		 -> EUSART_Transmit_ISR(1), 
  3260 ;; Auto vars:     Size  Location     Type
  3261 ;;		None
  3262 ;; Return value:  Size  Location     Type
  3263 ;;                  1    wreg      void 
  3264 ;; Registers used:
  3265 ;;		wreg
  3266 ;; Tracked objects:
  3267 ;;		On entry : 0/0
  3268 ;;		On exit  : 0/0
  3269 ;;		Unchanged: 0/0
  3270 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3271 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3272 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3273 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3274 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3275 ;;Total ram usage:        2 bytes
  3276 ;; Hardware stack levels used:    1
  3277 ;; Hardware stack levels required when called:    7
  3278 ;; This function calls:
  3279 ;;		Nothing
  3280 ;; This function is called by:
  3281 ;;		_EUSART_Initialize
  3282 ;; This function uses a non-reentrant model
  3283 ;;
  3284                           
  3285                           
  3286                           ;psect for function _EUSART_SetTxInterruptHandler
  3287  034D                     _EUSART_SetTxInterruptHandler:
  3288  034D                     l1555:	
  3289                           ;incstack = 0
  3290                           ; Regs used in _EUSART_SetTxInterruptHandler: [wreg]
  3291                           
  3292                           
  3293                           ;eusart.c: 286: EUSART_TxDefaultInterruptHandler = interruptHandler;
  3294  034D  0020               	movlb	0	; select bank0
  3295  034E  0853               	movf	EUSART_SetTxInterruptHandler@interruptHandler+1,w
  3296  034F  00DE               	movwf	_EUSART_TxDefaultInterruptHandler+1
  3297  0350  0852               	movf	EUSART_SetTxInterruptHandler@interruptHandler,w
  3298  0351  00DD               	movwf	_EUSART_TxDefaultInterruptHandler
  3299  0352                     l343:
  3300  0352  0008               	return
  3301  0353                     __end_of_EUSART_SetTxInterruptHandler:
  3302                           
  3303                           	psect	text12
  3304  0353                     __ptext12:	
  3305 ;; *************** function _EUSART_SetRxInterruptHandler *****************
  3306 ;; Defined at:
  3307 ;;		line 289 in file "mcc_generated_files/eusart.c"
  3308 ;; Parameters:    Size  Location     Type
  3309 ;;  interruptHan    2   14[BANK0 ] PTR FTN()void 
  3310 ;;		 -> EUSART_Receive_ISR(1), 
  3311 ;; Auto vars:     Size  Location     Type
  3312 ;;		None
  3313 ;; Return value:  Size  Location     Type
  3314 ;;                  1    wreg      void 
  3315 ;; Registers used:
  3316 ;;		wreg
  3317 ;; Tracked objects:
  3318 ;;		On entry : 0/0
  3319 ;;		On exit  : 0/0
  3320 ;;		Unchanged: 0/0
  3321 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3322 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3323 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3324 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3325 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3326 ;;Total ram usage:        2 bytes
  3327 ;; Hardware stack levels used:    1
  3328 ;; Hardware stack levels required when called:    7
  3329 ;; This function calls:
  3330 ;;		Nothing
  3331 ;; This function is called by:
  3332 ;;		_EUSART_Initialize
  3333 ;; This function uses a non-reentrant model
  3334 ;;
  3335                           
  3336                           
  3337                           ;psect for function _EUSART_SetRxInterruptHandler
  3338  0353                     _EUSART_SetRxInterruptHandler:
  3339  0353                     l1553:	
  3340                           ;incstack = 0
  3341                           ; Regs used in _EUSART_SetRxInterruptHandler: [wreg]
  3342                           
  3343                           
  3344                           ;eusart.c: 290: EUSART_RxDefaultInterruptHandler = interruptHandler;
  3345  0353  0020               	movlb	0	; select bank0
  3346  0354  0853               	movf	EUSART_SetRxInterruptHandler@interruptHandler+1,w
  3347  0355  00DC               	movwf	_EUSART_RxDefaultInterruptHandler+1
  3348  0356  0852               	movf	EUSART_SetRxInterruptHandler@interruptHandler,w
  3349  0357  00DB               	movwf	_EUSART_RxDefaultInterruptHandler
  3350  0358                     l346:
  3351  0358  0008               	return
  3352  0359                     __end_of_EUSART_SetRxInterruptHandler:
  3353                           
  3354                           	psect	text13
  3355  0359                     __ptext13:	
  3356 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  3357 ;; Defined at:
  3358 ;;		line 277 in file "mcc_generated_files/eusart.c"
  3359 ;; Parameters:    Size  Location     Type
  3360 ;;  interruptHan    2   14[BANK0 ] PTR FTN()void 
  3361 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  3362 ;; Auto vars:     Size  Location     Type
  3363 ;;		None
  3364 ;; Return value:  Size  Location     Type
  3365 ;;                  1    wreg      void 
  3366 ;; Registers used:
  3367 ;;		wreg
  3368 ;; Tracked objects:
  3369 ;;		On entry : 0/0
  3370 ;;		On exit  : 0/0
  3371 ;;		Unchanged: 0/0
  3372 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3373 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3374 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3375 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3376 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3377 ;;Total ram usage:        2 bytes
  3378 ;; Hardware stack levels used:    1
  3379 ;; Hardware stack levels required when called:    7
  3380 ;; This function calls:
  3381 ;;		Nothing
  3382 ;; This function is called by:
  3383 ;;		_EUSART_Initialize
  3384 ;; This function uses a non-reentrant model
  3385 ;;
  3386                           
  3387                           
  3388                           ;psect for function _EUSART_SetOverrunErrorHandler
  3389  0359                     _EUSART_SetOverrunErrorHandler:
  3390  0359                     l1559:	
  3391                           ;incstack = 0
  3392                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
  3393                           
  3394                           
  3395                           ;eusart.c: 278: EUSART_OverrunErrorHandler = interruptHandler;
  3396  0359  0020               	movlb	0	; select bank0
  3397  035A  0853               	movf	EUSART_SetOverrunErrorHandler@interruptHandler+1,w
  3398  035B  00D8               	movwf	_EUSART_OverrunErrorHandler+1
  3399  035C  0852               	movf	EUSART_SetOverrunErrorHandler@interruptHandler,w
  3400  035D  00D7               	movwf	_EUSART_OverrunErrorHandler
  3401  035E                     l337:
  3402  035E  0008               	return
  3403  035F                     __end_of_EUSART_SetOverrunErrorHandler:
  3404                           
  3405                           	psect	text14
  3406  035F                     __ptext14:	
  3407 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  3408 ;; Defined at:
  3409 ;;		line 273 in file "mcc_generated_files/eusart.c"
  3410 ;; Parameters:    Size  Location     Type
  3411 ;;  interruptHan    2   14[BANK0 ] PTR FTN()void 
  3412 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  3413 ;; Auto vars:     Size  Location     Type
  3414 ;;		None
  3415 ;; Return value:  Size  Location     Type
  3416 ;;                  1    wreg      void 
  3417 ;; Registers used:
  3418 ;;		wreg
  3419 ;; Tracked objects:
  3420 ;;		On entry : 0/0
  3421 ;;		On exit  : 0/0
  3422 ;;		Unchanged: 0/0
  3423 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3424 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3425 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3426 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3427 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3428 ;;Total ram usage:        2 bytes
  3429 ;; Hardware stack levels used:    1
  3430 ;; Hardware stack levels required when called:    7
  3431 ;; This function calls:
  3432 ;;		Nothing
  3433 ;; This function is called by:
  3434 ;;		_EUSART_Initialize
  3435 ;; This function uses a non-reentrant model
  3436 ;;
  3437                           
  3438                           
  3439                           ;psect for function _EUSART_SetFramingErrorHandler
  3440  035F                     _EUSART_SetFramingErrorHandler:
  3441  035F                     l1557:	
  3442                           ;incstack = 0
  3443                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
  3444                           
  3445                           
  3446                           ;eusart.c: 274: EUSART_FramingErrorHandler = interruptHandler;
  3447  035F  0020               	movlb	0	; select bank0
  3448  0360  0853               	movf	EUSART_SetFramingErrorHandler@interruptHandler+1,w
  3449  0361  00DA               	movwf	_EUSART_FramingErrorHandler+1
  3450  0362  0852               	movf	EUSART_SetFramingErrorHandler@interruptHandler,w
  3451  0363  00D9               	movwf	_EUSART_FramingErrorHandler
  3452  0364                     l334:
  3453  0364  0008               	return
  3454  0365                     __end_of_EUSART_SetFramingErrorHandler:
  3455                           
  3456                           	psect	text15
  3457  0365                     __ptext15:	
  3458 ;; *************** function _EUSART_SetErrorHandler *****************
  3459 ;; Defined at:
  3460 ;;		line 281 in file "mcc_generated_files/eusart.c"
  3461 ;; Parameters:    Size  Location     Type
  3462 ;;  interruptHan    2   14[BANK0 ] PTR FTN()void 
  3463 ;;		 -> EUSART_DefaultErrorHandler(1), 
  3464 ;; Auto vars:     Size  Location     Type
  3465 ;;		None
  3466 ;; Return value:  Size  Location     Type
  3467 ;;                  1    wreg      void 
  3468 ;; Registers used:
  3469 ;;		wreg
  3470 ;; Tracked objects:
  3471 ;;		On entry : 0/0
  3472 ;;		On exit  : 0/0
  3473 ;;		Unchanged: 0/0
  3474 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3475 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3476 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3477 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3478 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3479 ;;Total ram usage:        2 bytes
  3480 ;; Hardware stack levels used:    1
  3481 ;; Hardware stack levels required when called:    7
  3482 ;; This function calls:
  3483 ;;		Nothing
  3484 ;; This function is called by:
  3485 ;;		_EUSART_Initialize
  3486 ;; This function uses a non-reentrant model
  3487 ;;
  3488                           
  3489                           
  3490                           ;psect for function _EUSART_SetErrorHandler
  3491  0365                     _EUSART_SetErrorHandler:
  3492  0365                     l1561:	
  3493                           ;incstack = 0
  3494                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
  3495                           
  3496                           
  3497                           ;eusart.c: 282: EUSART_ErrorHandler = interruptHandler;
  3498  0365  0020               	movlb	0	; select bank0
  3499  0366  0853               	movf	EUSART_SetErrorHandler@interruptHandler+1,w
  3500  0367  00D6               	movwf	_EUSART_ErrorHandler+1
  3501  0368  0852               	movf	EUSART_SetErrorHandler@interruptHandler,w
  3502  0369  00D5               	movwf	_EUSART_ErrorHandler
  3503  036A                     l340:
  3504  036A  0008               	return
  3505  036B                     __end_of_EUSART_SetErrorHandler:
  3506                           
  3507                           	psect	intentry
  3508  0004                     __pintentry:	
  3509 ;; *************** function _INTERRUPT_InterruptManager *****************
  3510 ;; Defined at:
  3511 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  3512 ;; Parameters:    Size  Location     Type
  3513 ;;		None
  3514 ;; Auto vars:     Size  Location     Type
  3515 ;;		None
  3516 ;; Return value:  Size  Location     Type
  3517 ;;                  1    wreg      void 
  3518 ;; Registers used:
  3519 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3520 ;; Tracked objects:
  3521 ;;		On entry : 0/0
  3522 ;;		On exit  : 0/0
  3523 ;;		Unchanged: 0/0
  3524 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3525 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3526 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3527 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3528 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3529 ;;Total ram usage:        0 bytes
  3530 ;; Hardware stack levels used:    1
  3531 ;; Hardware stack levels required when called:    6
  3532 ;; This function calls:
  3533 ;;		Absolute function
  3534 ;;		_EUSART_Receive_ISR
  3535 ;;		_EUSART_Transmit_ISR
  3536 ;;		_TMR2_ISR
  3537 ;; This function is called by:
  3538 ;;		Interrupt level 1
  3539 ;; This function uses a non-reentrant model
  3540 ;;
  3541                           
  3542  0004                     _INTERRUPT_InterruptManager:
  3543                           
  3544                           ;incstack = 0
  3545  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  3546                           
  3547                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3548  0005  3180               	pagesel	$
  3549  0006                     i1l1741:
  3550                           
  3551                           ;interrupt_manager.c: 55: if(INTCONbits.PEIE == 1)
  3552  0006  1F0B               	btfss	11,6	;volatile
  3553  0007  2809               	goto	u79_21
  3554  0008  280A               	goto	u79_20
  3555  0009                     u79_21:
  3556  0009  2838               	goto	i1l371
  3557  000A                     u79_20:
  3558  000A                     i1l1743:
  3559                           
  3560                           ;interrupt_manager.c: 56: {;interrupt_manager.c: 57: if(PIE1bits.TXIE == 1 && PIR1bits.T
      +                          XIF == 1)
  3561  000A  0021               	movlb	1	; select bank1
  3562  000B  1E11               	btfss	17,4	;volatile
  3563  000C  280E               	goto	u80_21
  3564  000D  280F               	goto	u80_20
  3565  000E                     u80_21:
  3566  000E  281A               	goto	i1l364
  3567  000F                     u80_20:
  3568  000F                     i1l1745:
  3569  000F  0020               	movlb	0	; select bank0
  3570  0010  1E11               	btfss	17,4	;volatile
  3571  0011  2813               	goto	u81_21
  3572  0012  2814               	goto	u81_20
  3573  0013                     u81_21:
  3574  0013  281A               	goto	i1l364
  3575  0014                     u81_20:
  3576  0014                     i1l1747:
  3577                           
  3578                           ;interrupt_manager.c: 58: {;interrupt_manager.c: 59: EUSART_TxDefaultInterruptHandler();
  3579  0014  085E               	movf	_EUSART_TxDefaultInterruptHandler+1,w
  3580  0015  008A               	movwf	10
  3581  0016  085D               	movf	_EUSART_TxDefaultInterruptHandler,w
  3582  0017  000A               	callw
  3583  0018  3180               	pagesel	$
  3584                           
  3585                           ;interrupt_manager.c: 60: }
  3586  0019  2838               	goto	i1l371
  3587  001A                     i1l364:
  3588                           
  3589                           ;interrupt_manager.c: 61: else if(PIE1bits.RCIE == 1 && PIR1bits.RCIF == 1)
  3590  001A  0021               	movlb	1	; select bank1
  3591  001B  1E91               	btfss	17,5	;volatile
  3592  001C  281E               	goto	u82_21
  3593  001D  281F               	goto	u82_20
  3594  001E                     u82_21:
  3595  001E  282A               	goto	i1l366
  3596  001F                     u82_20:
  3597  001F                     i1l1749:
  3598  001F  0020               	movlb	0	; select bank0
  3599  0020  1E91               	btfss	17,5	;volatile
  3600  0021  2823               	goto	u83_21
  3601  0022  2824               	goto	u83_20
  3602  0023                     u83_21:
  3603  0023  282A               	goto	i1l366
  3604  0024                     u83_20:
  3605  0024                     i1l1751:
  3606                           
  3607                           ;interrupt_manager.c: 62: {;interrupt_manager.c: 63: EUSART_RxDefaultInterruptHandler();
  3608  0024  085C               	movf	_EUSART_RxDefaultInterruptHandler+1,w
  3609  0025  008A               	movwf	10
  3610  0026  085B               	movf	_EUSART_RxDefaultInterruptHandler,w
  3611  0027  000A               	callw
  3612  0028  3180               	pagesel	$
  3613                           
  3614                           ;interrupt_manager.c: 64: }
  3615  0029  2838               	goto	i1l371
  3616  002A                     i1l366:
  3617                           
  3618                           ;interrupt_manager.c: 65: else if(PIE1bits.TMR2IE == 1 && PIR1bits.TMR2IF == 1)
  3619  002A  0021               	movlb	1	; select bank1
  3620  002B  1C91               	btfss	17,1	;volatile
  3621  002C  282E               	goto	u84_21
  3622  002D  282F               	goto	u84_20
  3623  002E                     u84_21:
  3624  002E  2838               	goto	i1l365
  3625  002F                     u84_20:
  3626  002F                     i1l1753:
  3627  002F  0020               	movlb	0	; select bank0
  3628  0030  1C91               	btfss	17,1	;volatile
  3629  0031  2833               	goto	u85_21
  3630  0032  2834               	goto	u85_20
  3631  0033                     u85_21:
  3632  0033  2838               	goto	i1l365
  3633  0034                     u85_20:
  3634  0034                     i1l1755:
  3635                           
  3636                           ;interrupt_manager.c: 66: {;interrupt_manager.c: 67: TMR2_ISR();
  3637  0034  3183  236B  3180   	fcall	_TMR2_ISR
  3638                           
  3639                           ;interrupt_manager.c: 68: }
  3640  0037  2838               	goto	i1l371
  3641  0038                     i1l365:
  3642  0038                     i1l371:	
  3643                           ;interrupt_manager.c: 72: };interrupt_manager.c: 73: }
  3644                           
  3645  0038  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3646  0039  0009               	retfie
  3647  003A                     __end_of_INTERRUPT_InterruptManager:
  3648                           
  3649                           	psect	text17
  3650  036B                     __ptext17:	
  3651 ;; *************** function _TMR2_ISR *****************
  3652 ;; Defined at:
  3653 ;;		line 125 in file "mcc_generated_files/tmr2.c"
  3654 ;; Parameters:    Size  Location     Type
  3655 ;;		None
  3656 ;; Auto vars:     Size  Location     Type
  3657 ;;		None
  3658 ;; Return value:  Size  Location     Type
  3659 ;;                  1    wreg      void 
  3660 ;; Registers used:
  3661 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3662 ;; Tracked objects:
  3663 ;;		On entry : 0/0
  3664 ;;		On exit  : 0/0
  3665 ;;		Unchanged: 0/0
  3666 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3667 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3668 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3669 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3670 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3671 ;;Total ram usage:        0 bytes
  3672 ;; Hardware stack levels used:    1
  3673 ;; Hardware stack levels required when called:    5
  3674 ;; This function calls:
  3675 ;;		_TMR2_CallBack
  3676 ;; This function is called by:
  3677 ;;		_INTERRUPT_InterruptManager
  3678 ;; This function uses a non-reentrant model
  3679 ;;
  3680                           
  3681                           
  3682                           ;psect for function _TMR2_ISR
  3683  036B                     _TMR2_ISR:
  3684  036B                     i1l1677:	
  3685                           ;incstack = 0
  3686                           ; Regs used in _TMR2_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3687                           
  3688                           
  3689                           ;tmr2.c: 129: PIR1bits.TMR2IF = 0;
  3690  036B  0020               	movlb	0	; select bank0
  3691  036C  1091               	bcf	17,1	;volatile
  3692  036D                     i1l1679:
  3693                           
  3694                           ;tmr2.c: 133: TMR2_CallBack();
  3695  036D  3182  22FE  3183   	fcall	_TMR2_CallBack
  3696  0370                     i1l107:
  3697  0370  0008               	return
  3698  0371                     __end_of_TMR2_ISR:
  3699                           
  3700                           	psect	text18
  3701  02FE                     __ptext18:	
  3702 ;; *************** function _TMR2_CallBack *****************
  3703 ;; Defined at:
  3704 ;;		line 136 in file "mcc_generated_files/tmr2.c"
  3705 ;; Parameters:    Size  Location     Type
  3706 ;;		None
  3707 ;; Auto vars:     Size  Location     Type
  3708 ;;		None
  3709 ;; Return value:  Size  Location     Type
  3710 ;;                  1    wreg      void 
  3711 ;; Registers used:
  3712 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3713 ;; Tracked objects:
  3714 ;;		On entry : 0/0
  3715 ;;		On exit  : 0/0
  3716 ;;		Unchanged: 0/0
  3717 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3718 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3719 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3720 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3721 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3722 ;;Total ram usage:        0 bytes
  3723 ;; Hardware stack levels used:    1
  3724 ;; Hardware stack levels required when called:    4
  3725 ;; This function calls:
  3726 ;;		Absolute function
  3727 ;;		_TMR2_DefaultInterruptHandler
  3728 ;; This function is called by:
  3729 ;;		_TMR2_ISR
  3730 ;; This function uses a non-reentrant model
  3731 ;;
  3732                           
  3733                           
  3734                           ;psect for function _TMR2_CallBack
  3735  02FE                     _TMR2_CallBack:
  3736  02FE                     i1l1627:	
  3737                           ;incstack = 0
  3738                           ; Regs used in _TMR2_CallBack: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3739                           
  3740                           
  3741                           ;tmr2.c: 140: if(TMR2_InterruptHandler)
  3742  02FE  0020               	movlb	0	; select bank0
  3743  02FF  085F               	movf	_TMR2_InterruptHandler,w
  3744  0300  0460               	iorwf	_TMR2_InterruptHandler+1,w
  3745  0301  1903               	btfsc	3,2
  3746  0302  2B04               	goto	u71_21
  3747  0303  2B05               	goto	u71_20
  3748  0304                     u71_21:
  3749  0304  2B0A               	goto	i1l111
  3750  0305                     u71_20:
  3751  0305                     i1l1629:
  3752                           
  3753                           ;tmr2.c: 141: {;tmr2.c: 142: TMR2_InterruptHandler();
  3754  0305  0860               	movf	_TMR2_InterruptHandler+1,w
  3755  0306  008A               	movwf	10
  3756  0307  085F               	movf	_TMR2_InterruptHandler,w
  3757  0308  000A               	callw
  3758  0309  3182               	pagesel	$
  3759  030A                     i1l111:
  3760  030A  0008               	return
  3761  030B                     __end_of_TMR2_CallBack:
  3762                           
  3763                           	psect	text19
  3764  01F8                     __ptext19:	
  3765 ;; *************** function _TMR2_DefaultInterruptHandler *****************
  3766 ;; Defined at:
  3767 ;;		line 155 in file "mcc_generated_files/tmr2.c"
  3768 ;; Parameters:    Size  Location     Type
  3769 ;;		None
  3770 ;; Auto vars:     Size  Location     Type
  3771 ;;		None
  3772 ;; Return value:  Size  Location     Type
  3773 ;;                  1    wreg      void 
  3774 ;; Registers used:
  3775 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3776 ;; Tracked objects:
  3777 ;;		On entry : 0/0
  3778 ;;		On exit  : 0/0
  3779 ;;		Unchanged: 0/0
  3780 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3781 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3782 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3783 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3784 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3785 ;;Total ram usage:        0 bytes
  3786 ;; Hardware stack levels used:    1
  3787 ;; Hardware stack levels required when called:    3
  3788 ;; This function calls:
  3789 ;;		_ADC_GetConversion
  3790 ;;		_ADC_IsConversionDone
  3791 ;;		_printf
  3792 ;; This function is called by:
  3793 ;;		_TMR2_Initialize
  3794 ;;		_TMR2_CallBack
  3795 ;; This function uses a non-reentrant model
  3796 ;;
  3797                           
  3798                           
  3799                           ;psect for function _TMR2_DefaultInterruptHandler
  3800  01F8                     _TMR2_DefaultInterruptHandler:
  3801  01F8                     i1l1541:	
  3802                           ;incstack = 0
  3803                           ; Regs used in _TMR2_DefaultInterruptHandler: [wreg-fsr1h+status,2+status,0+pclath+cstac
      +                          k]
  3804                           
  3805                           
  3806                           ;tmr2.c: 159: cnt++;
  3807  01F8  3001               	movlw	1
  3808  01F9  0020               	movlb	0	; select bank0
  3809  01FA  07BC               	addwf	_cnt,f
  3810  01FB  3000               	movlw	0
  3811  01FC  3DBD               	addwfc	_cnt+1,f
  3812                           
  3813                           ;tmr2.c: 161: if (cnt >= 100) {
  3814  01FD  3000               	movlw	0
  3815  01FE  023D               	subwf	_cnt+1,w
  3816  01FF  3064               	movlw	100
  3817  0200  1903               	skipnz
  3818  0201  023C               	subwf	_cnt,w
  3819  0202  1C03               	skipc
  3820  0203  2A05               	goto	u68_21
  3821  0204  2A06               	goto	u68_20
  3822  0205                     u68_21:
  3823  0205  2A27               	goto	i1l123
  3824  0206                     u68_20:
  3825  0206                     i1l1543:
  3826                           
  3827                           ;tmr2.c: 162: if (ADC_IsConversionDone()) {
  3828  0206  3183  233A  3181   	fcall	_ADC_IsConversionDone
  3829  0209  3A00               	xorlw	0
  3830  020A  1903               	skipnz
  3831  020B  2A0D               	goto	u69_21
  3832  020C  2A0E               	goto	u69_20
  3833  020D                     u69_21:
  3834  020D  2A22               	goto	i1l1549
  3835  020E                     u69_20:
  3836  020E                     i1l1545:
  3837                           
  3838                           ;tmr2.c: 163: val = ADC_GetConversion(Cds_IN);
  3839  020E  3002               	movlw	2
  3840  020F  3182  229B  3181   	fcall	_ADC_GetConversion
  3841  0212  0871               	movf	?_ADC_GetConversion+1,w
  3842  0213  0020               	movlb	0	; select bank0
  3843  0214  00BB               	movwf	_val+1
  3844  0215  0870               	movf	?_ADC_GetConversion,w
  3845  0216  00BA               	movwf	_val
  3846  0217                     i1l1547:
  3847                           
  3848                           ;tmr2.c: 164: printf("%d\r\n", val);
  3849  0217  3077               	movlw	low (STR_1| (0+32768))
  3850  0218  00C4               	movwf	printf@f
  3851  0219  3083               	movlw	high (STR_1| (0+32768))
  3852  021A  00C5               	movwf	printf@f+1
  3853  021B  083B               	movf	_val+1,w
  3854  021C  00C7               	movwf	?_printf+3
  3855  021D  083A               	movf	_val,w
  3856  021E  00C6               	movwf	?_printf+2
  3857  021F  3180  2048  3181   	fcall	_printf
  3858  0222                     i1l1549:
  3859                           
  3860                           ;tmr2.c: 165: };tmr2.c: 167: cnt = 0;
  3861  0222  0020               	movlb	0	; select bank0
  3862  0223  01BC               	clrf	_cnt
  3863  0224  01BD               	clrf	_cnt+1
  3864  0225                     i1l1551:
  3865                           
  3866                           ;tmr2.c: 168: val = 0;
  3867  0225  01BA               	clrf	_val
  3868  0226  01BB               	clrf	_val+1
  3869  0227                     i1l123:
  3870  0227  0008               	return
  3871  0228                     __end_of_TMR2_DefaultInterruptHandler:
  3872                           
  3873                           	psect	text20
  3874  0048                     __ptext20:	
  3875 ;; *************** function _printf *****************
  3876 ;; Defined at:
  3877 ;;		line 477 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  3878 ;; Parameters:    Size  Location     Type
  3879 ;;  f               2    0[BANK0 ] PTR const unsigned char 
  3880 ;;		 -> STR_1(5), 
  3881 ;; Auto vars:     Size  Location     Type
  3882 ;;  tmpval          4    0        struct .
  3883 ;;  val             2   11[BANK0 ] unsigned int 
  3884 ;;  cp              2    0        PTR const unsigned char 
  3885 ;;  len             2    0        unsigned int 
  3886 ;;  c               1   13[BANK0 ] unsigned char 
  3887 ;;  prec            1   10[BANK0 ] char 
  3888 ;;  flag            1    9[BANK0 ] unsigned char 
  3889 ;;  ap              1    8[BANK0 ] PTR void [1]
  3890 ;;		 -> ?_printf(2), 
  3891 ;; Return value:  Size  Location     Type
  3892 ;;                  2    0[BANK0 ] int 
  3893 ;; Registers used:
  3894 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3895 ;; Tracked objects:
  3896 ;;		On entry : 0/0
  3897 ;;		On exit  : 0/0
  3898 ;;		Unchanged: 0/0
  3899 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3900 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3901 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3902 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3903 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3904 ;;Total ram usage:       14 bytes
  3905 ;; Hardware stack levels used:    1
  3906 ;; Hardware stack levels required when called:    2
  3907 ;; This function calls:
  3908 ;;		___lwdiv
  3909 ;;		___lwmod
  3910 ;;		_putch
  3911 ;; This function is called by:
  3912 ;;		_TMR2_DefaultInterruptHandler
  3913 ;; This function uses a non-reentrant model
  3914 ;;
  3915                           
  3916                           
  3917                           ;psect for function _printf
  3918  0048                     _printf:
  3919  0048                     i1l1479:	
  3920                           ;incstack = 0
  3921                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3922                           
  3923                           
  3924                           ;doprnt.c: 479: va_list ap;;doprnt.c: 512: char c;;doprnt.c: 521: signed char prec;;dopr
      +                          nt.c: 525: unsigned char flag;;doprnt.c: 540: union {;doprnt.c: 541: unsigned long vd;;d
      +                          oprnt.c: 542: double integ;;doprnt.c: 543: } tmpval;;doprnt.c: 545: unsigned int val;;do
      +                          prnt.c: 546: unsigned len;;doprnt.c: 547: const char * cp;;doprnt.c: 550: *ap = __va_sta
      +                          rt();
  3925  0048  3046               	movlw	(low ((?_printf| 0+2)))& (0+255)
  3926  0049  0020               	movlb	0	; select bank0
  3927  004A  00C8               	movwf	??_printf
  3928  004B  0848               	movf	??_printf,w
  3929  004C  00CC               	movwf	printf@ap
  3930                           
  3931                           ;doprnt.c: 553: while((c = *f++)) {
  3932  004D  28F4               	goto	i1l1525
  3933  004E                     i1l1481:
  3934                           
  3935                           ;doprnt.c: 555: if(c != '%')
  3936  004E  3025               	movlw	37
  3937  004F  0651               	xorwf	printf@c,w
  3938  0050  1903               	btfsc	3,2
  3939  0051  2853               	goto	u61_21
  3940  0052  2854               	goto	u61_20
  3941  0053                     u61_21:
  3942  0053  2859               	goto	i1l1485
  3943  0054                     u61_20:
  3944  0054                     i1l1483:
  3945                           
  3946                           ;doprnt.c: 557: {;doprnt.c: 558: (putch(c) );
  3947  0054  0851               	movf	printf@c,w
  3948  0055  3183  2371  3180   	fcall	_putch
  3949                           
  3950                           ;doprnt.c: 559: continue;
  3951  0058  28F4               	goto	i1l1525
  3952  0059                     i1l1485:
  3953                           
  3954                           ;doprnt.c: 560: };doprnt.c: 565: flag = 0;
  3955  0059  01CD               	clrf	printf@flag
  3956  005A                     i1l1489:	
  3957                           ;doprnt.c: 661: switch(c = *f++) {
  3958                           
  3959  005A  0845               	movf	printf@f+1,w
  3960  005B  00C9               	movwf	??_printf+1
  3961  005C  0844               	movf	printf@f,w
  3962  005D  00C8               	movwf	??_printf
  3963  005E  0AC4               	incf	printf@f,f
  3964  005F  1903               	skipnz
  3965  0060  0AC5               	incf	printf@f+1,f
  3966  0061  0848               	movf	??_printf,w
  3967  0062  0084               	movwf	4
  3968  0063  0849               	movf	??_printf+1,w
  3969  0064  0085               	movwf	5
  3970  0065  0800               	movf	0,w	;code access
  3971  0066  00D1               	movwf	printf@c
  3972                           
  3973                           ; Switch size 1, requested type "simple"
  3974                           ; Number of cases is 3, Range of values is 0 to 105
  3975                           ; switch strategies available:
  3976                           ; Name         Instructions Cycles
  3977                           ; simple_byte           10     6 (average)
  3978                           ; direct_byte          218     6 (fixed)
  3979                           ; jumptable            260     6 (fixed)
  3980                           ;	Chosen strategy is simple_byte
  3981  0067  3A00               	xorlw	0	; case 0
  3982  0068  1903               	skipnz
  3983  0069  2909               	goto	i1l481
  3984  006A  3A64               	xorlw	100	; case 100
  3985  006B  1903               	skipnz
  3986  006C  2871               	goto	i1l1491
  3987  006D  3A0D               	xorlw	13	; case 105
  3988  006E  1903               	skipnz
  3989  006F  2871               	goto	i1l1491
  3990  0070  28F4               	goto	i1l1525
  3991  0071                     i1l1491:
  3992                           
  3993                           ;doprnt.c: 1279: {;doprnt.c: 1285: val = (unsigned int)(*(int *)__va_arg((*(int **)ap), 
      +                          (int)0));
  3994  0071  084C               	movf	printf@ap,w
  3995  0072  0086               	movwf	6
  3996  0073  0187               	clrf	7
  3997  0074  3F40               	moviw [0]fsr1
  3998  0075  00CF               	movwf	printf@val
  3999  0076  3F41               	moviw [1]fsr1
  4000  0077  00D0               	movwf	printf@val+1
  4001  0078                     i1l1493:
  4002  0078  3002               	movlw	2
  4003  0079  00C8               	movwf	??_printf
  4004  007A  0848               	movf	??_printf,w
  4005  007B  07CC               	addwf	printf@ap,f
  4006  007C                     i1l1495:
  4007                           
  4008                           ;doprnt.c: 1287: if((int)val < 0) {
  4009  007C  1FD0               	btfss	printf@val+1,7
  4010  007D  287F               	goto	u62_21
  4011  007E  2880               	goto	u62_20
  4012  007F                     u62_21:
  4013  007F  2889               	goto	i1l1501
  4014  0080                     u62_20:
  4015  0080                     i1l1497:
  4016                           
  4017                           ;doprnt.c: 1288: flag |= 0x03;
  4018  0080  3003               	movlw	3
  4019  0081  00C8               	movwf	??_printf
  4020  0082  0848               	movf	??_printf,w
  4021  0083  04CD               	iorwf	printf@flag,f
  4022  0084                     i1l1499:
  4023                           
  4024                           ;doprnt.c: 1289: val = -val;
  4025  0084  09CF               	comf	printf@val,f
  4026  0085  09D0               	comf	printf@val+1,f
  4027  0086  0ACF               	incf	printf@val,f
  4028  0087  1903               	skipnz
  4029  0088  0AD0               	incf	printf@val+1,f
  4030  0089                     i1l1501:
  4031                           
  4032                           ;doprnt.c: 1290: };doprnt.c: 1292: };doprnt.c: 1331: for(c = 1 ; c != sizeof dpowers/siz
      +                          eof dpowers[0] ; c++)
  4033  0089  01D1               	clrf	printf@c
  4034  008A  0AD1               	incf	printf@c,f
  4035  008B                     i1l1507:
  4036                           
  4037                           ;doprnt.c: 1332: if(val < dpowers[c])
  4038  008B  0851               	movf	printf@c,w
  4039  008C  00C8               	movwf	??_printf
  4040  008D  01C9               	clrf	??_printf+1
  4041  008E  35C8               	lslf	??_printf,f
  4042  008F  0DC9               	rlf	??_printf+1,f
  4043  0090  3016               	movlw	low (_dpowers| (0+32768))
  4044  0091  0748               	addwf	??_printf,w
  4045  0092  0084               	movwf	4
  4046  0093  3083               	movlw	high (_dpowers| (0+32768))
  4047  0094  3D49               	addwfc	??_printf+1,w
  4048  0095  0085               	movwf	5
  4049  0096  3F00               	moviw [0]fsr0
  4050  0097  00CA               	movwf	??_printf+2
  4051  0098  3F01               	moviw [1]fsr0
  4052  0099  00CB               	movwf	??_printf+3
  4053  009A  084B               	movf	??_printf+3,w
  4054  009B  0250               	subwf	printf@val+1,w
  4055  009C  1D03               	skipz
  4056  009D  28A0               	goto	u63_25
  4057  009E  084A               	movf	??_printf+2,w
  4058  009F  024F               	subwf	printf@val,w
  4059  00A0                     u63_25:
  4060  00A0  1803               	skipnc
  4061  00A1  28A3               	goto	u63_21
  4062  00A2  28A4               	goto	u63_20
  4063  00A3                     u63_21:
  4064  00A3  28A5               	goto	i1l1511
  4065  00A4                     u63_20:
  4066  00A4  28AF               	goto	i1l1513
  4067  00A5                     i1l1511:
  4068  00A5  3001               	movlw	1
  4069  00A6  00C8               	movwf	??_printf
  4070  00A7  0848               	movf	??_printf,w
  4071  00A8  07D1               	addwf	printf@c,f
  4072  00A9  3005               	movlw	5
  4073  00AA  0651               	xorwf	printf@c,w
  4074  00AB  1D03               	btfss	3,2
  4075  00AC  28AE               	goto	u64_21
  4076  00AD  28AF               	goto	u64_20
  4077  00AE                     u64_21:
  4078  00AE  288B               	goto	i1l1507
  4079  00AF                     u64_20:
  4080  00AF                     i1l1513:
  4081                           
  4082                           ;doprnt.c: 1448: {;doprnt.c: 1464: if(flag & 0x03)
  4083  00AF  084D               	movf	printf@flag,w
  4084  00B0  3903               	andlw	3
  4085  00B1  1903               	btfsc	3,2
  4086  00B2  28B4               	goto	u65_21
  4087  00B3  28B5               	goto	u65_20
  4088  00B4                     u65_21:
  4089  00B4  28B9               	goto	i1l1517
  4090  00B5                     u65_20:
  4091  00B5                     i1l1515:
  4092                           
  4093                           ;doprnt.c: 1465: (putch('-') );
  4094  00B5  302D               	movlw	45
  4095  00B6  3183  2371  3180   	fcall	_putch
  4096  00B9                     i1l1517:
  4097                           
  4098                           ;doprnt.c: 1495: };doprnt.c: 1498: prec = c;
  4099  00B9  0020               	movlb	0	; select bank0
  4100  00BA  0851               	movf	printf@c,w
  4101  00BB  00C8               	movwf	??_printf
  4102  00BC  0848               	movf	??_printf,w
  4103  00BD  00CE               	movwf	printf@prec
  4104                           
  4105                           ;doprnt.c: 1500: while(prec--) {
  4106  00BE  28EA               	goto	i1l1523
  4107  00BF                     i1l1519:
  4108                           
  4109                           ;doprnt.c: 1504: {;doprnt.c: 1515: c = (val / dpowers[(unsigned char)prec]) % 10 + '0';
  4110  00BF  300A               	movlw	10
  4111  00C0  00F8               	movwf	___lwmod@divisor
  4112  00C1  3000               	movlw	0
  4113  00C2  00F9               	movwf	___lwmod@divisor+1
  4114  00C3  084E               	movf	printf@prec,w
  4115  00C4  00C8               	movwf	??_printf
  4116  00C5  01C9               	clrf	??_printf+1
  4117  00C6  35C8               	lslf	??_printf,f
  4118  00C7  0DC9               	rlf	??_printf+1,f
  4119  00C8  3016               	movlw	low (_dpowers| (0+32768))
  4120  00C9  0748               	addwf	??_printf,w
  4121  00CA  0084               	movwf	4
  4122  00CB  3083               	movlw	high (_dpowers| (0+32768))
  4123  00CC  3D49               	addwfc	??_printf+1,w
  4124  00CD  0085               	movwf	5
  4125  00CE  3F00               	moviw [0]fsr0
  4126  00CF  00F0               	movwf	___lwdiv@divisor
  4127  00D0  3F01               	moviw [1]fsr0
  4128  00D1  00F1               	movwf	___lwdiv@divisor+1
  4129  00D2  0850               	movf	printf@val+1,w
  4130  00D3  00F3               	movwf	___lwdiv@dividend+1
  4131  00D4  084F               	movf	printf@val,w
  4132  00D5  00F2               	movwf	___lwdiv@dividend
  4133  00D6  3181  214E  3180   	fcall	___lwdiv
  4134  00D9  0871               	movf	?___lwdiv+1,w
  4135  00DA  00FB               	movwf	___lwmod@dividend+1
  4136  00DB  0870               	movf	?___lwdiv,w
  4137  00DC  00FA               	movwf	___lwmod@dividend
  4138  00DD  3181  21C4  3180   	fcall	___lwmod
  4139  00E0  0878               	movf	?___lwmod,w
  4140  00E1  3E30               	addlw	48
  4141  00E2  0020               	movlb	0	; select bank0
  4142  00E3  00CA               	movwf	??_printf+2
  4143  00E4  084A               	movf	??_printf+2,w
  4144  00E5  00D1               	movwf	printf@c
  4145  00E6                     i1l1521:
  4146                           
  4147                           ;doprnt.c: 1549: };doprnt.c: 1550: (putch(c) );
  4148  00E6  0851               	movf	printf@c,w
  4149  00E7  3183  2371  3180   	fcall	_putch
  4150  00EA                     i1l1523:
  4151  00EA  30FF               	movlw	255
  4152  00EB  0020               	movlb	0	; select bank0
  4153  00EC  00C8               	movwf	??_printf
  4154  00ED  0848               	movf	??_printf,w
  4155  00EE  07CE               	addwf	printf@prec,f
  4156  00EF  0A4E               	incf	printf@prec,w
  4157  00F0  1D03               	btfss	3,2
  4158  00F1  28F3               	goto	u66_21
  4159  00F2  28F4               	goto	u66_20
  4160  00F3                     u66_21:
  4161  00F3  28BF               	goto	i1l1519
  4162  00F4                     u66_20:
  4163  00F4                     i1l1525:
  4164  00F4  0020               	movlb	0	; select bank0
  4165  00F5  0845               	movf	printf@f+1,w
  4166  00F6  00C9               	movwf	??_printf+1
  4167  00F7  0844               	movf	printf@f,w
  4168  00F8  00C8               	movwf	??_printf
  4169  00F9  0AC4               	incf	printf@f,f
  4170  00FA  1903               	skipnz
  4171  00FB  0AC5               	incf	printf@f+1,f
  4172  00FC  0848               	movf	??_printf,w
  4173  00FD  0084               	movwf	4
  4174  00FE  0849               	movf	??_printf+1,w
  4175  00FF  0085               	movwf	5
  4176  0100  0800               	movf	0,w	;code access
  4177  0101  00CA               	movwf	??_printf+2
  4178  0102  084A               	movf	??_printf+2,w
  4179  0103  00D1               	movwf	printf@c
  4180  0104  0851               	movf	printf@c,w
  4181  0105  1D03               	btfss	3,2
  4182  0106  2908               	goto	u67_21
  4183  0107  2909               	goto	u67_20
  4184  0108                     u67_21:
  4185  0108  284E               	goto	i1l1481
  4186  0109                     u67_20:
  4187  0109                     i1l481:
  4188  0109  0008               	return
  4189  010A                     __end_of_printf:
  4190                           
  4191                           	psect	text21
  4192  0371                     __ptext21:	
  4193 ;; *************** function _putch *****************
  4194 ;; Defined at:
  4195 ;;		line 201 in file "mcc_generated_files/eusart.c"
  4196 ;; Parameters:    Size  Location     Type
  4197 ;;  txData          1    wreg     unsigned char 
  4198 ;; Auto vars:     Size  Location     Type
  4199 ;;  txData          1    2[COMMON] unsigned char 
  4200 ;; Return value:  Size  Location     Type
  4201 ;;                  1    wreg      void 
  4202 ;; Registers used:
  4203 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4204 ;; Tracked objects:
  4205 ;;		On entry : 0/0
  4206 ;;		On exit  : 0/0
  4207 ;;		Unchanged: 0/0
  4208 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4209 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4210 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4211 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4212 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4213 ;;Total ram usage:        1 bytes
  4214 ;; Hardware stack levels used:    1
  4215 ;; Hardware stack levels required when called:    1
  4216 ;; This function calls:
  4217 ;;		_EUSART_Write
  4218 ;; This function is called by:
  4219 ;;		_printf
  4220 ;; This function uses a non-reentrant model
  4221 ;;
  4222                           
  4223                           
  4224                           ;psect for function _putch
  4225  0371                     _putch:
  4226                           
  4227                           ;incstack = 0
  4228                           ; Regs used in _putch: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4229                           ;putch@txData stored from wreg
  4230  0371  00F2               	movwf	putch@txData
  4231  0372                     i1l1413:
  4232                           
  4233                           ;eusart.c: 203: EUSART_Write(txData);
  4234  0372  0872               	movf	putch@txData,w
  4235  0373  3182  2228  3183   	fcall	_EUSART_Write
  4236  0376                     i1l305:
  4237  0376  0008               	return
  4238  0377                     __end_of_putch:
  4239                           
  4240                           	psect	text22
  4241  0228                     __ptext22:	
  4242 ;; *************** function _EUSART_Write *****************
  4243 ;; Defined at:
  4244 ;;		line 173 in file "mcc_generated_files/eusart.c"
  4245 ;; Parameters:    Size  Location     Type
  4246 ;;  txData          1    wreg     unsigned char 
  4247 ;; Auto vars:     Size  Location     Type
  4248 ;;  txData          1    1[COMMON] unsigned char 
  4249 ;; Return value:  Size  Location     Type
  4250 ;;                  1    wreg      void 
  4251 ;; Registers used:
  4252 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4253 ;; Tracked objects:
  4254 ;;		On entry : 0/0
  4255 ;;		On exit  : 0/0
  4256 ;;		Unchanged: 0/0
  4257 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4258 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4259 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4260 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4261 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4262 ;;Total ram usage:        2 bytes
  4263 ;; Hardware stack levels used:    1
  4264 ;; This function calls:
  4265 ;;		Nothing
  4266 ;; This function is called by:
  4267 ;;		_putch
  4268 ;; This function uses a non-reentrant model
  4269 ;;
  4270                           
  4271                           
  4272                           ;psect for function _EUSART_Write
  4273  0228                     _EUSART_Write:
  4274                           
  4275                           ;incstack = 0
  4276                           ; Regs used in _EUSART_Write: [wreg+fsr1l+fsr1h+status,2+status,0]
  4277                           ;EUSART_Write@txData stored from wreg
  4278  0228  00F1               	movwf	EUSART_Write@txData
  4279  0229                     i1l1395:
  4280  0229                     i1l1397:	
  4281                           ;eusart.c: 175: while(0 == eusartTxBufferRemaining)
  4282                           
  4283  0229  0020               	movlb	0	; select bank0
  4284  022A  0861               	movf	_eusartTxBufferRemaining,w	;volatile
  4285  022B  1903               	btfsc	3,2
  4286  022C  2A2E               	goto	u44_21
  4287  022D  2A2F               	goto	u44_20
  4288  022E                     u44_21:
  4289  022E  2A29               	goto	i1l1397
  4290  022F                     u44_20:
  4291  022F                     i1l295:
  4292                           
  4293                           ;eusart.c: 177: };eusart.c: 179: if(0 == PIE1bits.TXIE)
  4294  022F  0021               	movlb	1	; select bank1
  4295  0230  1A11               	btfsc	17,4	;volatile
  4296  0231  2A33               	goto	u45_21
  4297  0232  2A34               	goto	u45_20
  4298  0233                     u45_21:
  4299  0233  2A38               	goto	i1l296
  4300  0234                     u45_20:
  4301  0234                     i1l1399:
  4302                           
  4303                           ;eusart.c: 180: {;eusart.c: 181: TX1REG = txData;
  4304  0234  0871               	movf	EUSART_Write@txData,w
  4305  0235  0023               	movlb	3	; select bank3
  4306  0236  009A               	movwf	26	;volatile
  4307                           
  4308                           ;eusart.c: 182: }
  4309  0237  2A4F               	goto	i1l1411
  4310  0238                     i1l296:
  4311                           
  4312                           ;eusart.c: 183: else;eusart.c: 184: {;eusart.c: 185: PIE1bits.TXIE = 0;
  4313  0238  1211               	bcf	17,4	;volatile
  4314  0239                     i1l1401:
  4315                           
  4316                           ;eusart.c: 186: eusartTxBuffer[eusartTxHead++] = txData;
  4317  0239  0871               	movf	EUSART_Write@txData,w
  4318  023A  00F0               	movwf	??_EUSART_Write
  4319  023B  0020               	movlb	0	; select bank0
  4320  023C  0843               	movf	_eusartTxHead,w
  4321  023D  3E30               	addlw	(low (_eusartTxBuffer| 0))& (0+255)
  4322  023E  0086               	movwf	6
  4323  023F  0187               	clrf	7
  4324  0240  0870               	movf	??_EUSART_Write,w
  4325  0241  0081               	movwf	1
  4326  0242                     i1l1403:
  4327  0242  3001               	movlw	1
  4328  0243  00F0               	movwf	??_EUSART_Write
  4329  0244  0870               	movf	??_EUSART_Write,w
  4330  0245  07C3               	addwf	_eusartTxHead,f	;volatile
  4331  0246                     i1l1405:
  4332                           
  4333                           ;eusart.c: 187: if(sizeof(eusartTxBuffer) <= eusartTxHead)
  4334  0246  3008               	movlw	8
  4335  0247  0243               	subwf	_eusartTxHead,w	;volatile
  4336  0248  1C03               	skipc
  4337  0249  2A4B               	goto	u46_21
  4338  024A  2A4C               	goto	u46_20
  4339  024B                     u46_21:
  4340  024B  2A4D               	goto	i1l1409
  4341  024C                     u46_20:
  4342  024C                     i1l1407:
  4343                           
  4344                           ;eusart.c: 188: {;eusart.c: 189: eusartTxHead = 0;
  4345  024C  01C3               	clrf	_eusartTxHead	;volatile
  4346  024D                     i1l1409:
  4347                           
  4348                           ;eusart.c: 190: };eusart.c: 191: eusartTxBufferRemaining--;
  4349  024D  3001               	movlw	1
  4350  024E  02E1               	subwf	_eusartTxBufferRemaining,f	;volatile
  4351  024F                     i1l1411:
  4352                           
  4353                           ;eusart.c: 192: };eusart.c: 193: PIE1bits.TXIE = 1;
  4354  024F  0021               	movlb	1	; select bank1
  4355  0250  1611               	bsf	17,4	;volatile
  4356  0251                     i1l299:
  4357  0251  0008               	return
  4358  0252                     __end_of_EUSART_Write:
  4359                           
  4360                           	psect	text23
  4361  01C4                     __ptext23:	
  4362 ;; *************** function ___lwmod *****************
  4363 ;; Defined at:
  4364 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  4365 ;; Parameters:    Size  Location     Type
  4366 ;;  divisor         2    8[COMMON] unsigned int 
  4367 ;;  dividend        2   10[COMMON] unsigned int 
  4368 ;; Auto vars:     Size  Location     Type
  4369 ;;  counter         1   13[COMMON] unsigned char 
  4370 ;; Return value:  Size  Location     Type
  4371 ;;                  2    8[COMMON] unsigned int 
  4372 ;; Registers used:
  4373 ;;		wreg, status,2, status,0
  4374 ;; Tracked objects:
  4375 ;;		On entry : 0/0
  4376 ;;		On exit  : 0/0
  4377 ;;		Unchanged: 0/0
  4378 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4379 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4380 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4381 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4382 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4383 ;;Total ram usage:        6 bytes
  4384 ;; Hardware stack levels used:    1
  4385 ;; This function calls:
  4386 ;;		Nothing
  4387 ;; This function is called by:
  4388 ;;		_printf
  4389 ;; This function uses a non-reentrant model
  4390 ;;
  4391                           
  4392                           
  4393                           ;psect for function ___lwmod
  4394  01C4                     ___lwmod:
  4395  01C4                     i1l1441:	
  4396                           ;incstack = 0
  4397                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  4398                           
  4399  01C4  0878               	movf	___lwmod@divisor,w
  4400  01C5  0479               	iorwf	___lwmod@divisor+1,w
  4401  01C6  1903               	btfsc	3,2
  4402  01C7  29C9               	goto	u54_21
  4403  01C8  29CA               	goto	u54_20
  4404  01C9                     u54_21:
  4405  01C9  29F3               	goto	i1l1459
  4406  01CA                     u54_20:
  4407  01CA                     i1l1443:
  4408  01CA  01FD               	clrf	___lwmod@counter
  4409  01CB  0AFD               	incf	___lwmod@counter,f
  4410  01CC  29D6               	goto	i1l1449
  4411  01CD                     i1l1445:
  4412  01CD  3001               	movlw	1
  4413  01CE                     u55_25:
  4414  01CE  35F8               	lslf	___lwmod@divisor,f
  4415  01CF  0DF9               	rlf	___lwmod@divisor+1,f
  4416  01D0  0B89               	decfsz	9,f
  4417  01D1  29CE               	goto	u55_25
  4418  01D2                     i1l1447:
  4419  01D2  3001               	movlw	1
  4420  01D3  00FC               	movwf	??___lwmod
  4421  01D4  087C               	movf	??___lwmod,w
  4422  01D5  07FD               	addwf	___lwmod@counter,f
  4423  01D6                     i1l1449:
  4424  01D6  1FF9               	btfss	___lwmod@divisor+1,7
  4425  01D7  29D9               	goto	u56_21
  4426  01D8  29DA               	goto	u56_20
  4427  01D9                     u56_21:
  4428  01D9  29CD               	goto	i1l1445
  4429  01DA                     u56_20:
  4430  01DA                     i1l1451:
  4431  01DA  0879               	movf	___lwmod@divisor+1,w
  4432  01DB  027B               	subwf	___lwmod@dividend+1,w
  4433  01DC  1D03               	skipz
  4434  01DD  29E0               	goto	u57_25
  4435  01DE  0878               	movf	___lwmod@divisor,w
  4436  01DF  027A               	subwf	___lwmod@dividend,w
  4437  01E0                     u57_25:
  4438  01E0  1C03               	skipc
  4439  01E1  29E3               	goto	u57_21
  4440  01E2  29E4               	goto	u57_20
  4441  01E3                     u57_21:
  4442  01E3  29E8               	goto	i1l1455
  4443  01E4                     u57_20:
  4444  01E4                     i1l1453:
  4445  01E4  0878               	movf	___lwmod@divisor,w
  4446  01E5  02FA               	subwf	___lwmod@dividend,f
  4447  01E6  0879               	movf	___lwmod@divisor+1,w
  4448  01E7  3BFB               	subwfb	___lwmod@dividend+1,f
  4449  01E8                     i1l1455:
  4450  01E8  3001               	movlw	1
  4451  01E9                     u58_25:
  4452  01E9  36F9               	lsrf	___lwmod@divisor+1,f
  4453  01EA  0CF8               	rrf	___lwmod@divisor,f
  4454  01EB  0B89               	decfsz	9,f
  4455  01EC  29E9               	goto	u58_25
  4456  01ED                     i1l1457:
  4457  01ED  3001               	movlw	1
  4458  01EE  02FD               	subwf	___lwmod@counter,f
  4459  01EF  1D03               	btfss	3,2
  4460  01F0  29F2               	goto	u59_21
  4461  01F1  29F3               	goto	u59_20
  4462  01F2                     u59_21:
  4463  01F2  29DA               	goto	i1l1451
  4464  01F3                     u59_20:
  4465  01F3                     i1l1459:
  4466  01F3  087B               	movf	___lwmod@dividend+1,w
  4467  01F4  00F9               	movwf	?___lwmod+1
  4468  01F5  087A               	movf	___lwmod@dividend,w
  4469  01F6  00F8               	movwf	?___lwmod
  4470  01F7                     i1l767:
  4471  01F7  0008               	return
  4472  01F8                     __end_of___lwmod:
  4473                           
  4474                           	psect	text24
  4475  014E                     __ptext24:	
  4476 ;; *************** function ___lwdiv *****************
  4477 ;; Defined at:
  4478 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  4479 ;; Parameters:    Size  Location     Type
  4480 ;;  divisor         2    0[COMMON] unsigned int 
  4481 ;;  dividend        2    2[COMMON] unsigned int 
  4482 ;; Auto vars:     Size  Location     Type
  4483 ;;  quotient        2    5[COMMON] unsigned int 
  4484 ;;  counter         1    7[COMMON] unsigned char 
  4485 ;; Return value:  Size  Location     Type
  4486 ;;                  2    0[COMMON] unsigned int 
  4487 ;; Registers used:
  4488 ;;		wreg, status,2, status,0
  4489 ;; Tracked objects:
  4490 ;;		On entry : 0/0
  4491 ;;		On exit  : 0/0
  4492 ;;		Unchanged: 0/0
  4493 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4494 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4495 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4496 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4497 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4498 ;;Total ram usage:        8 bytes
  4499 ;; Hardware stack levels used:    1
  4500 ;; This function calls:
  4501 ;;		Nothing
  4502 ;; This function is called by:
  4503 ;;		_printf
  4504 ;; This function uses a non-reentrant model
  4505 ;;
  4506                           
  4507                           
  4508                           ;psect for function ___lwdiv
  4509  014E                     ___lwdiv:
  4510  014E                     i1l1415:	
  4511                           ;incstack = 0
  4512                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4513                           
  4514  014E  01F5               	clrf	___lwdiv@quotient
  4515  014F  01F6               	clrf	___lwdiv@quotient+1
  4516  0150                     i1l1417:
  4517  0150  0870               	movf	___lwdiv@divisor,w
  4518  0151  0471               	iorwf	___lwdiv@divisor+1,w
  4519  0152  1903               	btfsc	3,2
  4520  0153  2955               	goto	u47_21
  4521  0154  2956               	goto	u47_20
  4522  0155                     u47_21:
  4523  0155  2985               	goto	i1l1437
  4524  0156                     u47_20:
  4525  0156                     i1l1419:
  4526  0156  01F7               	clrf	___lwdiv@counter
  4527  0157  0AF7               	incf	___lwdiv@counter,f
  4528  0158  2962               	goto	i1l1425
  4529  0159                     i1l1421:
  4530  0159  3001               	movlw	1
  4531  015A                     u48_25:
  4532  015A  35F0               	lslf	___lwdiv@divisor,f
  4533  015B  0DF1               	rlf	___lwdiv@divisor+1,f
  4534  015C  0B89               	decfsz	9,f
  4535  015D  295A               	goto	u48_25
  4536  015E                     i1l1423:
  4537  015E  3001               	movlw	1
  4538  015F  00F4               	movwf	??___lwdiv
  4539  0160  0874               	movf	??___lwdiv,w
  4540  0161  07F7               	addwf	___lwdiv@counter,f
  4541  0162                     i1l1425:
  4542  0162  1FF1               	btfss	___lwdiv@divisor+1,7
  4543  0163  2965               	goto	u49_21
  4544  0164  2966               	goto	u49_20
  4545  0165                     u49_21:
  4546  0165  2959               	goto	i1l1421
  4547  0166                     u49_20:
  4548  0166                     i1l1427:
  4549  0166  3001               	movlw	1
  4550  0167                     u50_25:
  4551  0167  35F5               	lslf	___lwdiv@quotient,f
  4552  0168  0DF6               	rlf	___lwdiv@quotient+1,f
  4553  0169  0B89               	decfsz	9,f
  4554  016A  2967               	goto	u50_25
  4555  016B  0871               	movf	___lwdiv@divisor+1,w
  4556  016C  0273               	subwf	___lwdiv@dividend+1,w
  4557  016D  1D03               	skipz
  4558  016E  2971               	goto	u51_25
  4559  016F  0870               	movf	___lwdiv@divisor,w
  4560  0170  0272               	subwf	___lwdiv@dividend,w
  4561  0171                     u51_25:
  4562  0171  1C03               	skipc
  4563  0172  2974               	goto	u51_21
  4564  0173  2975               	goto	u51_20
  4565  0174                     u51_21:
  4566  0174  297A               	goto	i1l1433
  4567  0175                     u51_20:
  4568  0175                     i1l1429:
  4569  0175  0870               	movf	___lwdiv@divisor,w
  4570  0176  02F2               	subwf	___lwdiv@dividend,f
  4571  0177  0871               	movf	___lwdiv@divisor+1,w
  4572  0178  3BF3               	subwfb	___lwdiv@dividend+1,f
  4573  0179                     i1l1431:
  4574  0179  1475               	bsf	___lwdiv@quotient,0
  4575  017A                     i1l1433:
  4576  017A  3001               	movlw	1
  4577  017B                     u52_25:
  4578  017B  36F1               	lsrf	___lwdiv@divisor+1,f
  4579  017C  0CF0               	rrf	___lwdiv@divisor,f
  4580  017D  0B89               	decfsz	9,f
  4581  017E  297B               	goto	u52_25
  4582  017F                     i1l1435:
  4583  017F  3001               	movlw	1
  4584  0180  02F7               	subwf	___lwdiv@counter,f
  4585  0181  1D03               	btfss	3,2
  4586  0182  2984               	goto	u53_21
  4587  0183  2985               	goto	u53_20
  4588  0184                     u53_21:
  4589  0184  2966               	goto	i1l1427
  4590  0185                     u53_20:
  4591  0185                     i1l1437:
  4592  0185  0876               	movf	___lwdiv@quotient+1,w
  4593  0186  00F1               	movwf	?___lwdiv+1
  4594  0187  0875               	movf	___lwdiv@quotient,w
  4595  0188  00F0               	movwf	?___lwdiv
  4596  0189                     i1l757:
  4597  0189  0008               	return
  4598  018A                     __end_of___lwdiv:
  4599                           
  4600                           	psect	text25
  4601  033A                     __ptext25:	
  4602 ;; *************** function _ADC_IsConversionDone *****************
  4603 ;; Defined at:
  4604 ;;		line 103 in file "mcc_generated_files/adc.c"
  4605 ;; Parameters:    Size  Location     Type
  4606 ;;		None
  4607 ;; Auto vars:     Size  Location     Type
  4608 ;;		None
  4609 ;; Return value:  Size  Location     Type
  4610 ;;                  1    wreg      unsigned char 
  4611 ;; Registers used:
  4612 ;;		wreg, status,0
  4613 ;; Tracked objects:
  4614 ;;		On entry : 0/0
  4615 ;;		On exit  : 0/0
  4616 ;;		Unchanged: 0/0
  4617 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4618 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4619 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4620 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4621 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4622 ;;Total ram usage:        0 bytes
  4623 ;; Hardware stack levels used:    1
  4624 ;; This function calls:
  4625 ;;		Nothing
  4626 ;; This function is called by:
  4627 ;;		_TMR2_DefaultInterruptHandler
  4628 ;; This function uses a non-reentrant model
  4629 ;;
  4630                           
  4631                           
  4632                           ;psect for function _ADC_IsConversionDone
  4633  033A                     _ADC_IsConversionDone:
  4634  033A                     i1l1463:	
  4635                           ;incstack = 0
  4636                           ; Regs used in _ADC_IsConversionDone: [wreg+status,0]
  4637                           
  4638                           
  4639                           ;adc.c: 106: return ((bool)(!ADCON0bits.GO_nDONE));
  4640  033A  1003               	clrc
  4641  033B  0021               	movlb	1	; select bank1
  4642  033C  1C9D               	btfss	29,1	;volatile
  4643  033D  1403               	setc
  4644  033E  3000               	movlw	0
  4645  033F  3D09               	addwfc	9,w
  4646  0340                     i1l184:
  4647  0340  0008               	return
  4648  0341                     __end_of_ADC_IsConversionDone:
  4649                           
  4650                           	psect	text26
  4651  029B                     __ptext26:	
  4652 ;; *************** function _ADC_GetConversion *****************
  4653 ;; Defined at:
  4654 ;;		line 115 in file "mcc_generated_files/adc.c"
  4655 ;; Parameters:    Size  Location     Type
  4656 ;;  channel         1    wreg     enum E3994
  4657 ;; Auto vars:     Size  Location     Type
  4658 ;;  channel         1    3[COMMON] enum E3994
  4659 ;; Return value:  Size  Location     Type
  4660 ;;                  2    0[COMMON] unsigned int 
  4661 ;; Registers used:
  4662 ;;		wreg, status,2, status,0
  4663 ;; Tracked objects:
  4664 ;;		On entry : 0/0
  4665 ;;		On exit  : 0/0
  4666 ;;		Unchanged: 0/0
  4667 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4668 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4669 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4670 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4671 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4672 ;;Total ram usage:        4 bytes
  4673 ;; Hardware stack levels used:    1
  4674 ;; This function calls:
  4675 ;;		Nothing
  4676 ;; This function is called by:
  4677 ;;		_TMR2_DefaultInterruptHandler
  4678 ;; This function uses a non-reentrant model
  4679 ;;
  4680                           
  4681                           
  4682                           ;psect for function _ADC_GetConversion
  4683  029B                     _ADC_GetConversion:
  4684                           
  4685                           ;incstack = 0
  4686                           ; Regs used in _ADC_GetConversion: [wreg+status,2+status,0]
  4687                           ;ADC_GetConversion@channel stored from wreg
  4688  029B  00F3               	movwf	ADC_GetConversion@channel
  4689  029C                     i1l1467:
  4690                           
  4691                           ;adc.c: 118: ADCON0bits.CHS = channel;
  4692  029C  0873               	movf	ADC_GetConversion@channel,w
  4693  029D  00F2               	movwf	??_ADC_GetConversion
  4694  029E  0DF2               	rlf	??_ADC_GetConversion,f
  4695  029F  0DF2               	rlf	??_ADC_GetConversion,f
  4696  02A0  0021               	movlb	1	; select bank1
  4697  02A1  081D               	movf	29,w	;volatile
  4698  02A2  0672               	xorwf	??_ADC_GetConversion,w
  4699  02A3  3983               	andlw	-125
  4700  02A4  0672               	xorwf	??_ADC_GetConversion,w
  4701  02A5  009D               	movwf	29	;volatile
  4702  02A6                     i1l1469:
  4703                           
  4704                           ;adc.c: 121: ADCON0bits.ADON = 1;
  4705  02A6  141D               	bsf	29,0	;volatile
  4706  02A7                     i1l1471:
  4707                           
  4708                           ;adc.c: 124: _delay((unsigned long)((5)*(4000000/4000000.0)));
  4709  02A7  3200               	nop2	;2 cycle nop
  4710  02A8  3200               	nop2	;2 cycle nop
  4711  02A9  0000               	nop
  4712  02AA                     i1l1473:
  4713                           
  4714                           ;adc.c: 127: ADCON0bits.GO_nDONE = 1;
  4715  02AA  0021               	movlb	1	; select bank1
  4716  02AB  149D               	bsf	29,1	;volatile
  4717  02AC                     i1l190:	
  4718                           ;adc.c: 131: {
  4719                           
  4720  02AC  189D               	btfsc	29,1	;volatile
  4721  02AD  2AAF               	goto	u60_21
  4722  02AE  2AB0               	goto	u60_20
  4723  02AF                     u60_21:
  4724  02AF  2AAC               	goto	i1l190
  4725  02B0                     u60_20:
  4726  02B0                     i1l1475:
  4727                           
  4728                           ;adc.c: 132: };adc.c: 135: return ((adc_result_t)((ADRESH << 8) + ADRESL));
  4729  02B0  081C               	movf	28,w	;volatile
  4730  02B1  00F1               	movwf	?_ADC_GetConversion+1
  4731  02B2  081B               	movf	27,w	;volatile
  4732  02B3  00F0               	movwf	?_ADC_GetConversion
  4733  02B4                     i1l193:
  4734  02B4  0008               	return
  4735  02B5                     __end_of_ADC_GetConversion:
  4736                           
  4737                           	psect	text27
  4738  0279                     __ptext27:	
  4739 ;; *************** function _EUSART_Transmit_ISR *****************
  4740 ;; Defined at:
  4741 ;;		line 206 in file "mcc_generated_files/eusart.c"
  4742 ;; Parameters:    Size  Location     Type
  4743 ;;		None
  4744 ;; Auto vars:     Size  Location     Type
  4745 ;;		None
  4746 ;; Return value:  Size  Location     Type
  4747 ;;                  1    wreg      void 
  4748 ;; Registers used:
  4749 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4750 ;; Tracked objects:
  4751 ;;		On entry : 0/0
  4752 ;;		On exit  : 0/0
  4753 ;;		Unchanged: 0/0
  4754 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4755 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4756 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4757 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4758 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4759 ;;Total ram usage:        1 bytes
  4760 ;; Hardware stack levels used:    1
  4761 ;; This function calls:
  4762 ;;		Nothing
  4763 ;; This function is called by:
  4764 ;;		_EUSART_Initialize
  4765 ;;		_INTERRUPT_InterruptManager
  4766 ;; This function uses a non-reentrant model
  4767 ;;
  4768                           
  4769                           
  4770                           ;psect for function _EUSART_Transmit_ISR
  4771  0279                     _EUSART_Transmit_ISR:
  4772  0279                     i1l1705:	
  4773                           ;incstack = 0
  4774                           ; Regs used in _EUSART_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
  4775                           
  4776                           
  4777                           ;eusart.c: 210: if(sizeof(eusartTxBuffer) > eusartTxBufferRemaining)
  4778  0279  3008               	movlw	8
  4779  027A  0020               	movlb	0	; select bank0
  4780  027B  0261               	subwf	_eusartTxBufferRemaining,w	;volatile
  4781  027C  1803               	skipnc
  4782  027D  2A7F               	goto	u74_21
  4783  027E  2A80               	goto	u74_20
  4784  027F                     u74_21:
  4785  027F  2A98               	goto	i1l308
  4786  0280                     u74_20:
  4787  0280                     i1l1707:
  4788                           
  4789                           ;eusart.c: 211: {;eusart.c: 212: TX1REG = eusartTxBuffer[eusartTxTail++];
  4790  0280  0842               	movf	_eusartTxTail,w
  4791  0281  3E30               	addlw	(low (_eusartTxBuffer| 0))& (0+255)
  4792  0282  0086               	movwf	6
  4793  0283  0187               	clrf	7
  4794  0284  0801               	movf	1,w
  4795  0285  0023               	movlb	3	; select bank3
  4796  0286  009A               	movwf	26	;volatile
  4797  0287                     i1l1709:
  4798  0287  3001               	movlw	1
  4799  0288  00F0               	movwf	??_EUSART_Transmit_ISR
  4800  0289  0870               	movf	??_EUSART_Transmit_ISR,w
  4801  028A  0020               	movlb	0	; select bank0
  4802  028B  07C2               	addwf	_eusartTxTail,f	;volatile
  4803  028C                     i1l1711:
  4804                           
  4805                           ;eusart.c: 213: if(sizeof(eusartTxBuffer) <= eusartTxTail)
  4806  028C  3008               	movlw	8
  4807  028D  0242               	subwf	_eusartTxTail,w	;volatile
  4808  028E  1C03               	skipc
  4809  028F  2A91               	goto	u75_21
  4810  0290  2A92               	goto	u75_20
  4811  0291                     u75_21:
  4812  0291  2A93               	goto	i1l1715
  4813  0292                     u75_20:
  4814  0292                     i1l1713:
  4815                           
  4816                           ;eusart.c: 214: {;eusart.c: 215: eusartTxTail = 0;
  4817  0292  01C2               	clrf	_eusartTxTail	;volatile
  4818  0293                     i1l1715:
  4819                           
  4820                           ;eusart.c: 216: };eusart.c: 217: eusartTxBufferRemaining++;
  4821  0293  3001               	movlw	1
  4822  0294  00F0               	movwf	??_EUSART_Transmit_ISR
  4823  0295  0870               	movf	??_EUSART_Transmit_ISR,w
  4824  0296  07E1               	addwf	_eusartTxBufferRemaining,f	;volatile
  4825                           
  4826                           ;eusart.c: 218: }
  4827  0297  2A9A               	goto	i1l311
  4828  0298                     i1l308:
  4829                           
  4830                           ;eusart.c: 219: else;eusart.c: 220: {;eusart.c: 221: PIE1bits.TXIE = 0;
  4831  0298  0021               	movlb	1	; select bank1
  4832  0299  1211               	bcf	17,4	;volatile
  4833  029A                     i1l311:
  4834  029A  0008               	return
  4835  029B                     __end_of_EUSART_Transmit_ISR:
  4836                           
  4837                           	psect	text28
  4838  018A                     __ptext28:	
  4839 ;; *************** function _EUSART_Receive_ISR *****************
  4840 ;; Defined at:
  4841 ;;		line 225 in file "mcc_generated_files/eusart.c"
  4842 ;; Parameters:    Size  Location     Type
  4843 ;;		None
  4844 ;; Auto vars:     Size  Location     Type
  4845 ;;		None
  4846 ;; Return value:  Size  Location     Type
  4847 ;;                  1    wreg      void 
  4848 ;; Registers used:
  4849 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4850 ;; Tracked objects:
  4851 ;;		On entry : 0/0
  4852 ;;		On exit  : 0/0
  4853 ;;		Unchanged: 0/0
  4854 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4855 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4856 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4857 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4858 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4859 ;;Total ram usage:        0 bytes
  4860 ;; Hardware stack levels used:    1
  4861 ;; Hardware stack levels required when called:    2
  4862 ;; This function calls:
  4863 ;;		Absolute function
  4864 ;;		_EUSART_DefaultErrorHandler
  4865 ;;		_EUSART_DefaultFramingErrorHandler
  4866 ;;		_EUSART_DefaultOverrunErrorHandler
  4867 ;;		_EUSART_RxDataHandler
  4868 ;; This function is called by:
  4869 ;;		_EUSART_Initialize
  4870 ;;		_INTERRUPT_InterruptManager
  4871 ;; This function uses a non-reentrant model
  4872 ;;
  4873                           
  4874                           
  4875                           ;psect for function _EUSART_Receive_ISR
  4876  018A                     _EUSART_Receive_ISR:
  4877  018A                     i1l1717:	
  4878                           ;incstack = 0
  4879                           ; Regs used in _EUSART_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4880                           
  4881                           
  4882                           ;eusart.c: 228: eusartRxStatusBuffer[eusartRxHead].status = 0;
  4883  018A  0020               	movlb	0	; select bank0
  4884  018B  0841               	movf	_eusartRxHead,w	;volatile
  4885  018C  3E20               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  4886  018D  0086               	movwf	6
  4887  018E  0187               	clrf	7
  4888  018F  0181               	clrf	1
  4889  0190                     i1l1719:
  4890                           
  4891                           ;eusart.c: 230: if(RC1STAbits.FERR){
  4892  0190  0023               	movlb	3	; select bank3
  4893  0191  1D1D               	btfss	29,2	;volatile
  4894  0192  2994               	goto	u76_21
  4895  0193  2995               	goto	u76_20
  4896  0194                     u76_21:
  4897  0194  29A0               	goto	i1l1725
  4898  0195                     u76_20:
  4899  0195                     i1l1721:
  4900                           
  4901                           ;eusart.c: 231: eusartRxStatusBuffer[eusartRxHead].ferr = 1;
  4902  0195  0020               	movlb	0	; select bank0
  4903  0196  0841               	movf	_eusartRxHead,w	;volatile
  4904  0197  3E20               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  4905  0198  0086               	movwf	6
  4906  0199  0187               	clrf	7
  4907  019A  1481               	bsf	1,1
  4908  019B                     i1l1723:
  4909                           
  4910                           ;eusart.c: 232: EUSART_FramingErrorHandler();
  4911  019B  085A               	movf	_EUSART_FramingErrorHandler+1,w
  4912  019C  008A               	movwf	10
  4913  019D  0859               	movf	_EUSART_FramingErrorHandler,w
  4914  019E  000A               	callw
  4915  019F  3181               	pagesel	$
  4916  01A0                     i1l1725:
  4917                           
  4918                           ;eusart.c: 233: };eusart.c: 235: if(RC1STAbits.OERR){
  4919  01A0  0023               	movlb	3	; select bank3
  4920  01A1  1C9D               	btfss	29,1	;volatile
  4921  01A2  29A4               	goto	u77_21
  4922  01A3  29A5               	goto	u77_20
  4923  01A4                     u77_21:
  4924  01A4  29B0               	goto	i1l1731
  4925  01A5                     u77_20:
  4926  01A5                     i1l1727:
  4927                           
  4928                           ;eusart.c: 236: eusartRxStatusBuffer[eusartRxHead].oerr = 1;
  4929  01A5  0020               	movlb	0	; select bank0
  4930  01A6  0841               	movf	_eusartRxHead,w	;volatile
  4931  01A7  3E20               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  4932  01A8  0086               	movwf	6
  4933  01A9  0187               	clrf	7
  4934  01AA  1501               	bsf	1,2
  4935  01AB                     i1l1729:
  4936                           
  4937                           ;eusart.c: 237: EUSART_OverrunErrorHandler();
  4938  01AB  0858               	movf	_EUSART_OverrunErrorHandler+1,w
  4939  01AC  008A               	movwf	10
  4940  01AD  0857               	movf	_EUSART_OverrunErrorHandler,w
  4941  01AE  000A               	callw
  4942  01AF  3181               	pagesel	$
  4943  01B0                     i1l1731:
  4944                           
  4945                           ;eusart.c: 238: };eusart.c: 240: if(eusartRxStatusBuffer[eusartRxHead].status){
  4946  01B0  0020               	movlb	0	; select bank0
  4947  01B1  0841               	movf	_eusartRxHead,w	;volatile
  4948  01B2  3E20               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  4949  01B3  0086               	movwf	6
  4950  01B4  0187               	clrf	7
  4951  01B5  0801               	movf	1,w
  4952  01B6  1903               	btfsc	3,2
  4953  01B7  29B9               	goto	u78_21
  4954  01B8  29BA               	goto	u78_20
  4955  01B9                     u78_21:
  4956  01B9  29C0               	goto	i1l1735
  4957  01BA                     u78_20:
  4958  01BA                     i1l1733:
  4959                           
  4960                           ;eusart.c: 241: EUSART_ErrorHandler();
  4961  01BA  0856               	movf	_EUSART_ErrorHandler+1,w
  4962  01BB  008A               	movwf	10
  4963  01BC  0855               	movf	_EUSART_ErrorHandler,w
  4964  01BD  000A               	callw
  4965  01BE  3181               	pagesel	$
  4966                           
  4967                           ;eusart.c: 242: } else {
  4968  01BF  29C3               	goto	i1l318
  4969  01C0                     i1l1735:
  4970                           
  4971                           ;eusart.c: 243: EUSART_RxDataHandler();
  4972  01C0  3182  22B5  3181   	fcall	_EUSART_RxDataHandler
  4973  01C3                     i1l318:
  4974  01C3  0008               	return
  4975  01C4                     __end_of_EUSART_Receive_ISR:
  4976                           
  4977                           	psect	text29
  4978  0380                     __ptext29:	
  4979 ;; *************** function _EUSART_DefaultOverrunErrorHandler *****************
  4980 ;; Defined at:
  4981 ;;		line 261 in file "mcc_generated_files/eusart.c"
  4982 ;; Parameters:    Size  Location     Type
  4983 ;;		None
  4984 ;; Auto vars:     Size  Location     Type
  4985 ;;		None
  4986 ;; Return value:  Size  Location     Type
  4987 ;;                  1    wreg      void 
  4988 ;; Registers used:
  4989 ;;		None
  4990 ;; Tracked objects:
  4991 ;;		On entry : 0/0
  4992 ;;		On exit  : 0/0
  4993 ;;		Unchanged: 0/0
  4994 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4995 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4996 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4997 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4998 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4999 ;;Total ram usage:        0 bytes
  5000 ;; Hardware stack levels used:    1
  5001 ;; This function calls:
  5002 ;;		Nothing
  5003 ;; This function is called by:
  5004 ;;		_EUSART_Initialize
  5005 ;;		_EUSART_Receive_ISR
  5006 ;; This function uses a non-reentrant model
  5007 ;;
  5008                           
  5009                           
  5010                           ;psect for function _EUSART_DefaultOverrunErrorHandler
  5011  0380                     _EUSART_DefaultOverrunErrorHandler:
  5012  0380                     i1l1673:	
  5013                           ;incstack = 0
  5014                           ; Regs used in _EUSART_DefaultOverrunErrorHandler: []
  5015                           
  5016                           
  5017                           ;eusart.c: 264: RC1STAbits.CREN = 0;
  5018  0380  0023               	movlb	3	; select bank3
  5019  0381  121D               	bcf	29,4	;volatile
  5020                           
  5021                           ;eusart.c: 265: RC1STAbits.CREN = 1;
  5022  0382  161D               	bsf	29,4	;volatile
  5023  0383                     i1l328:
  5024  0383  0008               	return
  5025  0384                     __end_of_EUSART_DefaultOverrunErrorHandler:
  5026                           
  5027                           	psect	text30
  5028  038B                     __ptext30:	
  5029 ;; *************** function _EUSART_DefaultFramingErrorHandler *****************
  5030 ;; Defined at:
  5031 ;;		line 259 in file "mcc_generated_files/eusart.c"
  5032 ;; Parameters:    Size  Location     Type
  5033 ;;		None
  5034 ;; Auto vars:     Size  Location     Type
  5035 ;;		None
  5036 ;; Return value:  Size  Location     Type
  5037 ;;                  1    wreg      void 
  5038 ;; Registers used:
  5039 ;;		None
  5040 ;; Tracked objects:
  5041 ;;		On entry : 0/0
  5042 ;;		On exit  : 0/0
  5043 ;;		Unchanged: 0/0
  5044 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5045 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5046 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5047 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5048 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5049 ;;Total ram usage:        0 bytes
  5050 ;; Hardware stack levels used:    1
  5051 ;; This function calls:
  5052 ;;		Nothing
  5053 ;; This function is called by:
  5054 ;;		_EUSART_Initialize
  5055 ;;		_EUSART_Receive_ISR
  5056 ;; This function uses a non-reentrant model
  5057 ;;
  5058                           
  5059                           
  5060                           ;psect for function _EUSART_DefaultFramingErrorHandler
  5061  038B                     _EUSART_DefaultFramingErrorHandler:
  5062  038B                     i1l325:	
  5063                           ;incstack = 0
  5064                           ; Regs used in _EUSART_DefaultFramingErrorHandler: []
  5065                           
  5066  038B  0008               	return
  5067  038C                     __end_of_EUSART_DefaultFramingErrorHandler:
  5068                           
  5069                           	psect	text31
  5070  0384                     __ptext31:	
  5071 ;; *************** function _EUSART_DefaultErrorHandler *****************
  5072 ;; Defined at:
  5073 ;;		line 269 in file "mcc_generated_files/eusart.c"
  5074 ;; Parameters:    Size  Location     Type
  5075 ;;		None
  5076 ;; Auto vars:     Size  Location     Type
  5077 ;;		None
  5078 ;; Return value:  Size  Location     Type
  5079 ;;                  1    wreg      void 
  5080 ;; Registers used:
  5081 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5082 ;; Tracked objects:
  5083 ;;		On entry : 0/0
  5084 ;;		On exit  : 0/0
  5085 ;;		Unchanged: 0/0
  5086 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5087 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5088 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5089 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5090 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5091 ;;Total ram usage:        0 bytes
  5092 ;; Hardware stack levels used:    1
  5093 ;; Hardware stack levels required when called:    1
  5094 ;; This function calls:
  5095 ;;		_EUSART_RxDataHandler
  5096 ;; This function is called by:
  5097 ;;		_EUSART_Initialize
  5098 ;;		_EUSART_Receive_ISR
  5099 ;; This function uses a non-reentrant model
  5100 ;;
  5101                           
  5102                           
  5103                           ;psect for function _EUSART_DefaultErrorHandler
  5104  0384                     _EUSART_DefaultErrorHandler:
  5105  0384                     i1l1675:	
  5106                           ;incstack = 0
  5107                           ; Regs used in _EUSART_DefaultErrorHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
  5108                           
  5109                           
  5110                           ;eusart.c: 270: EUSART_RxDataHandler();
  5111  0384  3182  22B5  3183   	fcall	_EUSART_RxDataHandler
  5112  0387                     i1l331:
  5113  0387  0008               	return
  5114  0388                     __end_of_EUSART_DefaultErrorHandler:
  5115                           
  5116                           	psect	text32
  5117  02B5                     __ptext32:	
  5118 ;; *************** function _EUSART_RxDataHandler *****************
  5119 ;; Defined at:
  5120 ;;		line 249 in file "mcc_generated_files/eusart.c"
  5121 ;; Parameters:    Size  Location     Type
  5122 ;;		None
  5123 ;; Auto vars:     Size  Location     Type
  5124 ;;		None
  5125 ;; Return value:  Size  Location     Type
  5126 ;;                  1    wreg      void 
  5127 ;; Registers used:
  5128 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5129 ;; Tracked objects:
  5130 ;;		On entry : 0/0
  5131 ;;		On exit  : 0/0
  5132 ;;		Unchanged: 0/0
  5133 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5134 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5135 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5136 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5137 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5138 ;;Total ram usage:        1 bytes
  5139 ;; Hardware stack levels used:    1
  5140 ;; This function calls:
  5141 ;;		Nothing
  5142 ;; This function is called by:
  5143 ;;		_EUSART_Receive_ISR
  5144 ;;		_EUSART_DefaultErrorHandler
  5145 ;; This function uses a non-reentrant model
  5146 ;;
  5147                           
  5148                           
  5149                           ;psect for function _EUSART_RxDataHandler
  5150  02B5                     _EUSART_RxDataHandler:
  5151  02B5                     i1l1563:	
  5152                           ;incstack = 0
  5153                           ; Regs used in _EUSART_RxDataHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
  5154                           
  5155                           
  5156                           ;eusart.c: 251: eusartRxBuffer[eusartRxHead++] = RC1REG;
  5157  02B5  0023               	movlb	3	; select bank3
  5158  02B6  0819               	movf	25,w	;volatile
  5159  02B7  00F0               	movwf	??_EUSART_RxDataHandler
  5160  02B8  0020               	movlb	0	; select bank0
  5161  02B9  0841               	movf	_eusartRxHead,w
  5162  02BA  3E28               	addlw	(low (_eusartRxBuffer| 0))& (0+255)
  5163  02BB  0086               	movwf	6
  5164  02BC  0187               	clrf	7
  5165  02BD  0870               	movf	??_EUSART_RxDataHandler,w
  5166  02BE  0081               	movwf	1
  5167  02BF                     i1l1565:
  5168  02BF  3001               	movlw	1
  5169  02C0  00F0               	movwf	??_EUSART_RxDataHandler
  5170  02C1  0870               	movf	??_EUSART_RxDataHandler,w
  5171  02C2  07C1               	addwf	_eusartRxHead,f	;volatile
  5172  02C3                     i1l1567:
  5173                           
  5174                           ;eusart.c: 252: if(sizeof(eusartRxBuffer) <= eusartRxHead)
  5175  02C3  3008               	movlw	8
  5176  02C4  0241               	subwf	_eusartRxHead,w	;volatile
  5177  02C5  1C03               	skipc
  5178  02C6  2AC8               	goto	u70_21
  5179  02C7  2AC9               	goto	u70_20
  5180  02C8                     u70_21:
  5181  02C8  2ACA               	goto	i1l1571
  5182  02C9                     u70_20:
  5183  02C9                     i1l1569:
  5184                           
  5185                           ;eusart.c: 253: {;eusart.c: 254: eusartRxHead = 0;
  5186  02C9  01C1               	clrf	_eusartRxHead	;volatile
  5187  02CA                     i1l1571:
  5188                           
  5189                           ;eusart.c: 255: };eusart.c: 256: eusartRxCount++;
  5190  02CA  3001               	movlw	1
  5191  02CB  00F0               	movwf	??_EUSART_RxDataHandler
  5192  02CC  0870               	movf	??_EUSART_RxDataHandler,w
  5193  02CD  07BF               	addwf	_eusartRxCount,f	;volatile
  5194  02CE                     i1l322:
  5195  02CE  0008               	return
  5196  02CF                     __end_of_EUSART_RxDataHandler:
  5197  007E                     btemp	set	126	;btemp
  5198  007E                     int$flags	set	126
  5199  007E                     wtemp0	set	126
  5200                           
  5201                           	psect	config
  5202                           
  5203                           ;Config register CONFIG1 @ 0x8007
  5204                           ;	Oscillator Selection Bits
  5205                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  5206                           ;	Watchdog Timer Enable
  5207                           ;	WDTE = OFF, WDT disabled
  5208                           ;	Power-up Timer Enable
  5209                           ;	PWRTE = OFF, PWRT disabled
  5210                           ;	MCLR Pin Function Select
  5211                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  5212                           ;	Flash Program Memory Code Protection
  5213                           ;	CP = OFF, Program memory code protection is disabled
  5214                           ;	Brown-out Reset Enable
  5215                           ;	BOREN = OFF, Brown-out Reset disabled
  5216                           ;	Clock Out Enable
  5217                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  5218                           ;	Internal/External Switchover Mode
  5219                           ;	IESO = ON, Internal/External Switchover Mode is enabled
  5220                           ;	Fail-Safe Clock Monitor Enable
  5221                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  5222  8007                     	org	32775
  5223  8007  39E4               	dw	14820
  5224                           
  5225                           ;Config register CONFIG2 @ 0x8008
  5226                           ;	Flash Memory Self-Write Protection
  5227                           ;	WRT = OFF, Write protection off
  5228                           ;	Peripheral Pin Select one-way control
  5229                           ;	PPS1WAY = ON, The PPSLOCK bit cannot be cleared once it is set by software
  5230                           ;	Zero-cross detect disable
  5231                           ;	ZCDDIS = ON, Zero-cross detect circuit is disabled at POR
  5232                           ;	Phase Lock Loop enable
  5233                           ;	PLLEN = OFF, 4x PLL is enabled when software sets the SPLLEN bit
  5234                           ;	Stack Overflow/Underflow Reset Enable
  5235                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  5236                           ;	Brown-out Reset Voltage Selection
  5237                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  5238                           ;	Low-Power Brown Out Reset
  5239                           ;	LPBOR = OFF, Low-Power BOR is disabled
  5240                           ;	Low-Voltage Programming Enable
  5241                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  5242  8008                     	org	32776
  5243  8008  1EFF               	dw	7935

Data Sizes:
    Strings     5
    Constant    10
    Data        0
    BSS         36
    Persistent  45
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     17      66
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    printf@f	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_1(CODE[5]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    EUSART_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Receive_ISR(), 

    EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Receive_ISR(), Absolute function(), 

    EUSART_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Transmit_ISR(), 

    EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Transmit_ISR(), Absolute function(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), Absolute function(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), Absolute function(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), Absolute function(), 

    TMR2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR2_DefaultInterruptHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR2_DefaultInterruptHandler(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _printf->___lwmod
    _putch->_EUSART_Write
    ___lwmod->___lwdiv
    _EUSART_Receive_ISR->_EUSART_RxDataHandler
    _EUSART_DefaultErrorHandler->_EUSART_RxDataHandler

Critical Paths under _main in BANK0

    _SYSTEM_Initialize->_EUSART_Initialize
    _TMR2_Initialize->_TMR2_SetInterruptHandler
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler
    _EUSART_Initialize->_EUSART_SetRxInterruptHandler
    _EUSART_Initialize->_EUSART_SetTxInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _TMR2_DefaultInterruptHandler->_printf

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     588
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     588
                     _ADC_Initialize
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _PWM1_Initialize
                    _TMR2_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0      98
                     _ADC_Initialize
                _ADC_StartConversion
           _TMR2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR2_SetInterruptHandler                             2     0      2      98
                                             14 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _ADC_StartConversion                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    1     1      0     490
                                             16 BANK0      1     1      0
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetTxInterruptHandler                         2     0      2      98
                                             14 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetRxInterruptHandler                         2     0      2      98
                                             14 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2      98
                                             14 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2      98
                                             14 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2      98
                                             14 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           0     0      0    1175
                   Absolute function *
                 _EUSART_Receive_ISR *
                _EUSART_Transmit_ISR *
                           _TMR2_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR2_ISR                                             0     0      0    1175
                      _TMR2_CallBack
 ---------------------------------------------------------------------------------
 (6) _TMR2_CallBack                                        0     0      0    1175
                   Absolute function *
       _TMR2_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (7) _TMR2_DefaultInterruptHandler                         0     0      0    1175
                  _ADC_GetConversion
               _ADC_IsConversionDone
                             _printf
 ---------------------------------------------------------------------------------
 (8) _printf                                              22    18      4    1153
                                              0 BANK0     14    10      4
                            ___lwdiv
                            ___lwmod
                              _putch
 ---------------------------------------------------------------------------------
 (9) _putch                                                1     1      0      66
                                              2 COMMON     1     1      0
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (10) _EUSART_Write                                        2     2      0      44
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (9) ___lwmod                                              6     2      4     311
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (9) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (8) _ADC_IsConversionDone                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _ADC_GetConversion                                    4     2      2      22
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (5) _EUSART_Transmit_ISR                                  1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _EUSART_Receive_ISR                                   0     0      0       0
                   Absolute function *
         _EUSART_DefaultErrorHandler *
  _EUSART_DefaultFramingErrorHandler *
  _EUSART_DefaultOverrunErrorHandler *
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (6) _EUSART_DefaultOverrunErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _EUSART_DefaultFramingErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _EUSART_DefaultErrorHandler                           0     0      0       0
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (6) _EUSART_RxDataHandler                                 1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADC_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PWM1_Initialize
     _TMR2_Initialize
       _ADC_Initialize
       _ADC_StartConversion
       _TMR2_SetInterruptHandler
     _WDT_Initialize

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _EUSART_Receive_ISR *
     Absolute function(Fake) *
     _EUSART_DefaultErrorHandler *
       _EUSART_RxDataHandler
     _EUSART_DefaultFramingErrorHandler *
     _EUSART_DefaultOverrunErrorHandler *
     _EUSART_RxDataHandler *
   _EUSART_Transmit_ISR *
   _TMR2_ISR *
     _TMR2_CallBack
       Absolute function(Fake) *
       _TMR2_DefaultInterruptHandler *
         _ADC_GetConversion
         _ADC_IsConversionDone
         _printf
           ___lwdiv
           ___lwmod
             ___lwdiv (ARG)
           _putch
             _EUSART_Write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     11      42       5       82.5%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      50      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      50      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Fri Feb 05 18:20:21 2021

                ?_EUSART_SetRxInterruptHandler 0052               __end_of_TMR2_SetInterruptHandler 034D  
                                           l53 0331                                             l39 0278  
                                           l89 02E7                                            l114 034C  
                                          l150 02FD                                            l153 0339  
                                          l340 036A                                            l156 037F  
                                          l181 038A                                            l334 0364  
                                          l343 0352                                            l271 014D  
                                          l175 0328                                            l337 035E  
                                          l346 0358                                            l384 0313  
                                          l385 0313                                            _PR2 001B  
                       ??_EUSART_RxDataHandler 0070                                            _cnt 003C  
                                          _val 003A                 ?_EUSART_SetFramingErrorHandler 0052  
                              _TMR2_Initialize 02CF                                            wreg 0009  
                                         l1601 0273                                           l1603 0276  
                                         l1531 0323                                           l1611 02CF  
                                         l1605 0329                                           l1533 0324  
                                         l1621 02DE                                           l1613 02D2  
                                         l1631 0332                                           l1607 032E  
                                         l1535 0325                                           l1527 0347  
                                         l1623 02E1                                           l1615 02D3  
                                         l1561 0365                                           l1553 0353  
                                         l1641 010A                                           l1633 0335  
                                         l1609 032F                                           l1537 0326  
                                         l1529 0320                                           l1625 02E4  
                                         l1617 02D4                                           l1555 034D  
                                         l1651 0123                                           l1643 010C  
                                         l1635 0336                                           l1539 0388  
                                         l1619 02D6                                           l1557 035F  
                                         l1661 0138                                           l1653 0125  
                                         l1645 0114                                           l1637 0337  
                                         l1581 025E                                           l1573 0252  
                                         l1559 0359                                           l1671 014B  
                                         l1663 0144                                           l1655 0127  
                                         l1647 011E                                           l1591 0266  
                                         l1583 0260                                           l1575 0255  
                                         l1639 037C                                           l1665 0148  
                                         l1657 0128                                           l1649 0121  
                                         l1593 0269                                           l1585 0261  
                                         l1577 0258                                           l1681 02E8  
                                         l1761 0311                                           l1667 0149  
                                         l1659 0130                                           l1595 026B  
                                         l1587 0263                                           l1579 025C  
                                         l1763 0312                                           l1669 014A  
                                         l1597 026E                                           l1589 0265  
                                         l1757 030B                                           l1599 0270  
                                         l1759 030E                                           STR_1 0377  
                      __end_of_PWM1_Initialize 0332                                           _LATA 010C  
                                         _LATC 010E                                           _TMR2 001A  
                                         _WPUA 020C                                           _WPUC 020E  
                                         _main 030B                                           fsr0h 0005  
                                         fsr1h 0007                                           indf0 0000  
                                         fsr0l 0004                                           indf1 0001  
                                         fsr1l 0006                                           btemp 007E  
                                         start 003A                                  ?_EUSART_Write 0070  
               __size_of_OSCILLATOR_Initialize 0008                  __end_of_OSCILLATOR_Initialize 033A  
                                        ?_main 0070                                          _T2CON 001C  
                              __end_of___lwdiv 018A                                          i1l111 030A  
                                        i1l123 0227                                          i1l107 0370  
                                        i1l311 029A                                          i1l305 0376  
                                        i1l322 02CE                                          i1l331 0387  
                                        i1l308 0298                                          i1l325 038B  
                                        i1l318 01C3                                          i1l190 02AC  
                                        i1l328 0383                                          i1l184 0340  
                                        i1l193 02B4                                __end_of___lwmod 01F8  
                                        i1l371 0038                                          i1l364 001A  
                                        i1l365 0038                                          i1l366 002A  
                                        i1l295 022F                                          i1l296 0238  
                                        i1l481 0109                                          i1l299 0251  
                                        i1l757 0189                                          i1l767 01F7  
                                        u50_25 0167                                          u51_20 0175  
                                        u51_21 0174                                          u51_25 0171  
                                        u60_20 02B0                                          u44_20 022F  
                                        u60_21 02AF                                          u44_21 022E  
                                        u52_25 017B                                          u53_20 0185  
                                        u45_20 0234                                          u61_20 0054  
                                        u53_21 0184                                          u45_21 0233  
                                        u61_21 0053                                          u70_20 02C9  
                                        u54_20 01CA                                          u46_20 024C  
                                        u62_20 0080                                          u70_21 02C8  
                                        u54_21 01C9                                          u46_21 024B  
                                        u62_21 007F                                          u47_20 0156  
                                        u63_20 00A4                                          u71_20 0305  
                                        u47_21 0155                                          u63_21 00A3  
                                        u71_21 0304                                          u55_25 01CE  
                                        u63_25 00A0                                          u56_20 01DA  
                                        u64_20 00AF                                          u80_20 000F  
                                        u56_21 01D9                                          u64_21 00AE  
                                        u80_21 000E                                          u48_25 015A  
                                        u49_20 0166                                          u57_20 01E4  
                                        u65_20 00B5                                          u81_20 0014  
                                        u49_21 0165                                          u57_21 01E3  
                                        u65_21 00B4                                          u81_21 0013  
                                        _TRISA 008C                                          u57_25 01E0  
                                        _TRISC 008E                                          u74_20 0280  
                                        u66_20 00F4                                          u82_20 001F  
                                        u74_21 027F                                          u66_21 00F3  
                                        u82_21 001E                                          u58_25 01E9  
                                        u75_20 0292                                          u59_20 01F3  
                                        u67_20 0109                                          u83_20 0024  
                                        u75_21 0291                                          u59_21 01F2  
                                        u67_21 0108                                          u83_21 0023  
                                        u76_20 0195                                          u68_20 0206  
                                        u84_20 002F                                          u76_21 0194  
                                        u68_21 0205                                          u84_21 002E  
                                        u77_20 01A5                                          u69_20 020E  
                                        u85_20 0034                                          u77_21 01A4  
                                        u69_21 020D                                          u85_21 0033  
                                        u78_20 01BA                                          u78_21 01B9  
                                        u79_20 000A                                          u79_21 0009  
                                        _RXPPS 0E24                               __end_of_TMR2_ISR 0371  
                              __end_of_dpowers 0320                                 _WDT_Initialize 037C  
                                        _putch 0371                                          pclath 000A  
                                        status 0003                                          wtemp0 007E  
                              __initialization 003C                                   __end_of_main 0316  
                               ??_EUSART_Write 0070                        __end_of_TMR2_Initialize 02E8  
                  ?_INTERRUPT_InterruptManager 0070                 ??_EUSART_SetRxInterruptHandler 0054  
                     _TMR2_SetInterruptHandler 0347                                         ??_main 0055  
                       __end_of_WDT_Initialize 0380                  __size_of_ADC_IsConversionDone 0007  
    __end_of_EUSART_DefaultFramingErrorHandler 038C     __size_of_EUSART_DefaultFramingErrorHandler 0001  
          ??_EUSART_DefaultFramingErrorHandler 0070             ?_EUSART_DefaultFramingErrorHandler 0070  
            _EUSART_DefaultFramingErrorHandler 038B                                         _ADCON0 009D  
                                       _ADCON1 009E                                         _ADCON2 009F  
                   _EUSART_OverrunErrorHandler 0057                                         _ADRESH 009C  
                                       _ADRESL 009B                                         _CCPR1H 0292  
                                       _CCPR1L 0291                                         _ANSELA 018C  
                                       ?_putch 0070                                         _ANSELC 018E  
                                       _BORCON 0116                                         _RC1REG 0199  
                                       _RC1PPS 0EA1                                         _RC1STA 019D  
                                       _RC4PPS 0EA4                               ?_PWM1_Initialize 0070  
                                       i1l1401 0239                                         i1l1403 0242  
                                       i1l1411 024F                                         i1l1421 0159  
                                       i1l1405 0246                                         i1l1413 0372  
                                       i1l1501 0089                                         i1l1431 0179  
                                       i1l1423 015E                                         i1l1415 014E  
                                       i1l1407 024C                                         i1l1511 00A5  
                                       i1l1433 017A                                         i1l1425 0162  
                                       i1l1417 0150                                         i1l1441 01C4  
                                       i1l1409 024D                                         i1l1521 00E6  
                                       i1l1513 00AF                                         _ODCONA 028C  
                                       i1l1435 017F                                         i1l1427 0166  
                                       i1l1419 0156                                         i1l1451 01DA  
                                       i1l1443 01CA                                         i1l1523 00EA  
                                       i1l1515 00B5                                         i1l1507 008B  
                                       _ODCONC 028E                                         i1l1429 0175  
                                       i1l1437 0185                                         i1l1453 01E4  
                                       i1l1445 01CD                                         i1l1517 00B9  
                                       i1l1525 00F4                                         i1l1541 01F8  
                                       i1l1711 028C                                         i1l1471 02A7  
                                       i1l1463 033A                                         i1l1455 01E8  
                                       i1l1447 01D2                                         i1l1519 00BF  
                                       i1l1551 0225                                         i1l1543 0206  
                                       i1l1721 0195                                         i1l1713 0292  
                                       i1l1705 0279                                         i1l1473 02AA  
                                       i1l1457 01ED                                         i1l1449 01D6  
                                       i1l1481 004E                                         i1l1545 020E  
                                       i1l1571 02CA                                         i1l1563 02B5  
                                       i1l1731 01B0                                         i1l1723 019B  
                                       i1l1715 0293                                         i1l1707 0280  
                                       i1l1475 02B0                                         i1l1467 029C  
                                       i1l1459 01F3                                         i1l1395 0229  
                                       i1l1491 0071                                         i1l1483 0054  
                                       i1l1547 0217                                         i1l1627 02FE  
                                       i1l1565 02BF                                         i1l1733 01BA  
                                       i1l1725 01A0                                         i1l1717 018A  
                                       i1l1709 0287                                         i1l1469 02A6  
                                       i1l1397 0229                                         i1l1493 0078  
                                       i1l1485 0059                                         i1l1549 0222  
                                       i1l1629 0305                                         i1l1741 0006  
                                       i1l1567 02C3                                         i1l1735 01C0  
                                       i1l1727 01A5                                         i1l1719 0190  
                                       i1l1399 0234                                         i1l1495 007C  
                                       i1l1479 0048                                         i1l1751 0024  
                                       i1l1743 000A                                         i1l1569 02C9  
                                       i1l1673 0380                                         i1l1729 01AB  
                                       i1l1497 0080                                         i1l1489 005A  
                                       i1l1753 002F                                         i1l1745 000F  
                                       i1l1675 0384                                         i1l1499 0084  
                                       i1l1755 0034                                         i1l1747 0014  
                                       i1l1677 036B                                         i1l1749 001F  
                                       i1l1679 036D                                         _INLVLA 038C  
                                       _INLVLC 038E                                         _OSCCON 0099  
                                       _TX1REG 019A                                         _WDTCON 0097  
                                       _TX1STA 019E                                      ??___lwdiv 0074  
                                    ??___lwmod 007C                            _EUSART_Transmit_ISR 0279  
                                       _printf 0048                                ?_WDT_Initialize 0070  
                     ADC_GetConversion@channel 0073       TMR2_SetInterruptHandler@InterruptHandler 0052  
                         ?_EUSART_Transmit_ISR 0070                              _SYSTEM_Initialize 02E8  
                      __end_of__initialization 0044                          __end_of_TMR2_CallBack 030B  
                           ?_SYSTEM_Initialize 0070           __end_of_EUSART_SetTxInterruptHandler 0353  
        __size_of_EUSART_SetTxInterruptHandler 0006                   _EUSART_SetTxInterruptHandler 034D  
                 __size_of_ADC_StartConversion 0003                                 __pcstackCOMMON 0070  
                          ??_SYSTEM_Initialize 0055                                      ?_TMR2_ISR 0070  
                                __end_of_putch 0377                               ?_TMR2_Initialize 0070  
                               _OPTION_REGbits 0095                           _eusartRxStatusBuffer 0020  
              ??_EUSART_SetOverrunErrorHandler 0054                      __end_of_SYSTEM_Initialize 02FE  
                        ??_EUSART_Transmit_ISR 0070                                        ??_putch 0072  
                                   __pbssBANK0 0020                           __end_of_EUSART_Write 0252  
                  __size_of_EUSART_Receive_ISR 003A                                     __pmaintext 030B  
                ?_EUSART_SetTxInterruptHandler 0052               _EUSART_TxDefaultInterruptHandler 005D  
                                   ??_TMR2_ISR 007E                                     __pintentry 0004  
                                      _CCP1CON 0293                   ??_EUSART_DefaultErrorHandler 0071  
                                      ?_printf 0044                        __size_of_ADC_Initialize 0009  
                                _eusartRxCount 003F                                        _SP1BRGH 019C  
                                      _SP1BRGL 019B                  __size_of_EUSART_RxDataHandler 001A  
                                      _OSCSTAT 009A                                        _OSCTUNE 0098  
                                      _SLRCONA 030C                                        _SLRCONC 030E  
                     ??_EUSART_SetErrorHandler 0054                           _ADC_InterruptHandler 0038  
          __size_of_EUSART_DefaultErrorHandler 0004                     ??_TMR2_SetInterruptHandler 0054  
                                      ___lwdiv 014E                                        ___lwmod 01C4  
                                      __ptext1 02E8                                        __ptext2 037C  
                                      __ptext3 02CF                                        __ptext4 0347  
                                      __ptext5 0388                                        __ptext6 0320  
                                      __ptext7 0329                                        __ptext8 0252  
                                      __ptext9 0332                                __size_of_printf 00C2  
                                      _dpowers 0316                          _OSCILLATOR_Initialize 0332  
                                    _T2CONbits 001C                       ??_PIN_MANAGER_Initialize 0052  
                   __size_of_SYSTEM_Initialize 0016                                        clrloop0 0342  
                         end_of_initialization 0044          __end_of_EUSART_SetOverrunErrorHandler 035F  
       __size_of_EUSART_SetOverrunErrorHandler 0006                  _EUSART_SetOverrunErrorHandler 0359  
                            _EUSART_Initialize 010A                   __end_of_ADC_IsConversionDone 0341  
                           ?_EUSART_Initialize 0070                                      _RCSTAbits 019D  
                                      printf@c 0051                                        printf@f 0044  
                          ??_EUSART_Initialize 0054                               ??_WDT_Initialize 0052  
               ??_EUSART_SetTxInterruptHandler 0054                          __size_of_EUSART_Write 002A  
                          _ADC_StartConversion 0388                __size_of_EUSART_SetErrorHandler 0006  
                    __end_of_EUSART_Initialize 014E                                      _TXSTAbits 019E  
                     __size_of_PWM1_Initialize 0009                           ?_ADC_StartConversion 0070  
         __end_of_TMR2_DefaultInterruptHandler 0228          __size_of_TMR2_DefaultInterruptHandler 0030  
                 _TMR2_DefaultInterruptHandler 01F8             __end_of_EUSART_DefaultErrorHandler 0388  
                   _EUSART_DefaultErrorHandler 0384                                   _EUSART_Write 0228  
                            __size_of_TMR2_ISR 0006                                 _ADC_Initialize 0320  
                       ?_OSCILLATOR_Initialize 0070                                 __end_of_printf 010A  
                          start_initialization 003C                __size_of_PIN_MANAGER_Initialize 0027  
 EUSART_SetRxInterruptHandler@interruptHandler 0052   EUSART_SetTxInterruptHandler@interruptHandler 0052  
                                  putch@txData 0072                 ?_EUSART_SetOverrunErrorHandler 0052  
                        ??_ADC_StartConversion 0052                     _EUSART_FramingErrorHandler 0059  
                       _EUSART_SetErrorHandler 0365                                    _CCPTMRSbits 029E  
                       __end_of_ADC_Initialize 0329                  ?_TMR2_DefaultInterruptHandler 0070  
                                     ??_printf 0048                         __size_of_TMR2_CallBack 000D  
                  __end_of_EUSART_Transmit_ISR 029B                                      ___latbits 0002  
                                __pcstackBANK0 0044                           _ADC_IsConversionDone 033A  
                     __size_of_TMR2_Initialize 0019                     __end_of_EUSART_Receive_ISR 01C4  
                   __size_of_EUSART_Initialize 0044               _EUSART_RxDefaultInterruptHandler 005B  
                                    __pnvBANK0 0055                   __end_of_EUSART_RxDataHandler 02CF  
                             ___lwdiv@dividend 0072                         _PIN_MANAGER_Initialize 0252  
                                     ?___lwdiv 0070                                       ?___lwmod 0078  
                              ?_ADC_Initialize 0070                                   _eusartRxHead 0041  
                                 _eusartTxHead 0043                                   _eusartRxTail 0040  
                                 _eusartTxTail 0042                              ??_PWM1_Initialize 0052  
                 ??_INTERRUPT_InterruptManager 007E                        _eusartTxBufferRemaining 0061  
                                     _BAUD1CON 019F                          ?_ADC_IsConversionDone 0070  
                             ___lwdiv@quotient 0075                                 __size_of_putch 0006  
                               _eusartRxBuffer 0028                                 _eusartTxBuffer 0030  
       EUSART_SetErrorHandler@interruptHandler 0052                                      clear_ram0 0341  
                                _TMR2_CallBack 02FE                                       _PIE1bits 0091  
                            _eusartRxLastError 003E            __size_of_INTERRUPT_InterruptManager 0036  
                                     _PIR1bits 0011                ??_EUSART_SetFramingErrorHandler 0054  
    __end_of_EUSART_DefaultOverrunErrorHandler 0384     __size_of_EUSART_DefaultOverrunErrorHandler 0004  
          ??_EUSART_DefaultOverrunErrorHandler 0070             ?_EUSART_DefaultOverrunErrorHandler 0070  
            _EUSART_DefaultOverrunErrorHandler 0380                                       _TMR2_ISR 036B  
                                   _ADCON0bits 009D                                     printf@flag 004D  
                                   printf@prec 004E                 ??_TMR2_DefaultInterruptHandler 007E  
            __size_of_TMR2_SetInterruptHandler 0006                      ?_TMR2_SetInterruptHandler 0052  
                            ??_TMR2_Initialize 0054                                 ?_TMR2_CallBack 0070  
                            _ADC_GetConversion 029B                        ??_OSCILLATOR_Initialize 0052  
                          _EUSART_ErrorHandler 0055                             ?_ADC_GetConversion 0070  
                  ?_EUSART_DefaultErrorHandler 0070                               __size_of___lwdiv 003C  
                             __size_of___lwmod 0034                         ??_ADC_IsConversionDone 0070  
                          ??_ADC_GetConversion 0072                                ___lwdiv@divisor 0070  
                         _EUSART_RxDataHandler 02B5                                ___lwdiv@counter 0077  
                                     __ptext10 010A                                       __ptext11 034D  
                                     __ptext20 0048                                       __ptext12 0353  
                                     __ptext21 0371                                       __ptext13 0359  
                                     __ptext30 038B                                       __ptext22 0228  
                                     __ptext14 035F                                       __ptext31 0384  
                                     __ptext23 01C4                                       __ptext15 0365  
                                     __ptext32 02B5                                       __ptext24 014E  
                                     __ptext25 033A                                       __ptext17 036B  
                                     __ptext26 029B                                       __ptext18 02FE  
                                     __ptext27 0279                                       __ptext19 01F8  
                                     __ptext28 018A                                       __ptext29 0380  
                                __size_of_main 000B                      __end_of_ADC_GetConversion 02B5  
                      ?_EUSART_SetErrorHandler 0052                                     _RC1STAbits 019D  
EUSART_SetOverrunErrorHandler@interruptHandler 0052                                       int$flags 007E  
           __end_of_INTERRUPT_InterruptManager 003A                     _INTERRUPT_InterruptManager 0004  
        __end_of_EUSART_SetFramingErrorHandler 0365         __size_of_EUSART_SetFramingErrorHandler 0006  
                _EUSART_SetFramingErrorHandler 035F                                      printf@val 004F  
                                   _INTCONbits 000B                          ?_EUSART_RxDataHandler 0070  
                      __size_of_WDT_Initialize 0004                                       intlevel1 0000  
                              ??_TMR2_CallBack 007E                    __end_of_ADC_StartConversion 038B  
                             ___lwmod@dividend 007A                        ?_PIN_MANAGER_Initialize 0070  
               __end_of_EUSART_SetErrorHandler 036B                                _PWM1_Initialize 0329  
                             ??_ADC_Initialize 0052           __end_of_EUSART_SetRxInterruptHandler 0359  
        __size_of_EUSART_SetRxInterruptHandler 0006                   _EUSART_SetRxInterruptHandler 0353  
                                     printf@ap 004C                             _EUSART_Receive_ISR 018A  
EUSART_SetFramingErrorHandler@interruptHandler 0052                                  __pstringtext1 0316  
                                __pstringtext2 0377                                  __pstringtext3 0000  
                          ?_EUSART_Receive_ISR 0070                                ___lwmod@divisor 0078  
                              ___lwmod@counter 007D                                     _TX1STAbits 019E  
                           EUSART_Write@txData 0071                   __size_of_EUSART_Transmit_ISR 0022  
               __end_of_PIN_MANAGER_Initialize 0279                           ??_EUSART_Receive_ISR 0071  
                        _TMR2_InterruptHandler 005F                     __size_of_ADC_GetConversion 001A  
