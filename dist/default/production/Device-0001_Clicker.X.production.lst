

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Thu Feb 04 02:08:22 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F1705
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
     9                           	psect	cinit,global,class=CODE,merge=1,delta=2
    10                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text2,local,class=CODE,merge=1,delta=2
    18                           	psect	text3,local,class=CODE,merge=1,delta=2
    19                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text6,local,class=CODE,merge=1,delta=2
    22                           	psect	text7,local,class=CODE,merge=1,delta=2
    23                           	psect	text8,local,class=CODE,merge=1,delta=2
    24                           	psect	text9,local,class=CODE,merge=1,delta=2
    25                           	psect	text10,local,class=CODE,merge=1,delta=2
    26                           	psect	text11,local,class=CODE,merge=1,delta=2
    27                           	psect	text12,local,class=CODE,merge=1,delta=2
    28                           	psect	text13,local,class=CODE,merge=1,delta=2
    29                           	psect	text14,local,class=CODE,merge=1,delta=2
    30                           	psect	text15,local,class=CODE,merge=1,delta=2
    31                           	psect	text16,local,class=CODE,merge=1,delta=2
    32                           	psect	text17,local,class=CODE,merge=1,delta=2
    33                           	psect	text18,local,class=CODE,merge=1,delta=2
    34                           	psect	intentry,global,class=CODE,delta=2
    35                           	psect	text20,local,class=CODE,merge=1,delta=2
    36                           	psect	text21,local,class=CODE,merge=1,delta=2
    37                           	psect	text22,local,class=CODE,merge=1,delta=2
    38                           	psect	text23,local,class=CODE,merge=1,delta=2
    39                           	psect	text24,local,class=CODE,merge=1,delta=2
    40                           	psect	text25,local,class=CODE,merge=1,delta=2
    41                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    42                           	dabs	1,0x7E,2
    43  0000                     
    44                           ; Version 2.20
    45                           ; Generated 12/02/2020 GMT
    46                           ; 
    47                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    48                           ; All rights reserved.
    49                           ; 
    50                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    51                           ; 
    52                           ; Redistribution and use in source and binary forms, with or without modification, are
    53                           ; permitted provided that the following conditions are met:
    54                           ; 
    55                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    56                           ;        conditions and the following disclaimer.
    57                           ; 
    58                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    59                           ;        of conditions and the following disclaimer in the documentation and/or other
    60                           ;        materials provided with the distribution.
    61                           ; 
    62                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    63                           ;        software without specific prior written permission.
    64                           ; 
    65                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    66                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    67                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    68                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    69                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    70                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    71                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    72                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    73                           ; 
    74                           ; 
    75                           ; Code-generator required, PIC16F1705 Definitions
    76                           ; 
    77                           ; SFR Addresses
    78  0000                     	;# 
    79  0001                     	;# 
    80  0002                     	;# 
    81  0003                     	;# 
    82  0004                     	;# 
    83  0005                     	;# 
    84  0006                     	;# 
    85  0007                     	;# 
    86  0008                     	;# 
    87  0009                     	;# 
    88  000A                     	;# 
    89  000B                     	;# 
    90  000C                     	;# 
    91  000E                     	;# 
    92  0011                     	;# 
    93  0012                     	;# 
    94  0013                     	;# 
    95  0015                     	;# 
    96  0016                     	;# 
    97  0016                     	;# 
    98  0017                     	;# 
    99  0018                     	;# 
   100  0019                     	;# 
   101  001A                     	;# 
   102  001B                     	;# 
   103  001C                     	;# 
   104  008C                     	;# 
   105  008E                     	;# 
   106  0091                     	;# 
   107  0092                     	;# 
   108  0093                     	;# 
   109  0095                     	;# 
   110  0096                     	;# 
   111  0097                     	;# 
   112  0098                     	;# 
   113  0099                     	;# 
   114  009A                     	;# 
   115  009B                     	;# 
   116  009B                     	;# 
   117  009C                     	;# 
   118  009D                     	;# 
   119  009E                     	;# 
   120  009F                     	;# 
   121  010C                     	;# 
   122  010E                     	;# 
   123  0111                     	;# 
   124  0112                     	;# 
   125  0113                     	;# 
   126  0114                     	;# 
   127  0115                     	;# 
   128  0116                     	;# 
   129  0117                     	;# 
   130  0118                     	;# 
   131  0119                     	;# 
   132  011C                     	;# 
   133  018C                     	;# 
   134  018E                     	;# 
   135  0191                     	;# 
   136  0191                     	;# 
   137  0192                     	;# 
   138  0193                     	;# 
   139  0193                     	;# 
   140  0194                     	;# 
   141  0195                     	;# 
   142  0196                     	;# 
   143  0197                     	;# 
   144  0199                     	;# 
   145  0199                     	;# 
   146  0199                     	;# 
   147  019A                     	;# 
   148  019A                     	;# 
   149  019A                     	;# 
   150  019B                     	;# 
   151  019B                     	;# 
   152  019B                     	;# 
   153  019B                     	;# 
   154  019B                     	;# 
   155  019C                     	;# 
   156  019C                     	;# 
   157  019C                     	;# 
   158  019D                     	;# 
   159  019D                     	;# 
   160  019D                     	;# 
   161  019E                     	;# 
   162  019E                     	;# 
   163  019E                     	;# 
   164  019F                     	;# 
   165  019F                     	;# 
   166  019F                     	;# 
   167  019F                     	;# 
   168  019F                     	;# 
   169  020C                     	;# 
   170  020E                     	;# 
   171  0211                     	;# 
   172  0211                     	;# 
   173  0212                     	;# 
   174  0212                     	;# 
   175  0213                     	;# 
   176  0213                     	;# 
   177  0214                     	;# 
   178  0214                     	;# 
   179  0215                     	;# 
   180  0215                     	;# 
   181  0215                     	;# 
   182  0215                     	;# 
   183  0216                     	;# 
   184  0216                     	;# 
   185  0217                     	;# 
   186  0217                     	;# 
   187  028C                     	;# 
   188  028E                     	;# 
   189  0291                     	;# 
   190  0291                     	;# 
   191  0292                     	;# 
   192  0293                     	;# 
   193  0293                     	;# 
   194  0298                     	;# 
   195  0298                     	;# 
   196  0299                     	;# 
   197  029A                     	;# 
   198  029A                     	;# 
   199  029E                     	;# 
   200  030C                     	;# 
   201  030E                     	;# 
   202  038C                     	;# 
   203  038E                     	;# 
   204  0391                     	;# 
   205  0392                     	;# 
   206  0393                     	;# 
   207  0397                     	;# 
   208  0398                     	;# 
   209  0399                     	;# 
   210  0415                     	;# 
   211  0416                     	;# 
   212  0417                     	;# 
   213  041C                     	;# 
   214  041D                     	;# 
   215  041E                     	;# 
   216  0511                     	;# 
   217  0515                     	;# 
   218  0617                     	;# 
   219  0618                     	;# 
   220  0619                     	;# 
   221  0619                     	;# 
   222  061A                     	;# 
   223  061B                     	;# 
   224  061C                     	;# 
   225  061C                     	;# 
   226  0691                     	;# 
   227  0692                     	;# 
   228  0693                     	;# 
   229  0694                     	;# 
   230  0695                     	;# 
   231  0696                     	;# 
   232  0697                     	;# 
   233  0698                     	;# 
   234  0699                     	;# 
   235  069A                     	;# 
   236  069B                     	;# 
   237  069C                     	;# 
   238  069D                     	;# 
   239  069E                     	;# 
   240  069F                     	;# 
   241  0E0F                     	;# 
   242  0E10                     	;# 
   243  0E11                     	;# 
   244  0E12                     	;# 
   245  0E13                     	;# 
   246  0E14                     	;# 
   247  0E15                     	;# 
   248  0E17                     	;# 
   249  0E20                     	;# 
   250  0E21                     	;# 
   251  0E22                     	;# 
   252  0E24                     	;# 
   253  0E25                     	;# 
   254  0E28                     	;# 
   255  0E29                     	;# 
   256  0E2A                     	;# 
   257  0E2B                     	;# 
   258  0E90                     	;# 
   259  0E91                     	;# 
   260  0E92                     	;# 
   261  0E94                     	;# 
   262  0E95                     	;# 
   263  0EA0                     	;# 
   264  0EA1                     	;# 
   265  0EA2                     	;# 
   266  0EA3                     	;# 
   267  0EA4                     	;# 
   268  0EA5                     	;# 
   269  0F0F                     	;# 
   270  0F10                     	;# 
   271  0F11                     	;# 
   272  0F12                     	;# 
   273  0F13                     	;# 
   274  0F14                     	;# 
   275  0F15                     	;# 
   276  0F16                     	;# 
   277  0F17                     	;# 
   278  0F18                     	;# 
   279  0F19                     	;# 
   280  0F1A                     	;# 
   281  0F1B                     	;# 
   282  0F1C                     	;# 
   283  0F1D                     	;# 
   284  0F1E                     	;# 
   285  0F1F                     	;# 
   286  0F20                     	;# 
   287  0F21                     	;# 
   288  0F22                     	;# 
   289  0F23                     	;# 
   290  0F24                     	;# 
   291  0F25                     	;# 
   292  0F26                     	;# 
   293  0F27                     	;# 
   294  0F28                     	;# 
   295  0F29                     	;# 
   296  0F2A                     	;# 
   297  0F2B                     	;# 
   298  0F2C                     	;# 
   299  0F2D                     	;# 
   300  0F9E                     	;# 
   301  0FE4                     	;# 
   302  0FE5                     	;# 
   303  0FE6                     	;# 
   304  0FE7                     	;# 
   305  0FE8                     	;# 
   306  0FE9                     	;# 
   307  0FEA                     	;# 
   308  0FEB                     	;# 
   309  0FED                     	;# 
   310  0FEE                     	;# 
   311  0FEF                     	;# 
   312  0000                     	;# 
   313  0001                     	;# 
   314  0002                     	;# 
   315  0003                     	;# 
   316  0004                     	;# 
   317  0005                     	;# 
   318  0006                     	;# 
   319  0007                     	;# 
   320  0008                     	;# 
   321  0009                     	;# 
   322  000A                     	;# 
   323  000B                     	;# 
   324  000C                     	;# 
   325  000E                     	;# 
   326  0011                     	;# 
   327  0012                     	;# 
   328  0013                     	;# 
   329  0015                     	;# 
   330  0016                     	;# 
   331  0016                     	;# 
   332  0017                     	;# 
   333  0018                     	;# 
   334  0019                     	;# 
   335  001A                     	;# 
   336  001B                     	;# 
   337  001C                     	;# 
   338  008C                     	;# 
   339  008E                     	;# 
   340  0091                     	;# 
   341  0092                     	;# 
   342  0093                     	;# 
   343  0095                     	;# 
   344  0096                     	;# 
   345  0097                     	;# 
   346  0098                     	;# 
   347  0099                     	;# 
   348  009A                     	;# 
   349  009B                     	;# 
   350  009B                     	;# 
   351  009C                     	;# 
   352  009D                     	;# 
   353  009E                     	;# 
   354  009F                     	;# 
   355  010C                     	;# 
   356  010E                     	;# 
   357  0111                     	;# 
   358  0112                     	;# 
   359  0113                     	;# 
   360  0114                     	;# 
   361  0115                     	;# 
   362  0116                     	;# 
   363  0117                     	;# 
   364  0118                     	;# 
   365  0119                     	;# 
   366  011C                     	;# 
   367  018C                     	;# 
   368  018E                     	;# 
   369  0191                     	;# 
   370  0191                     	;# 
   371  0192                     	;# 
   372  0193                     	;# 
   373  0193                     	;# 
   374  0194                     	;# 
   375  0195                     	;# 
   376  0196                     	;# 
   377  0197                     	;# 
   378  0199                     	;# 
   379  0199                     	;# 
   380  0199                     	;# 
   381  019A                     	;# 
   382  019A                     	;# 
   383  019A                     	;# 
   384  019B                     	;# 
   385  019B                     	;# 
   386  019B                     	;# 
   387  019B                     	;# 
   388  019B                     	;# 
   389  019C                     	;# 
   390  019C                     	;# 
   391  019C                     	;# 
   392  019D                     	;# 
   393  019D                     	;# 
   394  019D                     	;# 
   395  019E                     	;# 
   396  019E                     	;# 
   397  019E                     	;# 
   398  019F                     	;# 
   399  019F                     	;# 
   400  019F                     	;# 
   401  019F                     	;# 
   402  019F                     	;# 
   403  020C                     	;# 
   404  020E                     	;# 
   405  0211                     	;# 
   406  0211                     	;# 
   407  0212                     	;# 
   408  0212                     	;# 
   409  0213                     	;# 
   410  0213                     	;# 
   411  0214                     	;# 
   412  0214                     	;# 
   413  0215                     	;# 
   414  0215                     	;# 
   415  0215                     	;# 
   416  0215                     	;# 
   417  0216                     	;# 
   418  0216                     	;# 
   419  0217                     	;# 
   420  0217                     	;# 
   421  028C                     	;# 
   422  028E                     	;# 
   423  0291                     	;# 
   424  0291                     	;# 
   425  0292                     	;# 
   426  0293                     	;# 
   427  0293                     	;# 
   428  0298                     	;# 
   429  0298                     	;# 
   430  0299                     	;# 
   431  029A                     	;# 
   432  029A                     	;# 
   433  029E                     	;# 
   434  030C                     	;# 
   435  030E                     	;# 
   436  038C                     	;# 
   437  038E                     	;# 
   438  0391                     	;# 
   439  0392                     	;# 
   440  0393                     	;# 
   441  0397                     	;# 
   442  0398                     	;# 
   443  0399                     	;# 
   444  0415                     	;# 
   445  0416                     	;# 
   446  0417                     	;# 
   447  041C                     	;# 
   448  041D                     	;# 
   449  041E                     	;# 
   450  0511                     	;# 
   451  0515                     	;# 
   452  0617                     	;# 
   453  0618                     	;# 
   454  0619                     	;# 
   455  0619                     	;# 
   456  061A                     	;# 
   457  061B                     	;# 
   458  061C                     	;# 
   459  061C                     	;# 
   460  0691                     	;# 
   461  0692                     	;# 
   462  0693                     	;# 
   463  0694                     	;# 
   464  0695                     	;# 
   465  0696                     	;# 
   466  0697                     	;# 
   467  0698                     	;# 
   468  0699                     	;# 
   469  069A                     	;# 
   470  069B                     	;# 
   471  069C                     	;# 
   472  069D                     	;# 
   473  069E                     	;# 
   474  069F                     	;# 
   475  0E0F                     	;# 
   476  0E10                     	;# 
   477  0E11                     	;# 
   478  0E12                     	;# 
   479  0E13                     	;# 
   480  0E14                     	;# 
   481  0E15                     	;# 
   482  0E17                     	;# 
   483  0E20                     	;# 
   484  0E21                     	;# 
   485  0E22                     	;# 
   486  0E24                     	;# 
   487  0E25                     	;# 
   488  0E28                     	;# 
   489  0E29                     	;# 
   490  0E2A                     	;# 
   491  0E2B                     	;# 
   492  0E90                     	;# 
   493  0E91                     	;# 
   494  0E92                     	;# 
   495  0E94                     	;# 
   496  0E95                     	;# 
   497  0EA0                     	;# 
   498  0EA1                     	;# 
   499  0EA2                     	;# 
   500  0EA3                     	;# 
   501  0EA4                     	;# 
   502  0EA5                     	;# 
   503  0F0F                     	;# 
   504  0F10                     	;# 
   505  0F11                     	;# 
   506  0F12                     	;# 
   507  0F13                     	;# 
   508  0F14                     	;# 
   509  0F15                     	;# 
   510  0F16                     	;# 
   511  0F17                     	;# 
   512  0F18                     	;# 
   513  0F19                     	;# 
   514  0F1A                     	;# 
   515  0F1B                     	;# 
   516  0F1C                     	;# 
   517  0F1D                     	;# 
   518  0F1E                     	;# 
   519  0F1F                     	;# 
   520  0F20                     	;# 
   521  0F21                     	;# 
   522  0F22                     	;# 
   523  0F23                     	;# 
   524  0F24                     	;# 
   525  0F25                     	;# 
   526  0F26                     	;# 
   527  0F27                     	;# 
   528  0F28                     	;# 
   529  0F29                     	;# 
   530  0F2A                     	;# 
   531  0F2B                     	;# 
   532  0F2C                     	;# 
   533  0F2D                     	;# 
   534  0F9E                     	;# 
   535  0FE4                     	;# 
   536  0FE5                     	;# 
   537  0FE6                     	;# 
   538  0FE7                     	;# 
   539  0FE8                     	;# 
   540  0FE9                     	;# 
   541  0FEA                     	;# 
   542  0FEB                     	;# 
   543  0FED                     	;# 
   544  0FEE                     	;# 
   545  0FEF                     	;# 
   546  0000                     	;# 
   547  0001                     	;# 
   548  0002                     	;# 
   549  0003                     	;# 
   550  0004                     	;# 
   551  0005                     	;# 
   552  0006                     	;# 
   553  0007                     	;# 
   554  0008                     	;# 
   555  0009                     	;# 
   556  000A                     	;# 
   557  000B                     	;# 
   558  000C                     	;# 
   559  000E                     	;# 
   560  0011                     	;# 
   561  0012                     	;# 
   562  0013                     	;# 
   563  0015                     	;# 
   564  0016                     	;# 
   565  0016                     	;# 
   566  0017                     	;# 
   567  0018                     	;# 
   568  0019                     	;# 
   569  001A                     	;# 
   570  001B                     	;# 
   571  001C                     	;# 
   572  008C                     	;# 
   573  008E                     	;# 
   574  0091                     	;# 
   575  0092                     	;# 
   576  0093                     	;# 
   577  0095                     	;# 
   578  0096                     	;# 
   579  0097                     	;# 
   580  0098                     	;# 
   581  0099                     	;# 
   582  009A                     	;# 
   583  009B                     	;# 
   584  009B                     	;# 
   585  009C                     	;# 
   586  009D                     	;# 
   587  009E                     	;# 
   588  009F                     	;# 
   589  010C                     	;# 
   590  010E                     	;# 
   591  0111                     	;# 
   592  0112                     	;# 
   593  0113                     	;# 
   594  0114                     	;# 
   595  0115                     	;# 
   596  0116                     	;# 
   597  0117                     	;# 
   598  0118                     	;# 
   599  0119                     	;# 
   600  011C                     	;# 
   601  018C                     	;# 
   602  018E                     	;# 
   603  0191                     	;# 
   604  0191                     	;# 
   605  0192                     	;# 
   606  0193                     	;# 
   607  0193                     	;# 
   608  0194                     	;# 
   609  0195                     	;# 
   610  0196                     	;# 
   611  0197                     	;# 
   612  0199                     	;# 
   613  0199                     	;# 
   614  0199                     	;# 
   615  019A                     	;# 
   616  019A                     	;# 
   617  019A                     	;# 
   618  019B                     	;# 
   619  019B                     	;# 
   620  019B                     	;# 
   621  019B                     	;# 
   622  019B                     	;# 
   623  019C                     	;# 
   624  019C                     	;# 
   625  019C                     	;# 
   626  019D                     	;# 
   627  019D                     	;# 
   628  019D                     	;# 
   629  019E                     	;# 
   630  019E                     	;# 
   631  019E                     	;# 
   632  019F                     	;# 
   633  019F                     	;# 
   634  019F                     	;# 
   635  019F                     	;# 
   636  019F                     	;# 
   637  020C                     	;# 
   638  020E                     	;# 
   639  0211                     	;# 
   640  0211                     	;# 
   641  0212                     	;# 
   642  0212                     	;# 
   643  0213                     	;# 
   644  0213                     	;# 
   645  0214                     	;# 
   646  0214                     	;# 
   647  0215                     	;# 
   648  0215                     	;# 
   649  0215                     	;# 
   650  0215                     	;# 
   651  0216                     	;# 
   652  0216                     	;# 
   653  0217                     	;# 
   654  0217                     	;# 
   655  028C                     	;# 
   656  028E                     	;# 
   657  0291                     	;# 
   658  0291                     	;# 
   659  0292                     	;# 
   660  0293                     	;# 
   661  0293                     	;# 
   662  0298                     	;# 
   663  0298                     	;# 
   664  0299                     	;# 
   665  029A                     	;# 
   666  029A                     	;# 
   667  029E                     	;# 
   668  030C                     	;# 
   669  030E                     	;# 
   670  038C                     	;# 
   671  038E                     	;# 
   672  0391                     	;# 
   673  0392                     	;# 
   674  0393                     	;# 
   675  0397                     	;# 
   676  0398                     	;# 
   677  0399                     	;# 
   678  0415                     	;# 
   679  0416                     	;# 
   680  0417                     	;# 
   681  041C                     	;# 
   682  041D                     	;# 
   683  041E                     	;# 
   684  0511                     	;# 
   685  0515                     	;# 
   686  0617                     	;# 
   687  0618                     	;# 
   688  0619                     	;# 
   689  0619                     	;# 
   690  061A                     	;# 
   691  061B                     	;# 
   692  061C                     	;# 
   693  061C                     	;# 
   694  0691                     	;# 
   695  0692                     	;# 
   696  0693                     	;# 
   697  0694                     	;# 
   698  0695                     	;# 
   699  0696                     	;# 
   700  0697                     	;# 
   701  0698                     	;# 
   702  0699                     	;# 
   703  069A                     	;# 
   704  069B                     	;# 
   705  069C                     	;# 
   706  069D                     	;# 
   707  069E                     	;# 
   708  069F                     	;# 
   709  0E0F                     	;# 
   710  0E10                     	;# 
   711  0E11                     	;# 
   712  0E12                     	;# 
   713  0E13                     	;# 
   714  0E14                     	;# 
   715  0E15                     	;# 
   716  0E17                     	;# 
   717  0E20                     	;# 
   718  0E21                     	;# 
   719  0E22                     	;# 
   720  0E24                     	;# 
   721  0E25                     	;# 
   722  0E28                     	;# 
   723  0E29                     	;# 
   724  0E2A                     	;# 
   725  0E2B                     	;# 
   726  0E90                     	;# 
   727  0E91                     	;# 
   728  0E92                     	;# 
   729  0E94                     	;# 
   730  0E95                     	;# 
   731  0EA0                     	;# 
   732  0EA1                     	;# 
   733  0EA2                     	;# 
   734  0EA3                     	;# 
   735  0EA4                     	;# 
   736  0EA5                     	;# 
   737  0F0F                     	;# 
   738  0F10                     	;# 
   739  0F11                     	;# 
   740  0F12                     	;# 
   741  0F13                     	;# 
   742  0F14                     	;# 
   743  0F15                     	;# 
   744  0F16                     	;# 
   745  0F17                     	;# 
   746  0F18                     	;# 
   747  0F19                     	;# 
   748  0F1A                     	;# 
   749  0F1B                     	;# 
   750  0F1C                     	;# 
   751  0F1D                     	;# 
   752  0F1E                     	;# 
   753  0F1F                     	;# 
   754  0F20                     	;# 
   755  0F21                     	;# 
   756  0F22                     	;# 
   757  0F23                     	;# 
   758  0F24                     	;# 
   759  0F25                     	;# 
   760  0F26                     	;# 
   761  0F27                     	;# 
   762  0F28                     	;# 
   763  0F29                     	;# 
   764  0F2A                     	;# 
   765  0F2B                     	;# 
   766  0F2C                     	;# 
   767  0F2D                     	;# 
   768  0F9E                     	;# 
   769  0FE4                     	;# 
   770  0FE5                     	;# 
   771  0FE6                     	;# 
   772  0FE7                     	;# 
   773  0FE8                     	;# 
   774  0FE9                     	;# 
   775  0FEA                     	;# 
   776  0FEB                     	;# 
   777  0FED                     	;# 
   778  0FEE                     	;# 
   779  0FEF                     	;# 
   780  0000                     	;# 
   781  0001                     	;# 
   782  0002                     	;# 
   783  0003                     	;# 
   784  0004                     	;# 
   785  0005                     	;# 
   786  0006                     	;# 
   787  0007                     	;# 
   788  0008                     	;# 
   789  0009                     	;# 
   790  000A                     	;# 
   791  000B                     	;# 
   792  000C                     	;# 
   793  000E                     	;# 
   794  0011                     	;# 
   795  0012                     	;# 
   796  0013                     	;# 
   797  0015                     	;# 
   798  0016                     	;# 
   799  0016                     	;# 
   800  0017                     	;# 
   801  0018                     	;# 
   802  0019                     	;# 
   803  001A                     	;# 
   804  001B                     	;# 
   805  001C                     	;# 
   806  008C                     	;# 
   807  008E                     	;# 
   808  0091                     	;# 
   809  0092                     	;# 
   810  0093                     	;# 
   811  0095                     	;# 
   812  0096                     	;# 
   813  0097                     	;# 
   814  0098                     	;# 
   815  0099                     	;# 
   816  009A                     	;# 
   817  009B                     	;# 
   818  009B                     	;# 
   819  009C                     	;# 
   820  009D                     	;# 
   821  009E                     	;# 
   822  009F                     	;# 
   823  010C                     	;# 
   824  010E                     	;# 
   825  0111                     	;# 
   826  0112                     	;# 
   827  0113                     	;# 
   828  0114                     	;# 
   829  0115                     	;# 
   830  0116                     	;# 
   831  0117                     	;# 
   832  0118                     	;# 
   833  0119                     	;# 
   834  011C                     	;# 
   835  018C                     	;# 
   836  018E                     	;# 
   837  0191                     	;# 
   838  0191                     	;# 
   839  0192                     	;# 
   840  0193                     	;# 
   841  0193                     	;# 
   842  0194                     	;# 
   843  0195                     	;# 
   844  0196                     	;# 
   845  0197                     	;# 
   846  0199                     	;# 
   847  0199                     	;# 
   848  0199                     	;# 
   849  019A                     	;# 
   850  019A                     	;# 
   851  019A                     	;# 
   852  019B                     	;# 
   853  019B                     	;# 
   854  019B                     	;# 
   855  019B                     	;# 
   856  019B                     	;# 
   857  019C                     	;# 
   858  019C                     	;# 
   859  019C                     	;# 
   860  019D                     	;# 
   861  019D                     	;# 
   862  019D                     	;# 
   863  019E                     	;# 
   864  019E                     	;# 
   865  019E                     	;# 
   866  019F                     	;# 
   867  019F                     	;# 
   868  019F                     	;# 
   869  019F                     	;# 
   870  019F                     	;# 
   871  020C                     	;# 
   872  020E                     	;# 
   873  0211                     	;# 
   874  0211                     	;# 
   875  0212                     	;# 
   876  0212                     	;# 
   877  0213                     	;# 
   878  0213                     	;# 
   879  0214                     	;# 
   880  0214                     	;# 
   881  0215                     	;# 
   882  0215                     	;# 
   883  0215                     	;# 
   884  0215                     	;# 
   885  0216                     	;# 
   886  0216                     	;# 
   887  0217                     	;# 
   888  0217                     	;# 
   889  028C                     	;# 
   890  028E                     	;# 
   891  0291                     	;# 
   892  0291                     	;# 
   893  0292                     	;# 
   894  0293                     	;# 
   895  0293                     	;# 
   896  0298                     	;# 
   897  0298                     	;# 
   898  0299                     	;# 
   899  029A                     	;# 
   900  029A                     	;# 
   901  029E                     	;# 
   902  030C                     	;# 
   903  030E                     	;# 
   904  038C                     	;# 
   905  038E                     	;# 
   906  0391                     	;# 
   907  0392                     	;# 
   908  0393                     	;# 
   909  0397                     	;# 
   910  0398                     	;# 
   911  0399                     	;# 
   912  0415                     	;# 
   913  0416                     	;# 
   914  0417                     	;# 
   915  041C                     	;# 
   916  041D                     	;# 
   917  041E                     	;# 
   918  0511                     	;# 
   919  0515                     	;# 
   920  0617                     	;# 
   921  0618                     	;# 
   922  0619                     	;# 
   923  0619                     	;# 
   924  061A                     	;# 
   925  061B                     	;# 
   926  061C                     	;# 
   927  061C                     	;# 
   928  0691                     	;# 
   929  0692                     	;# 
   930  0693                     	;# 
   931  0694                     	;# 
   932  0695                     	;# 
   933  0696                     	;# 
   934  0697                     	;# 
   935  0698                     	;# 
   936  0699                     	;# 
   937  069A                     	;# 
   938  069B                     	;# 
   939  069C                     	;# 
   940  069D                     	;# 
   941  069E                     	;# 
   942  069F                     	;# 
   943  0E0F                     	;# 
   944  0E10                     	;# 
   945  0E11                     	;# 
   946  0E12                     	;# 
   947  0E13                     	;# 
   948  0E14                     	;# 
   949  0E15                     	;# 
   950  0E17                     	;# 
   951  0E20                     	;# 
   952  0E21                     	;# 
   953  0E22                     	;# 
   954  0E24                     	;# 
   955  0E25                     	;# 
   956  0E28                     	;# 
   957  0E29                     	;# 
   958  0E2A                     	;# 
   959  0E2B                     	;# 
   960  0E90                     	;# 
   961  0E91                     	;# 
   962  0E92                     	;# 
   963  0E94                     	;# 
   964  0E95                     	;# 
   965  0EA0                     	;# 
   966  0EA1                     	;# 
   967  0EA2                     	;# 
   968  0EA3                     	;# 
   969  0EA4                     	;# 
   970  0EA5                     	;# 
   971  0F0F                     	;# 
   972  0F10                     	;# 
   973  0F11                     	;# 
   974  0F12                     	;# 
   975  0F13                     	;# 
   976  0F14                     	;# 
   977  0F15                     	;# 
   978  0F16                     	;# 
   979  0F17                     	;# 
   980  0F18                     	;# 
   981  0F19                     	;# 
   982  0F1A                     	;# 
   983  0F1B                     	;# 
   984  0F1C                     	;# 
   985  0F1D                     	;# 
   986  0F1E                     	;# 
   987  0F1F                     	;# 
   988  0F20                     	;# 
   989  0F21                     	;# 
   990  0F22                     	;# 
   991  0F23                     	;# 
   992  0F24                     	;# 
   993  0F25                     	;# 
   994  0F26                     	;# 
   995  0F27                     	;# 
   996  0F28                     	;# 
   997  0F29                     	;# 
   998  0F2A                     	;# 
   999  0F2B                     	;# 
  1000  0F2C                     	;# 
  1001  0F2D                     	;# 
  1002  0F9E                     	;# 
  1003  0FE4                     	;# 
  1004  0FE5                     	;# 
  1005  0FE6                     	;# 
  1006  0FE7                     	;# 
  1007  0FE8                     	;# 
  1008  0FE9                     	;# 
  1009  0FEA                     	;# 
  1010  0FEB                     	;# 
  1011  0FED                     	;# 
  1012  0FEE                     	;# 
  1013  0FEF                     	;# 
  1014  0000                     	;# 
  1015  0001                     	;# 
  1016  0002                     	;# 
  1017  0003                     	;# 
  1018  0004                     	;# 
  1019  0005                     	;# 
  1020  0006                     	;# 
  1021  0007                     	;# 
  1022  0008                     	;# 
  1023  0009                     	;# 
  1024  000A                     	;# 
  1025  000B                     	;# 
  1026  000C                     	;# 
  1027  000E                     	;# 
  1028  0011                     	;# 
  1029  0012                     	;# 
  1030  0013                     	;# 
  1031  0015                     	;# 
  1032  0016                     	;# 
  1033  0016                     	;# 
  1034  0017                     	;# 
  1035  0018                     	;# 
  1036  0019                     	;# 
  1037  001A                     	;# 
  1038  001B                     	;# 
  1039  001C                     	;# 
  1040  008C                     	;# 
  1041  008E                     	;# 
  1042  0091                     	;# 
  1043  0092                     	;# 
  1044  0093                     	;# 
  1045  0095                     	;# 
  1046  0096                     	;# 
  1047  0097                     	;# 
  1048  0098                     	;# 
  1049  0099                     	;# 
  1050  009A                     	;# 
  1051  009B                     	;# 
  1052  009B                     	;# 
  1053  009C                     	;# 
  1054  009D                     	;# 
  1055  009E                     	;# 
  1056  009F                     	;# 
  1057  010C                     	;# 
  1058  010E                     	;# 
  1059  0111                     	;# 
  1060  0112                     	;# 
  1061  0113                     	;# 
  1062  0114                     	;# 
  1063  0115                     	;# 
  1064  0116                     	;# 
  1065  0117                     	;# 
  1066  0118                     	;# 
  1067  0119                     	;# 
  1068  011C                     	;# 
  1069  018C                     	;# 
  1070  018E                     	;# 
  1071  0191                     	;# 
  1072  0191                     	;# 
  1073  0192                     	;# 
  1074  0193                     	;# 
  1075  0193                     	;# 
  1076  0194                     	;# 
  1077  0195                     	;# 
  1078  0196                     	;# 
  1079  0197                     	;# 
  1080  0199                     	;# 
  1081  0199                     	;# 
  1082  0199                     	;# 
  1083  019A                     	;# 
  1084  019A                     	;# 
  1085  019A                     	;# 
  1086  019B                     	;# 
  1087  019B                     	;# 
  1088  019B                     	;# 
  1089  019B                     	;# 
  1090  019B                     	;# 
  1091  019C                     	;# 
  1092  019C                     	;# 
  1093  019C                     	;# 
  1094  019D                     	;# 
  1095  019D                     	;# 
  1096  019D                     	;# 
  1097  019E                     	;# 
  1098  019E                     	;# 
  1099  019E                     	;# 
  1100  019F                     	;# 
  1101  019F                     	;# 
  1102  019F                     	;# 
  1103  019F                     	;# 
  1104  019F                     	;# 
  1105  020C                     	;# 
  1106  020E                     	;# 
  1107  0211                     	;# 
  1108  0211                     	;# 
  1109  0212                     	;# 
  1110  0212                     	;# 
  1111  0213                     	;# 
  1112  0213                     	;# 
  1113  0214                     	;# 
  1114  0214                     	;# 
  1115  0215                     	;# 
  1116  0215                     	;# 
  1117  0215                     	;# 
  1118  0215                     	;# 
  1119  0216                     	;# 
  1120  0216                     	;# 
  1121  0217                     	;# 
  1122  0217                     	;# 
  1123  028C                     	;# 
  1124  028E                     	;# 
  1125  0291                     	;# 
  1126  0291                     	;# 
  1127  0292                     	;# 
  1128  0293                     	;# 
  1129  0293                     	;# 
  1130  0298                     	;# 
  1131  0298                     	;# 
  1132  0299                     	;# 
  1133  029A                     	;# 
  1134  029A                     	;# 
  1135  029E                     	;# 
  1136  030C                     	;# 
  1137  030E                     	;# 
  1138  038C                     	;# 
  1139  038E                     	;# 
  1140  0391                     	;# 
  1141  0392                     	;# 
  1142  0393                     	;# 
  1143  0397                     	;# 
  1144  0398                     	;# 
  1145  0399                     	;# 
  1146  0415                     	;# 
  1147  0416                     	;# 
  1148  0417                     	;# 
  1149  041C                     	;# 
  1150  041D                     	;# 
  1151  041E                     	;# 
  1152  0511                     	;# 
  1153  0515                     	;# 
  1154  0617                     	;# 
  1155  0618                     	;# 
  1156  0619                     	;# 
  1157  0619                     	;# 
  1158  061A                     	;# 
  1159  061B                     	;# 
  1160  061C                     	;# 
  1161  061C                     	;# 
  1162  0691                     	;# 
  1163  0692                     	;# 
  1164  0693                     	;# 
  1165  0694                     	;# 
  1166  0695                     	;# 
  1167  0696                     	;# 
  1168  0697                     	;# 
  1169  0698                     	;# 
  1170  0699                     	;# 
  1171  069A                     	;# 
  1172  069B                     	;# 
  1173  069C                     	;# 
  1174  069D                     	;# 
  1175  069E                     	;# 
  1176  069F                     	;# 
  1177  0E0F                     	;# 
  1178  0E10                     	;# 
  1179  0E11                     	;# 
  1180  0E12                     	;# 
  1181  0E13                     	;# 
  1182  0E14                     	;# 
  1183  0E15                     	;# 
  1184  0E17                     	;# 
  1185  0E20                     	;# 
  1186  0E21                     	;# 
  1187  0E22                     	;# 
  1188  0E24                     	;# 
  1189  0E25                     	;# 
  1190  0E28                     	;# 
  1191  0E29                     	;# 
  1192  0E2A                     	;# 
  1193  0E2B                     	;# 
  1194  0E90                     	;# 
  1195  0E91                     	;# 
  1196  0E92                     	;# 
  1197  0E94                     	;# 
  1198  0E95                     	;# 
  1199  0EA0                     	;# 
  1200  0EA1                     	;# 
  1201  0EA2                     	;# 
  1202  0EA3                     	;# 
  1203  0EA4                     	;# 
  1204  0EA5                     	;# 
  1205  0F0F                     	;# 
  1206  0F10                     	;# 
  1207  0F11                     	;# 
  1208  0F12                     	;# 
  1209  0F13                     	;# 
  1210  0F14                     	;# 
  1211  0F15                     	;# 
  1212  0F16                     	;# 
  1213  0F17                     	;# 
  1214  0F18                     	;# 
  1215  0F19                     	;# 
  1216  0F1A                     	;# 
  1217  0F1B                     	;# 
  1218  0F1C                     	;# 
  1219  0F1D                     	;# 
  1220  0F1E                     	;# 
  1221  0F1F                     	;# 
  1222  0F20                     	;# 
  1223  0F21                     	;# 
  1224  0F22                     	;# 
  1225  0F23                     	;# 
  1226  0F24                     	;# 
  1227  0F25                     	;# 
  1228  0F26                     	;# 
  1229  0F27                     	;# 
  1230  0F28                     	;# 
  1231  0F29                     	;# 
  1232  0F2A                     	;# 
  1233  0F2B                     	;# 
  1234  0F2C                     	;# 
  1235  0F2D                     	;# 
  1236  0F9E                     	;# 
  1237  0FE4                     	;# 
  1238  0FE5                     	;# 
  1239  0FE6                     	;# 
  1240  0FE7                     	;# 
  1241  0FE8                     	;# 
  1242  0FE9                     	;# 
  1243  0FEA                     	;# 
  1244  0FEB                     	;# 
  1245  0FED                     	;# 
  1246  0FEE                     	;# 
  1247  0FEF                     	;# 
  1248  0000                     	;# 
  1249  0001                     	;# 
  1250  0002                     	;# 
  1251  0003                     	;# 
  1252  0004                     	;# 
  1253  0005                     	;# 
  1254  0006                     	;# 
  1255  0007                     	;# 
  1256  0008                     	;# 
  1257  0009                     	;# 
  1258  000A                     	;# 
  1259  000B                     	;# 
  1260  000C                     	;# 
  1261  000E                     	;# 
  1262  0011                     	;# 
  1263  0012                     	;# 
  1264  0013                     	;# 
  1265  0015                     	;# 
  1266  0016                     	;# 
  1267  0016                     	;# 
  1268  0017                     	;# 
  1269  0018                     	;# 
  1270  0019                     	;# 
  1271  001A                     	;# 
  1272  001B                     	;# 
  1273  001C                     	;# 
  1274  008C                     	;# 
  1275  008E                     	;# 
  1276  0091                     	;# 
  1277  0092                     	;# 
  1278  0093                     	;# 
  1279  0095                     	;# 
  1280  0096                     	;# 
  1281  0097                     	;# 
  1282  0098                     	;# 
  1283  0099                     	;# 
  1284  009A                     	;# 
  1285  009B                     	;# 
  1286  009B                     	;# 
  1287  009C                     	;# 
  1288  009D                     	;# 
  1289  009E                     	;# 
  1290  009F                     	;# 
  1291  010C                     	;# 
  1292  010E                     	;# 
  1293  0111                     	;# 
  1294  0112                     	;# 
  1295  0113                     	;# 
  1296  0114                     	;# 
  1297  0115                     	;# 
  1298  0116                     	;# 
  1299  0117                     	;# 
  1300  0118                     	;# 
  1301  0119                     	;# 
  1302  011C                     	;# 
  1303  018C                     	;# 
  1304  018E                     	;# 
  1305  0191                     	;# 
  1306  0191                     	;# 
  1307  0192                     	;# 
  1308  0193                     	;# 
  1309  0193                     	;# 
  1310  0194                     	;# 
  1311  0195                     	;# 
  1312  0196                     	;# 
  1313  0197                     	;# 
  1314  0199                     	;# 
  1315  0199                     	;# 
  1316  0199                     	;# 
  1317  019A                     	;# 
  1318  019A                     	;# 
  1319  019A                     	;# 
  1320  019B                     	;# 
  1321  019B                     	;# 
  1322  019B                     	;# 
  1323  019B                     	;# 
  1324  019B                     	;# 
  1325  019C                     	;# 
  1326  019C                     	;# 
  1327  019C                     	;# 
  1328  019D                     	;# 
  1329  019D                     	;# 
  1330  019D                     	;# 
  1331  019E                     	;# 
  1332  019E                     	;# 
  1333  019E                     	;# 
  1334  019F                     	;# 
  1335  019F                     	;# 
  1336  019F                     	;# 
  1337  019F                     	;# 
  1338  019F                     	;# 
  1339  020C                     	;# 
  1340  020E                     	;# 
  1341  0211                     	;# 
  1342  0211                     	;# 
  1343  0212                     	;# 
  1344  0212                     	;# 
  1345  0213                     	;# 
  1346  0213                     	;# 
  1347  0214                     	;# 
  1348  0214                     	;# 
  1349  0215                     	;# 
  1350  0215                     	;# 
  1351  0215                     	;# 
  1352  0215                     	;# 
  1353  0216                     	;# 
  1354  0216                     	;# 
  1355  0217                     	;# 
  1356  0217                     	;# 
  1357  028C                     	;# 
  1358  028E                     	;# 
  1359  0291                     	;# 
  1360  0291                     	;# 
  1361  0292                     	;# 
  1362  0293                     	;# 
  1363  0293                     	;# 
  1364  0298                     	;# 
  1365  0298                     	;# 
  1366  0299                     	;# 
  1367  029A                     	;# 
  1368  029A                     	;# 
  1369  029E                     	;# 
  1370  030C                     	;# 
  1371  030E                     	;# 
  1372  038C                     	;# 
  1373  038E                     	;# 
  1374  0391                     	;# 
  1375  0392                     	;# 
  1376  0393                     	;# 
  1377  0397                     	;# 
  1378  0398                     	;# 
  1379  0399                     	;# 
  1380  0415                     	;# 
  1381  0416                     	;# 
  1382  0417                     	;# 
  1383  041C                     	;# 
  1384  041D                     	;# 
  1385  041E                     	;# 
  1386  0511                     	;# 
  1387  0515                     	;# 
  1388  0617                     	;# 
  1389  0618                     	;# 
  1390  0619                     	;# 
  1391  0619                     	;# 
  1392  061A                     	;# 
  1393  061B                     	;# 
  1394  061C                     	;# 
  1395  061C                     	;# 
  1396  0691                     	;# 
  1397  0692                     	;# 
  1398  0693                     	;# 
  1399  0694                     	;# 
  1400  0695                     	;# 
  1401  0696                     	;# 
  1402  0697                     	;# 
  1403  0698                     	;# 
  1404  0699                     	;# 
  1405  069A                     	;# 
  1406  069B                     	;# 
  1407  069C                     	;# 
  1408  069D                     	;# 
  1409  069E                     	;# 
  1410  069F                     	;# 
  1411  0E0F                     	;# 
  1412  0E10                     	;# 
  1413  0E11                     	;# 
  1414  0E12                     	;# 
  1415  0E13                     	;# 
  1416  0E14                     	;# 
  1417  0E15                     	;# 
  1418  0E17                     	;# 
  1419  0E20                     	;# 
  1420  0E21                     	;# 
  1421  0E22                     	;# 
  1422  0E24                     	;# 
  1423  0E25                     	;# 
  1424  0E28                     	;# 
  1425  0E29                     	;# 
  1426  0E2A                     	;# 
  1427  0E2B                     	;# 
  1428  0E90                     	;# 
  1429  0E91                     	;# 
  1430  0E92                     	;# 
  1431  0E94                     	;# 
  1432  0E95                     	;# 
  1433  0EA0                     	;# 
  1434  0EA1                     	;# 
  1435  0EA2                     	;# 
  1436  0EA3                     	;# 
  1437  0EA4                     	;# 
  1438  0EA5                     	;# 
  1439  0F0F                     	;# 
  1440  0F10                     	;# 
  1441  0F11                     	;# 
  1442  0F12                     	;# 
  1443  0F13                     	;# 
  1444  0F14                     	;# 
  1445  0F15                     	;# 
  1446  0F16                     	;# 
  1447  0F17                     	;# 
  1448  0F18                     	;# 
  1449  0F19                     	;# 
  1450  0F1A                     	;# 
  1451  0F1B                     	;# 
  1452  0F1C                     	;# 
  1453  0F1D                     	;# 
  1454  0F1E                     	;# 
  1455  0F1F                     	;# 
  1456  0F20                     	;# 
  1457  0F21                     	;# 
  1458  0F22                     	;# 
  1459  0F23                     	;# 
  1460  0F24                     	;# 
  1461  0F25                     	;# 
  1462  0F26                     	;# 
  1463  0F27                     	;# 
  1464  0F28                     	;# 
  1465  0F29                     	;# 
  1466  0F2A                     	;# 
  1467  0F2B                     	;# 
  1468  0F2C                     	;# 
  1469  0F2D                     	;# 
  1470  0F9E                     	;# 
  1471  0FE4                     	;# 
  1472  0FE5                     	;# 
  1473  0FE6                     	;# 
  1474  0FE7                     	;# 
  1475  0FE8                     	;# 
  1476  0FE9                     	;# 
  1477  0FEA                     	;# 
  1478  0FEB                     	;# 
  1479  0FED                     	;# 
  1480  0FEE                     	;# 
  1481  0FEF                     	;# 
  1482  0000                     	;# 
  1483  0001                     	;# 
  1484  0002                     	;# 
  1485  0003                     	;# 
  1486  0004                     	;# 
  1487  0005                     	;# 
  1488  0006                     	;# 
  1489  0007                     	;# 
  1490  0008                     	;# 
  1491  0009                     	;# 
  1492  000A                     	;# 
  1493  000B                     	;# 
  1494  000C                     	;# 
  1495  000E                     	;# 
  1496  0011                     	;# 
  1497  0012                     	;# 
  1498  0013                     	;# 
  1499  0015                     	;# 
  1500  0016                     	;# 
  1501  0016                     	;# 
  1502  0017                     	;# 
  1503  0018                     	;# 
  1504  0019                     	;# 
  1505  001A                     	;# 
  1506  001B                     	;# 
  1507  001C                     	;# 
  1508  008C                     	;# 
  1509  008E                     	;# 
  1510  0091                     	;# 
  1511  0092                     	;# 
  1512  0093                     	;# 
  1513  0095                     	;# 
  1514  0096                     	;# 
  1515  0097                     	;# 
  1516  0098                     	;# 
  1517  0099                     	;# 
  1518  009A                     	;# 
  1519  009B                     	;# 
  1520  009B                     	;# 
  1521  009C                     	;# 
  1522  009D                     	;# 
  1523  009E                     	;# 
  1524  009F                     	;# 
  1525  010C                     	;# 
  1526  010E                     	;# 
  1527  0111                     	;# 
  1528  0112                     	;# 
  1529  0113                     	;# 
  1530  0114                     	;# 
  1531  0115                     	;# 
  1532  0116                     	;# 
  1533  0117                     	;# 
  1534  0118                     	;# 
  1535  0119                     	;# 
  1536  011C                     	;# 
  1537  018C                     	;# 
  1538  018E                     	;# 
  1539  0191                     	;# 
  1540  0191                     	;# 
  1541  0192                     	;# 
  1542  0193                     	;# 
  1543  0193                     	;# 
  1544  0194                     	;# 
  1545  0195                     	;# 
  1546  0196                     	;# 
  1547  0197                     	;# 
  1548  0199                     	;# 
  1549  0199                     	;# 
  1550  0199                     	;# 
  1551  019A                     	;# 
  1552  019A                     	;# 
  1553  019A                     	;# 
  1554  019B                     	;# 
  1555  019B                     	;# 
  1556  019B                     	;# 
  1557  019B                     	;# 
  1558  019B                     	;# 
  1559  019C                     	;# 
  1560  019C                     	;# 
  1561  019C                     	;# 
  1562  019D                     	;# 
  1563  019D                     	;# 
  1564  019D                     	;# 
  1565  019E                     	;# 
  1566  019E                     	;# 
  1567  019E                     	;# 
  1568  019F                     	;# 
  1569  019F                     	;# 
  1570  019F                     	;# 
  1571  019F                     	;# 
  1572  019F                     	;# 
  1573  020C                     	;# 
  1574  020E                     	;# 
  1575  0211                     	;# 
  1576  0211                     	;# 
  1577  0212                     	;# 
  1578  0212                     	;# 
  1579  0213                     	;# 
  1580  0213                     	;# 
  1581  0214                     	;# 
  1582  0214                     	;# 
  1583  0215                     	;# 
  1584  0215                     	;# 
  1585  0215                     	;# 
  1586  0215                     	;# 
  1587  0216                     	;# 
  1588  0216                     	;# 
  1589  0217                     	;# 
  1590  0217                     	;# 
  1591  028C                     	;# 
  1592  028E                     	;# 
  1593  0291                     	;# 
  1594  0291                     	;# 
  1595  0292                     	;# 
  1596  0293                     	;# 
  1597  0293                     	;# 
  1598  0298                     	;# 
  1599  0298                     	;# 
  1600  0299                     	;# 
  1601  029A                     	;# 
  1602  029A                     	;# 
  1603  029E                     	;# 
  1604  030C                     	;# 
  1605  030E                     	;# 
  1606  038C                     	;# 
  1607  038E                     	;# 
  1608  0391                     	;# 
  1609  0392                     	;# 
  1610  0393                     	;# 
  1611  0397                     	;# 
  1612  0398                     	;# 
  1613  0399                     	;# 
  1614  0415                     	;# 
  1615  0416                     	;# 
  1616  0417                     	;# 
  1617  041C                     	;# 
  1618  041D                     	;# 
  1619  041E                     	;# 
  1620  0511                     	;# 
  1621  0515                     	;# 
  1622  0617                     	;# 
  1623  0618                     	;# 
  1624  0619                     	;# 
  1625  0619                     	;# 
  1626  061A                     	;# 
  1627  061B                     	;# 
  1628  061C                     	;# 
  1629  061C                     	;# 
  1630  0691                     	;# 
  1631  0692                     	;# 
  1632  0693                     	;# 
  1633  0694                     	;# 
  1634  0695                     	;# 
  1635  0696                     	;# 
  1636  0697                     	;# 
  1637  0698                     	;# 
  1638  0699                     	;# 
  1639  069A                     	;# 
  1640  069B                     	;# 
  1641  069C                     	;# 
  1642  069D                     	;# 
  1643  069E                     	;# 
  1644  069F                     	;# 
  1645  0E0F                     	;# 
  1646  0E10                     	;# 
  1647  0E11                     	;# 
  1648  0E12                     	;# 
  1649  0E13                     	;# 
  1650  0E14                     	;# 
  1651  0E15                     	;# 
  1652  0E17                     	;# 
  1653  0E20                     	;# 
  1654  0E21                     	;# 
  1655  0E22                     	;# 
  1656  0E24                     	;# 
  1657  0E25                     	;# 
  1658  0E28                     	;# 
  1659  0E29                     	;# 
  1660  0E2A                     	;# 
  1661  0E2B                     	;# 
  1662  0E90                     	;# 
  1663  0E91                     	;# 
  1664  0E92                     	;# 
  1665  0E94                     	;# 
  1666  0E95                     	;# 
  1667  0EA0                     	;# 
  1668  0EA1                     	;# 
  1669  0EA2                     	;# 
  1670  0EA3                     	;# 
  1671  0EA4                     	;# 
  1672  0EA5                     	;# 
  1673  0F0F                     	;# 
  1674  0F10                     	;# 
  1675  0F11                     	;# 
  1676  0F12                     	;# 
  1677  0F13                     	;# 
  1678  0F14                     	;# 
  1679  0F15                     	;# 
  1680  0F16                     	;# 
  1681  0F17                     	;# 
  1682  0F18                     	;# 
  1683  0F19                     	;# 
  1684  0F1A                     	;# 
  1685  0F1B                     	;# 
  1686  0F1C                     	;# 
  1687  0F1D                     	;# 
  1688  0F1E                     	;# 
  1689  0F1F                     	;# 
  1690  0F20                     	;# 
  1691  0F21                     	;# 
  1692  0F22                     	;# 
  1693  0F23                     	;# 
  1694  0F24                     	;# 
  1695  0F25                     	;# 
  1696  0F26                     	;# 
  1697  0F27                     	;# 
  1698  0F28                     	;# 
  1699  0F29                     	;# 
  1700  0F2A                     	;# 
  1701  0F2B                     	;# 
  1702  0F2C                     	;# 
  1703  0F2D                     	;# 
  1704  0F9E                     	;# 
  1705  0FE4                     	;# 
  1706  0FE5                     	;# 
  1707  0FE6                     	;# 
  1708  0FE7                     	;# 
  1709  0FE8                     	;# 
  1710  0FE9                     	;# 
  1711  0FEA                     	;# 
  1712  0FEB                     	;# 
  1713  0FED                     	;# 
  1714  0FEE                     	;# 
  1715  0FEF                     	;# 
  1716  0000                     	;# 
  1717  0001                     	;# 
  1718  0002                     	;# 
  1719  0003                     	;# 
  1720  0004                     	;# 
  1721  0005                     	;# 
  1722  0006                     	;# 
  1723  0007                     	;# 
  1724  0008                     	;# 
  1725  0009                     	;# 
  1726  000A                     	;# 
  1727  000B                     	;# 
  1728  000C                     	;# 
  1729  000E                     	;# 
  1730  0011                     	;# 
  1731  0012                     	;# 
  1732  0013                     	;# 
  1733  0015                     	;# 
  1734  0016                     	;# 
  1735  0016                     	;# 
  1736  0017                     	;# 
  1737  0018                     	;# 
  1738  0019                     	;# 
  1739  001A                     	;# 
  1740  001B                     	;# 
  1741  001C                     	;# 
  1742  008C                     	;# 
  1743  008E                     	;# 
  1744  0091                     	;# 
  1745  0092                     	;# 
  1746  0093                     	;# 
  1747  0095                     	;# 
  1748  0096                     	;# 
  1749  0097                     	;# 
  1750  0098                     	;# 
  1751  0099                     	;# 
  1752  009A                     	;# 
  1753  009B                     	;# 
  1754  009B                     	;# 
  1755  009C                     	;# 
  1756  009D                     	;# 
  1757  009E                     	;# 
  1758  009F                     	;# 
  1759  010C                     	;# 
  1760  010E                     	;# 
  1761  0111                     	;# 
  1762  0112                     	;# 
  1763  0113                     	;# 
  1764  0114                     	;# 
  1765  0115                     	;# 
  1766  0116                     	;# 
  1767  0117                     	;# 
  1768  0118                     	;# 
  1769  0119                     	;# 
  1770  011C                     	;# 
  1771  018C                     	;# 
  1772  018E                     	;# 
  1773  0191                     	;# 
  1774  0191                     	;# 
  1775  0192                     	;# 
  1776  0193                     	;# 
  1777  0193                     	;# 
  1778  0194                     	;# 
  1779  0195                     	;# 
  1780  0196                     	;# 
  1781  0197                     	;# 
  1782  0199                     	;# 
  1783  0199                     	;# 
  1784  0199                     	;# 
  1785  019A                     	;# 
  1786  019A                     	;# 
  1787  019A                     	;# 
  1788  019B                     	;# 
  1789  019B                     	;# 
  1790  019B                     	;# 
  1791  019B                     	;# 
  1792  019B                     	;# 
  1793  019C                     	;# 
  1794  019C                     	;# 
  1795  019C                     	;# 
  1796  019D                     	;# 
  1797  019D                     	;# 
  1798  019D                     	;# 
  1799  019E                     	;# 
  1800  019E                     	;# 
  1801  019E                     	;# 
  1802  019F                     	;# 
  1803  019F                     	;# 
  1804  019F                     	;# 
  1805  019F                     	;# 
  1806  019F                     	;# 
  1807  020C                     	;# 
  1808  020E                     	;# 
  1809  0211                     	;# 
  1810  0211                     	;# 
  1811  0212                     	;# 
  1812  0212                     	;# 
  1813  0213                     	;# 
  1814  0213                     	;# 
  1815  0214                     	;# 
  1816  0214                     	;# 
  1817  0215                     	;# 
  1818  0215                     	;# 
  1819  0215                     	;# 
  1820  0215                     	;# 
  1821  0216                     	;# 
  1822  0216                     	;# 
  1823  0217                     	;# 
  1824  0217                     	;# 
  1825  028C                     	;# 
  1826  028E                     	;# 
  1827  0291                     	;# 
  1828  0291                     	;# 
  1829  0292                     	;# 
  1830  0293                     	;# 
  1831  0293                     	;# 
  1832  0298                     	;# 
  1833  0298                     	;# 
  1834  0299                     	;# 
  1835  029A                     	;# 
  1836  029A                     	;# 
  1837  029E                     	;# 
  1838  030C                     	;# 
  1839  030E                     	;# 
  1840  038C                     	;# 
  1841  038E                     	;# 
  1842  0391                     	;# 
  1843  0392                     	;# 
  1844  0393                     	;# 
  1845  0397                     	;# 
  1846  0398                     	;# 
  1847  0399                     	;# 
  1848  0415                     	;# 
  1849  0416                     	;# 
  1850  0417                     	;# 
  1851  041C                     	;# 
  1852  041D                     	;# 
  1853  041E                     	;# 
  1854  0511                     	;# 
  1855  0515                     	;# 
  1856  0617                     	;# 
  1857  0618                     	;# 
  1858  0619                     	;# 
  1859  0619                     	;# 
  1860  061A                     	;# 
  1861  061B                     	;# 
  1862  061C                     	;# 
  1863  061C                     	;# 
  1864  0691                     	;# 
  1865  0692                     	;# 
  1866  0693                     	;# 
  1867  0694                     	;# 
  1868  0695                     	;# 
  1869  0696                     	;# 
  1870  0697                     	;# 
  1871  0698                     	;# 
  1872  0699                     	;# 
  1873  069A                     	;# 
  1874  069B                     	;# 
  1875  069C                     	;# 
  1876  069D                     	;# 
  1877  069E                     	;# 
  1878  069F                     	;# 
  1879  0E0F                     	;# 
  1880  0E10                     	;# 
  1881  0E11                     	;# 
  1882  0E12                     	;# 
  1883  0E13                     	;# 
  1884  0E14                     	;# 
  1885  0E15                     	;# 
  1886  0E17                     	;# 
  1887  0E20                     	;# 
  1888  0E21                     	;# 
  1889  0E22                     	;# 
  1890  0E24                     	;# 
  1891  0E25                     	;# 
  1892  0E28                     	;# 
  1893  0E29                     	;# 
  1894  0E2A                     	;# 
  1895  0E2B                     	;# 
  1896  0E90                     	;# 
  1897  0E91                     	;# 
  1898  0E92                     	;# 
  1899  0E94                     	;# 
  1900  0E95                     	;# 
  1901  0EA0                     	;# 
  1902  0EA1                     	;# 
  1903  0EA2                     	;# 
  1904  0EA3                     	;# 
  1905  0EA4                     	;# 
  1906  0EA5                     	;# 
  1907  0F0F                     	;# 
  1908  0F10                     	;# 
  1909  0F11                     	;# 
  1910  0F12                     	;# 
  1911  0F13                     	;# 
  1912  0F14                     	;# 
  1913  0F15                     	;# 
  1914  0F16                     	;# 
  1915  0F17                     	;# 
  1916  0F18                     	;# 
  1917  0F19                     	;# 
  1918  0F1A                     	;# 
  1919  0F1B                     	;# 
  1920  0F1C                     	;# 
  1921  0F1D                     	;# 
  1922  0F1E                     	;# 
  1923  0F1F                     	;# 
  1924  0F20                     	;# 
  1925  0F21                     	;# 
  1926  0F22                     	;# 
  1927  0F23                     	;# 
  1928  0F24                     	;# 
  1929  0F25                     	;# 
  1930  0F26                     	;# 
  1931  0F27                     	;# 
  1932  0F28                     	;# 
  1933  0F29                     	;# 
  1934  0F2A                     	;# 
  1935  0F2B                     	;# 
  1936  0F2C                     	;# 
  1937  0F2D                     	;# 
  1938  0F9E                     	;# 
  1939  0FE4                     	;# 
  1940  0FE5                     	;# 
  1941  0FE6                     	;# 
  1942  0FE7                     	;# 
  1943  0FE8                     	;# 
  1944  0FE9                     	;# 
  1945  0FEA                     	;# 
  1946  0FEB                     	;# 
  1947  0FED                     	;# 
  1948  0FEE                     	;# 
  1949  0FEF                     	;# 
  1950                           
  1951                           	psect	stringtext1
  1952  02BC                     __pstringtext1:
  1953  02BC                     _dpowers:
  1954  02BC  3401               	retlw	1
  1955  02BD  3400               	retlw	0
  1956  02BE  340A               	retlw	10
  1957  02BF  3400               	retlw	0
  1958  02C0  3464               	retlw	100
  1959  02C1  3400               	retlw	0
  1960  02C2  34E8               	retlw	232
  1961  02C3  3403               	retlw	3
  1962  02C4  3410               	retlw	16
  1963  02C5  3427               	retlw	39
  1964  02C6                     __end_of_dpowers:
  1965                           
  1966                           	psect	nvBANK0
  1967  0053                     __pnvBANK0:
  1968  0053                     _EUSART_ErrorHandler:
  1969  0053                     	ds	2
  1970  0055                     _EUSART_OverrunErrorHandler:
  1971  0055                     	ds	2
  1972  0057                     _EUSART_FramingErrorHandler:
  1973  0057                     	ds	2
  1974  0059                     _EUSART_RxDefaultInterruptHandler:
  1975  0059                     	ds	2
  1976  005B                     _EUSART_TxDefaultInterruptHandler:
  1977  005B                     	ds	2
  1978  005D                     _eusartTxBufferRemaining:
  1979  005D                     	ds	1
  1980  000B                     _INTCONbits	set	11
  1981  001C                     _T2CONbits	set	28
  1982  001C                     _T2CON	set	28
  1983  0011                     _PIR1bits	set	17
  1984  001A                     _TMR2	set	26
  1985  001B                     _PR2	set	27
  1986  0091                     _PIE1bits	set	145
  1987  009D                     _ADCON0bits	set	157
  1988  009D                     _ADCON0	set	157
  1989  009C                     _ADRESH	set	156
  1990  009B                     _ADRESL	set	155
  1991  009F                     _ADCON2	set	159
  1992  009E                     _ADCON1	set	158
  1993  0097                     _WDTCON	set	151
  1994  0098                     _OSCTUNE	set	152
  1995  009A                     _OSCSTAT	set	154
  1996  0099                     _OSCCON	set	153
  1997  0095                     _OPTION_REGbits	set	149
  1998  008E                     _TRISC	set	142
  1999  008C                     _TRISA	set	140
  2000  0116                     _BORCON	set	278
  2001  010E                     _LATC	set	270
  2002  010C                     _LATA	set	268
  2003  019D                     _RCSTAbits	set	413
  2004  019E                     _TXSTAbits	set	414
  2005  0199                     _RC1REG	set	409
  2006  019D                     _RC1STAbits	set	413
  2007  019A                     _TX1REG	set	410
  2008  019E                     _TX1STAbits	set	414
  2009  019C                     _SP1BRGH	set	412
  2010  019B                     _SP1BRGL	set	411
  2011  019E                     _TX1STA	set	414
  2012  019D                     _RC1STA	set	413
  2013  019F                     _BAUD1CON	set	415
  2014  018C                     _ANSELA	set	396
  2015  018E                     _ANSELC	set	398
  2016  020E                     _WPUC	set	526
  2017  020C                     _WPUA	set	524
  2018  029E                     _CCPTMRSbits	set	670
  2019  0292                     _CCPR1H	set	658
  2020  0291                     _CCPR1L	set	657
  2021  0293                     _CCP1CON	set	659
  2022  028E                     _ODCONC	set	654
  2023  028C                     _ODCONA	set	652
  2024  030E                     _SLRCONC	set	782
  2025  030C                     _SLRCONA	set	780
  2026  038E                     _INLVLC	set	910
  2027  038C                     _INLVLA	set	908
  2028  0E24                     _RXPPS	set	3620
  2029  0EA4                     _RC4PPS	set	3748
  2030                           
  2031                           	psect	stringtext2
  2032  02AE                     __pstringtext2:
  2033  02AE                     STR_1:
  2034  02AE  3448               	retlw	72	;'H'
  2035  02AF  3465               	retlw	101	;'e'
  2036  02B0  346C               	retlw	108	;'l'
  2037  02B1  346C               	retlw	108	;'l'
  2038  02B2  346F               	retlw	111	;'o'
  2039  02B3  3420               	retlw	32	;' '
  2040  02B4  3457               	retlw	87	;'W'
  2041  02B5  346F               	retlw	111	;'o'
  2042  02B6  3472               	retlw	114	;'r'
  2043  02B7  346C               	retlw	108	;'l'
  2044  02B8  3464               	retlw	100	;'d'
  2045  02B9  3421               	retlw	33	;'!'
  2046  02BA  340A               	retlw	10
  2047  02BB  3400               	retlw	0
  2048                           
  2049                           	psect	stringtext3
  2050  0312                     __pstringtext3:
  2051  0312                     STR_2:
  2052  0312  3425               	retlw	37	;'%'
  2053  0313  3464               	retlw	100	;'d'
  2054  0314  340A               	retlw	10
  2055  0315  3400               	retlw	0
  2056                           
  2057                           	psect	stringtext4
  2058  0000                     __pstringtext4:
  2059                           
  2060                           	psect	cinit
  2061  002E                     start_initialization:	
  2062                           ; #config settings
  2063                           
  2064  002E                     __initialization:
  2065                           
  2066                           ; Clear objects allocated to COMMON
  2067  002E  01FB               	clrf	__pbssCOMMON& (0+127)
  2068                           
  2069                           ; Clear objects allocated to BANK0
  2070  002F  3020               	movlw	low __pbssBANK0
  2071  0030  0084               	movwf	4
  2072  0031  3000               	movlw	high __pbssBANK0
  2073  0032  0085               	movwf	5
  2074  0033  301F               	movlw	31
  2075  0034  3182  22E8  3180   	fcall	clear_ram0
  2076  0037                     end_of_initialization:	
  2077                           ;End of C runtime variable initialization code
  2078                           
  2079  0037                     __end_of__initialization:
  2080  0037  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2081  0038  0020               	movlb	0
  2082  0039  3182  2A11         	ljmp	_main	;jump to C main() function
  2083                           
  2084                           	psect	bssCOMMON
  2085  007B                     __pbssCOMMON:
  2086  007B                     _eusartRxHead:
  2087  007B                     	ds	1
  2088                           
  2089                           	psect	bssBANK0
  2090  0020                     __pbssBANK0:
  2091  0020                     _eusartRxStatusBuffer:
  2092  0020                     	ds	8
  2093  0028                     _eusartRxBuffer:
  2094  0028                     	ds	8
  2095  0030                     _eusartTxBuffer:
  2096  0030                     	ds	8
  2097  0038                     _ADC_InterruptHandler:
  2098  0038                     	ds	2
  2099  003A                     _eusartRxLastError:
  2100  003A                     	ds	1
  2101  003B                     _eusartRxCount:
  2102  003B                     	ds	1
  2103  003C                     _eusartRxTail:
  2104  003C                     	ds	1
  2105  003D                     _eusartTxTail:
  2106  003D                     	ds	1
  2107  003E                     _eusartTxHead:
  2108  003E                     	ds	1
  2109                           
  2110                           	psect	clrtext
  2111  02E8                     clear_ram0:	
  2112                           ;	Called with FSR0 containing the base address, and
  2113                           ;	WREG with the size to clear
  2114                           
  2115  02E8  0064               	clrwdt	;clear the watchdog before getting into this loop
  2116  02E9                     clrloop0:
  2117  02E9  0180               	clrf	0	;clear RAM location pointed to by FSR
  2118  02EA  3101               	addfsr 0,1
  2119  02EB  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2120  02EC  2AE9               	goto	clrloop0	;have we reached the end yet?
  2121  02ED  3400               	retlw	0	;all done for this memory range, return
  2122                           
  2123                           	psect	cstackCOMMON
  2124  0070                     __pcstackCOMMON:
  2125  0070                     ?_OSCILLATOR_Initialize:
  2126  0070                     ?_WDT_Initialize:	
  2127                           ; 1 bytes @ 0x0
  2128                           
  2129  0070                     ?_ADC_Initialize:	
  2130                           ; 1 bytes @ 0x0
  2131                           
  2132  0070                     ?_EUSART_Initialize:	
  2133                           ; 1 bytes @ 0x0
  2134                           
  2135  0070                     ?_EUSART_Receive_ISR:	
  2136                           ; 1 bytes @ 0x0
  2137                           
  2138  0070                     ?_EUSART_Transmit_ISR:	
  2139                           ; 1 bytes @ 0x0
  2140                           
  2141  0070                     ??_EUSART_Transmit_ISR:	
  2142                           ; 1 bytes @ 0x0
  2143                           
  2144  0070                     ?_EUSART_DefaultFramingErrorHandler:	
  2145                           ; 1 bytes @ 0x0
  2146                           
  2147  0070                     ??_EUSART_DefaultFramingErrorHandler:	
  2148                           ; 1 bytes @ 0x0
  2149                           
  2150  0070                     ?_EUSART_DefaultOverrunErrorHandler:	
  2151                           ; 1 bytes @ 0x0
  2152                           
  2153  0070                     ??_EUSART_DefaultOverrunErrorHandler:	
  2154                           ; 1 bytes @ 0x0
  2155                           
  2156  0070                     ?_EUSART_DefaultErrorHandler:	
  2157                           ; 1 bytes @ 0x0
  2158                           
  2159  0070                     ?_EUSART_RxDataHandler:	
  2160                           ; 1 bytes @ 0x0
  2161                           
  2162  0070                     ??_EUSART_RxDataHandler:	
  2163                           ; 1 bytes @ 0x0
  2164                           
  2165  0070                     ?_PIN_MANAGER_Initialize:	
  2166                           ; 1 bytes @ 0x0
  2167                           
  2168  0070                     ?_PWM1_Initialize:	
  2169                           ; 1 bytes @ 0x0
  2170                           
  2171  0070                     ?_TMR2_Initialize:	
  2172                           ; 1 bytes @ 0x0
  2173                           
  2174  0070                     ?_SYSTEM_Initialize:	
  2175                           ; 1 bytes @ 0x0
  2176                           
  2177  0070                     ?_EUSART_Write:	
  2178                           ; 1 bytes @ 0x0
  2179                           
  2180  0070                     ?_putch:	
  2181                           ; 1 bytes @ 0x0
  2182                           
  2183  0070                     ?_INTERRUPT_InterruptManager:	
  2184                           ; 1 bytes @ 0x0
  2185                           
  2186  0070                     ?_main:	
  2187                           ; 1 bytes @ 0x0
  2188                           
  2189                           
  2190                           ; 1 bytes @ 0x0
  2191  0070                     	ds	1
  2192  0071                     ??_OSCILLATOR_Initialize:
  2193  0071                     ??_WDT_Initialize:	
  2194                           ; 1 bytes @ 0x1
  2195                           
  2196  0071                     ??_ADC_Initialize:	
  2197                           ; 1 bytes @ 0x1
  2198                           
  2199  0071                     ?_EUSART_SetRxInterruptHandler:	
  2200                           ; 1 bytes @ 0x1
  2201                           
  2202  0071                     ??_EUSART_Receive_ISR:	
  2203                           ; 1 bytes @ 0x1
  2204                           
  2205  0071                     ?_EUSART_SetTxInterruptHandler:	
  2206                           ; 1 bytes @ 0x1
  2207                           
  2208  0071                     ?_EUSART_SetFramingErrorHandler:	
  2209                           ; 1 bytes @ 0x1
  2210                           
  2211  0071                     ?_EUSART_SetOverrunErrorHandler:	
  2212                           ; 1 bytes @ 0x1
  2213                           
  2214  0071                     ?_EUSART_SetErrorHandler:	
  2215                           ; 1 bytes @ 0x1
  2216                           
  2217  0071                     ??_EUSART_DefaultErrorHandler:	
  2218                           ; 1 bytes @ 0x1
  2219                           
  2220  0071                     ??_PIN_MANAGER_Initialize:	
  2221                           ; 1 bytes @ 0x1
  2222                           
  2223  0071                     ??_PWM1_Initialize:	
  2224                           ; 1 bytes @ 0x1
  2225                           
  2226  0071                     ??_TMR2_Initialize:	
  2227                           ; 1 bytes @ 0x1
  2228                           
  2229  0071                     ??_EUSART_Write:	
  2230                           ; 1 bytes @ 0x1
  2231                           
  2232  0071                     ??_INTERRUPT_InterruptManager:	
  2233                           ; 1 bytes @ 0x1
  2234                           
  2235  0071                     ?___lwdiv:	
  2236                           ; 1 bytes @ 0x1
  2237                           
  2238  0071                     EUSART_SetFramingErrorHandler@interruptHandler:	
  2239                           ; 2 bytes @ 0x1
  2240                           
  2241  0071                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  2242                           ; 2 bytes @ 0x1
  2243                           
  2244  0071                     EUSART_SetErrorHandler@interruptHandler:	
  2245                           ; 2 bytes @ 0x1
  2246                           
  2247  0071                     EUSART_SetTxInterruptHandler@interruptHandler:	
  2248                           ; 2 bytes @ 0x1
  2249                           
  2250  0071                     EUSART_SetRxInterruptHandler@interruptHandler:	
  2251                           ; 2 bytes @ 0x1
  2252                           
  2253  0071                     ___lwdiv@divisor:	
  2254                           ; 2 bytes @ 0x1
  2255                           
  2256                           
  2257                           ; 2 bytes @ 0x1
  2258  0071                     	ds	1
  2259  0072                     EUSART_Write@txData:
  2260                           
  2261                           ; 1 bytes @ 0x2
  2262  0072                     	ds	1
  2263  0073                     ??_EUSART_Initialize:
  2264  0073                     ??_EUSART_SetRxInterruptHandler:	
  2265                           ; 1 bytes @ 0x3
  2266                           
  2267  0073                     ??_EUSART_SetTxInterruptHandler:	
  2268                           ; 1 bytes @ 0x3
  2269                           
  2270  0073                     ??_EUSART_SetFramingErrorHandler:	
  2271                           ; 1 bytes @ 0x3
  2272                           
  2273  0073                     ??_EUSART_SetOverrunErrorHandler:	
  2274                           ; 1 bytes @ 0x3
  2275                           
  2276  0073                     ??_EUSART_SetErrorHandler:	
  2277                           ; 1 bytes @ 0x3
  2278                           
  2279  0073                     ??_putch:	
  2280                           ; 1 bytes @ 0x3
  2281                           
  2282  0073                     putch@txData:	
  2283                           ; 1 bytes @ 0x3
  2284                           
  2285  0073                     ___lwdiv@dividend:	
  2286                           ; 1 bytes @ 0x3
  2287                           
  2288                           
  2289                           ; 2 bytes @ 0x3
  2290  0073                     	ds	1
  2291  0074                     ??_SYSTEM_Initialize:
  2292                           
  2293                           ; 1 bytes @ 0x4
  2294  0074                     	ds	1
  2295  0075                     ??___lwdiv:
  2296                           
  2297                           ; 1 bytes @ 0x5
  2298  0075                     	ds	1
  2299  0076                     ___lwdiv@quotient:
  2300                           
  2301                           ; 2 bytes @ 0x6
  2302  0076                     	ds	2
  2303  0078                     ___lwdiv@counter:
  2304                           
  2305                           ; 1 bytes @ 0x8
  2306  0078                     	ds	1
  2307  0079                     ??___lwmod:
  2308                           
  2309                           ; 1 bytes @ 0x9
  2310  0079                     	ds	1
  2311  007A                     ___lwmod@counter:
  2312                           
  2313                           ; 1 bytes @ 0xA
  2314  007A                     	ds	1
  2315  007B                     ??_main:
  2316                           
  2317                           	psect	cstackBANK0
  2318  003F                     __pcstackBANK0:	
  2319                           ; 1 bytes @ 0xB
  2320                           
  2321  003F                     ?___lwmod:
  2322  003F                     ___lwmod@divisor:	
  2323                           ; 2 bytes @ 0x0
  2324                           
  2325                           
  2326                           ; 2 bytes @ 0x0
  2327  003F                     	ds	2
  2328  0041                     ___lwmod@dividend:
  2329                           
  2330                           ; 2 bytes @ 0x2
  2331  0041                     	ds	2
  2332  0043                     ?_printf:
  2333  0043                     printf@f:	
  2334                           ; 2 bytes @ 0x4
  2335                           
  2336                           
  2337                           ; 2 bytes @ 0x4
  2338  0043                     	ds	4
  2339  0047                     ??_printf:
  2340                           
  2341                           ; 1 bytes @ 0x8
  2342  0047                     	ds	4
  2343  004B                     printf@ap:
  2344                           
  2345                           ; 1 bytes @ 0xC
  2346  004B                     	ds	1
  2347  004C                     printf@flag:
  2348                           
  2349                           ; 1 bytes @ 0xD
  2350  004C                     	ds	1
  2351  004D                     printf@prec:
  2352                           
  2353                           ; 1 bytes @ 0xE
  2354  004D                     	ds	1
  2355  004E                     printf@val:
  2356                           
  2357                           ; 2 bytes @ 0xF
  2358  004E                     	ds	2
  2359  0050                     printf@c:
  2360                           
  2361                           ; 1 bytes @ 0x11
  2362  0050                     	ds	1
  2363  0051                     main@num:
  2364                           
  2365                           ; 2 bytes @ 0x12
  2366  0051                     	ds	2
  2367                           
  2368                           	psect	maintext
  2369  0211                     __pmaintext:	
  2370 ;;
  2371 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2372 ;;
  2373 ;; *************** function _main *****************
  2374 ;; Defined at:
  2375 ;;		line 50 in file "main.c"
  2376 ;; Parameters:    Size  Location     Type
  2377 ;;		None
  2378 ;; Auto vars:     Size  Location     Type
  2379 ;;  num             2   18[BANK0 ] int 
  2380 ;; Return value:  Size  Location     Type
  2381 ;;                  1    wreg      void 
  2382 ;; Registers used:
  2383 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2384 ;; Tracked objects:
  2385 ;;		On entry : B1F/0
  2386 ;;		On exit  : 0/0
  2387 ;;		Unchanged: 0/0
  2388 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2389 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2390 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2391 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2392 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2393 ;;Total ram usage:        2 bytes
  2394 ;; Hardware stack levels required when called:    7
  2395 ;; This function calls:
  2396 ;;		_SYSTEM_Initialize
  2397 ;;		_printf
  2398 ;; This function is called by:
  2399 ;;		Startup code after reset
  2400 ;; This function uses a non-reentrant model
  2401 ;;
  2402                           
  2403                           
  2404                           ;psect for function _main
  2405  0211                     _main:
  2406  0211                     l1728:	
  2407                           ;incstack = 0
  2408                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2409                           
  2410                           
  2411                           ;main.c: 52: TXSTAbits.TXEN = 1;
  2412  0211  0023               	movlb	3	; select bank3
  2413  0212  169E               	bsf	30,5	;volatile
  2414                           
  2415                           ;main.c: 53: RCSTAbits.SPEN = 1;
  2416  0213  179D               	bsf	29,7	;volatile
  2417  0214                     l1730:
  2418                           
  2419                           ;main.c: 56: SYSTEM_Initialize();
  2420  0214  3182  2298  3182   	fcall	_SYSTEM_Initialize
  2421  0217                     l1732:
  2422                           
  2423                           ;main.c: 63: (INTCONbits.GIE = 1);
  2424  0217  178B               	bsf	11,7	;volatile
  2425  0218                     l1734:
  2426                           
  2427                           ;main.c: 66: (INTCONbits.PEIE = 1);
  2428  0218  170B               	bsf	11,6	;volatile
  2429  0219                     l1736:
  2430                           
  2431                           ;main.c: 74: printf("Hello World!\n");
  2432  0219  30AE               	movlw	low (STR_1| (0+32768))
  2433  021A  0020               	movlb	0	; select bank0
  2434  021B  00C3               	movwf	printf@f
  2435  021C  3082               	movlw	high (STR_1| (0+32768))
  2436  021D  00C4               	movwf	printf@f+1
  2437  021E  3180  203B  3182   	fcall	_printf
  2438  0221                     l1738:
  2439                           
  2440                           ;main.c: 75: int num = 0;
  2441  0221  0020               	movlb	0	; select bank0
  2442  0222  01D1               	clrf	main@num
  2443  0223  01D2               	clrf	main@num+1
  2444  0224                     l1740:
  2445                           
  2446                           ;main.c: 78: {;main.c: 80: printf("%d\n", num);
  2447  0224  3012               	movlw	low (STR_2| (0+32768))
  2448  0225  00C3               	movwf	printf@f
  2449  0226  3083               	movlw	high (STR_2| (0+32768))
  2450  0227  00C4               	movwf	printf@f+1
  2451  0228  0852               	movf	main@num+1,w
  2452  0229  00C6               	movwf	?_printf+3
  2453  022A  0851               	movf	main@num,w
  2454  022B  00C5               	movwf	?_printf+2
  2455  022C  3180  203B  3182   	fcall	_printf
  2456  022F                     l1742:
  2457                           
  2458                           ;main.c: 81: num++;
  2459  022F  3001               	movlw	1
  2460  0230  0020               	movlb	0	; select bank0
  2461  0231  07D1               	addwf	main@num,f
  2462  0232  3000               	movlw	0
  2463  0233  3DD2               	addwfc	main@num+1,f
  2464  0234  2A24               	goto	l1740
  2465  0235  3180  282C         	ljmp	start
  2466  0237                     __end_of_main:
  2467                           
  2468                           	psect	text1
  2469  003B                     __ptext1:	
  2470 ;; *************** function _printf *****************
  2471 ;; Defined at:
  2472 ;;		line 477 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  2473 ;; Parameters:    Size  Location     Type
  2474 ;;  f               2    4[BANK0 ] PTR const unsigned char 
  2475 ;;		 -> STR_2(4), STR_1(14), 
  2476 ;; Auto vars:     Size  Location     Type
  2477 ;;  tmpval          4    0        struct .
  2478 ;;  val             2   15[BANK0 ] unsigned int 
  2479 ;;  cp              2    0        PTR const unsigned char 
  2480 ;;  len             2    0        unsigned int 
  2481 ;;  c               1   17[BANK0 ] unsigned char 
  2482 ;;  prec            1   14[BANK0 ] char 
  2483 ;;  flag            1   13[BANK0 ] unsigned char 
  2484 ;;  ap              1   12[BANK0 ] PTR void [1]
  2485 ;;		 -> ?_printf(2), 
  2486 ;; Return value:  Size  Location     Type
  2487 ;;                  2    4[BANK0 ] int 
  2488 ;; Registers used:
  2489 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2490 ;; Tracked objects:
  2491 ;;		On entry : 0/0
  2492 ;;		On exit  : 0/0
  2493 ;;		Unchanged: 0/0
  2494 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2495 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2496 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2497 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2498 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2499 ;;Total ram usage:       14 bytes
  2500 ;; Hardware stack levels used:    1
  2501 ;; Hardware stack levels required when called:    6
  2502 ;; This function calls:
  2503 ;;		___lwdiv
  2504 ;;		___lwmod
  2505 ;;		_putch
  2506 ;; This function is called by:
  2507 ;;		_main
  2508 ;; This function uses a non-reentrant model
  2509 ;;
  2510                           
  2511                           
  2512                           ;psect for function _printf
  2513  003B                     _printf:
  2514  003B                     l1680:	
  2515                           ;incstack = 0
  2516                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2517                           
  2518                           
  2519                           ;doprnt.c: 479: va_list ap;;doprnt.c: 512: char c;;doprnt.c: 521: signed char prec;;dopr
      +                          nt.c: 525: unsigned char flag;;doprnt.c: 540: union {;doprnt.c: 541: unsigned long vd;;d
      +                          oprnt.c: 542: double integ;;doprnt.c: 543: } tmpval;;doprnt.c: 545: unsigned int val;;do
      +                          prnt.c: 546: unsigned len;;doprnt.c: 547: const char * cp;;doprnt.c: 550: *ap = __va_sta
      +                          rt();
  2520  003B  3045               	movlw	(low ((?_printf| 0+2)))& (0+255)
  2521  003C  0020               	movlb	0	; select bank0
  2522  003D  00C7               	movwf	??_printf
  2523  003E  0847               	movf	??_printf,w
  2524  003F  00CB               	movwf	printf@ap
  2525                           
  2526                           ;doprnt.c: 553: while((c = *f++)) {
  2527  0040  28E8               	goto	l1726
  2528  0041                     l1682:
  2529                           
  2530                           ;doprnt.c: 555: if(c != '%')
  2531  0041  3025               	movlw	37
  2532  0042  0650               	xorwf	printf@c,w
  2533  0043  1903               	btfsc	3,2
  2534  0044  2846               	goto	u821
  2535  0045  2847               	goto	u820
  2536  0046                     u821:
  2537  0046  284C               	goto	l1686
  2538  0047                     u820:
  2539  0047                     l1684:
  2540                           
  2541                           ;doprnt.c: 557: {;doprnt.c: 558: (putch(c) );
  2542  0047  0850               	movf	printf@c,w
  2543  0048  3182  22EE  3180   	fcall	_putch
  2544                           
  2545                           ;doprnt.c: 559: continue;
  2546  004B  28E8               	goto	l1726
  2547  004C                     l1686:
  2548                           
  2549                           ;doprnt.c: 560: };doprnt.c: 565: flag = 0;
  2550  004C  01CC               	clrf	printf@flag
  2551  004D                     l1690:	
  2552                           ;doprnt.c: 661: switch(c = *f++) {
  2553                           
  2554  004D  0844               	movf	printf@f+1,w
  2555  004E  00C8               	movwf	??_printf+1
  2556  004F  0843               	movf	printf@f,w
  2557  0050  00C7               	movwf	??_printf
  2558  0051  0AC3               	incf	printf@f,f
  2559  0052  1903               	skipnz
  2560  0053  0AC4               	incf	printf@f+1,f
  2561  0054  0847               	movf	??_printf,w
  2562  0055  0084               	movwf	4
  2563  0056  0848               	movf	??_printf+1,w
  2564  0057  0085               	movwf	5
  2565  0058  0800               	movf	0,w	;code access
  2566  0059  00D0               	movwf	printf@c
  2567                           
  2568                           ; Switch size 1, requested type "simple"
  2569                           ; Number of cases is 3, Range of values is 0 to 105
  2570                           ; switch strategies available:
  2571                           ; Name         Instructions Cycles
  2572                           ; simple_byte           10     6 (average)
  2573                           ; direct_byte          218     6 (fixed)
  2574                           ; jumptable            260     6 (fixed)
  2575                           ;	Chosen strategy is simple_byte
  2576  005A  3A00               	xorlw	0	; case 0
  2577  005B  1903               	skipnz
  2578  005C  28FD               	goto	l442
  2579  005D  3A64               	xorlw	100	; case 100
  2580  005E  1903               	skipnz
  2581  005F  2864               	goto	l1692
  2582  0060  3A0D               	xorlw	13	; case 105
  2583  0061  1903               	skipnz
  2584  0062  2864               	goto	l1692
  2585  0063  28E8               	goto	l1726
  2586  0064                     l1692:
  2587                           
  2588                           ;doprnt.c: 1279: {;doprnt.c: 1285: val = (unsigned int)(*(int *)__va_arg((*(int **)ap), 
      +                          (int)0));
  2589  0064  084B               	movf	printf@ap,w
  2590  0065  0086               	movwf	6
  2591  0066  0187               	clrf	7
  2592  0067  3F40               	moviw [0]fsr1
  2593  0068  00CE               	movwf	printf@val
  2594  0069  3F41               	moviw [1]fsr1
  2595  006A  00CF               	movwf	printf@val+1
  2596  006B                     l1694:
  2597  006B  3002               	movlw	2
  2598  006C  00C7               	movwf	??_printf
  2599  006D  0847               	movf	??_printf,w
  2600  006E  07CB               	addwf	printf@ap,f
  2601  006F                     l1696:
  2602                           
  2603                           ;doprnt.c: 1287: if((int)val < 0) {
  2604  006F  1FCF               	btfss	printf@val+1,7
  2605  0070  2872               	goto	u831
  2606  0071  2873               	goto	u830
  2607  0072                     u831:
  2608  0072  287C               	goto	l1702
  2609  0073                     u830:
  2610  0073                     l1698:
  2611                           
  2612                           ;doprnt.c: 1288: flag |= 0x03;
  2613  0073  3003               	movlw	3
  2614  0074  00C7               	movwf	??_printf
  2615  0075  0847               	movf	??_printf,w
  2616  0076  04CC               	iorwf	printf@flag,f
  2617  0077                     l1700:
  2618                           
  2619                           ;doprnt.c: 1289: val = -val;
  2620  0077  09CE               	comf	printf@val,f
  2621  0078  09CF               	comf	printf@val+1,f
  2622  0079  0ACE               	incf	printf@val,f
  2623  007A  1903               	skipnz
  2624  007B  0ACF               	incf	printf@val+1,f
  2625  007C                     l1702:
  2626                           
  2627                           ;doprnt.c: 1290: };doprnt.c: 1292: };doprnt.c: 1331: for(c = 1 ; c != sizeof dpowers/siz
      +                          eof dpowers[0] ; c++)
  2628  007C  01D0               	clrf	printf@c
  2629  007D  0AD0               	incf	printf@c,f
  2630  007E                     l1708:
  2631                           
  2632                           ;doprnt.c: 1332: if(val < dpowers[c])
  2633  007E  0850               	movf	printf@c,w
  2634  007F  00C7               	movwf	??_printf
  2635  0080  01C8               	clrf	??_printf+1
  2636  0081  35C7               	lslf	??_printf,f
  2637  0082  0DC8               	rlf	??_printf+1,f
  2638  0083  30BC               	movlw	low (_dpowers| (0+32768))
  2639  0084  0747               	addwf	??_printf,w
  2640  0085  0084               	movwf	4
  2641  0086  3082               	movlw	high (_dpowers| (0+32768))
  2642  0087  3D48               	addwfc	??_printf+1,w
  2643  0088  0085               	movwf	5
  2644  0089  3F00               	moviw [0]fsr0
  2645  008A  00C9               	movwf	??_printf+2
  2646  008B  3F01               	moviw [1]fsr0
  2647  008C  00CA               	movwf	??_printf+3
  2648  008D  084A               	movf	??_printf+3,w
  2649  008E  024F               	subwf	printf@val+1,w
  2650  008F  1D03               	skipz
  2651  0090  2893               	goto	u845
  2652  0091  0849               	movf	??_printf+2,w
  2653  0092  024E               	subwf	printf@val,w
  2654  0093                     u845:
  2655  0093  1803               	skipnc
  2656  0094  2896               	goto	u841
  2657  0095  2897               	goto	u840
  2658  0096                     u841:
  2659  0096  2898               	goto	l1712
  2660  0097                     u840:
  2661  0097  28A2               	goto	l1714
  2662  0098                     l1712:
  2663  0098  3001               	movlw	1
  2664  0099  00C7               	movwf	??_printf
  2665  009A  0847               	movf	??_printf,w
  2666  009B  07D0               	addwf	printf@c,f
  2667  009C  3005               	movlw	5
  2668  009D  0650               	xorwf	printf@c,w
  2669  009E  1D03               	btfss	3,2
  2670  009F  28A1               	goto	u851
  2671  00A0  28A2               	goto	u850
  2672  00A1                     u851:
  2673  00A1  287E               	goto	l1708
  2674  00A2                     u850:
  2675  00A2                     l1714:
  2676                           
  2677                           ;doprnt.c: 1448: {;doprnt.c: 1464: if(flag & 0x03)
  2678  00A2  084C               	movf	printf@flag,w
  2679  00A3  3903               	andlw	3
  2680  00A4  1903               	btfsc	3,2
  2681  00A5  28A7               	goto	u861
  2682  00A6  28A8               	goto	u860
  2683  00A7                     u861:
  2684  00A7  28AC               	goto	l1718
  2685  00A8                     u860:
  2686  00A8                     l1716:
  2687                           
  2688                           ;doprnt.c: 1465: (putch('-') );
  2689  00A8  302D               	movlw	45
  2690  00A9  3182  22EE  3180   	fcall	_putch
  2691  00AC                     l1718:
  2692                           
  2693                           ;doprnt.c: 1495: };doprnt.c: 1498: prec = c;
  2694  00AC  0020               	movlb	0	; select bank0
  2695  00AD  0850               	movf	printf@c,w
  2696  00AE  00C7               	movwf	??_printf
  2697  00AF  0847               	movf	??_printf,w
  2698  00B0  00CD               	movwf	printf@prec
  2699                           
  2700                           ;doprnt.c: 1500: while(prec--) {
  2701  00B1  28DE               	goto	l1724
  2702  00B2                     l1720:
  2703                           
  2704                           ;doprnt.c: 1504: {;doprnt.c: 1515: c = (val / dpowers[(unsigned char)prec]) % 10 + '0';
  2705  00B2  300A               	movlw	10
  2706  00B3  00BF               	movwf	___lwmod@divisor
  2707  00B4  3000               	movlw	0
  2708  00B5  00C0               	movwf	___lwmod@divisor+1
  2709  00B6  084D               	movf	printf@prec,w
  2710  00B7  00C7               	movwf	??_printf
  2711  00B8  01C8               	clrf	??_printf+1
  2712  00B9  35C7               	lslf	??_printf,f
  2713  00BA  0DC8               	rlf	??_printf+1,f
  2714  00BB  30BC               	movlw	low (_dpowers| (0+32768))
  2715  00BC  0747               	addwf	??_printf,w
  2716  00BD  0084               	movwf	4
  2717  00BE  3082               	movlw	high (_dpowers| (0+32768))
  2718  00BF  3D48               	addwfc	??_printf+1,w
  2719  00C0  0085               	movwf	5
  2720  00C1  3F00               	moviw [0]fsr0
  2721  00C2  00F1               	movwf	___lwdiv@divisor
  2722  00C3  3F01               	moviw [1]fsr0
  2723  00C4  00F2               	movwf	___lwdiv@divisor+1
  2724  00C5  084F               	movf	printf@val+1,w
  2725  00C6  00F4               	movwf	___lwdiv@dividend+1
  2726  00C7  084E               	movf	printf@val,w
  2727  00C8  00F3               	movwf	___lwdiv@dividend
  2728  00C9  3181  213D  3180   	fcall	___lwdiv
  2729  00CC  0872               	movf	?___lwdiv+1,w
  2730  00CD  0020               	movlb	0	; select bank0
  2731  00CE  00C2               	movwf	___lwmod@dividend+1
  2732  00CF  0871               	movf	?___lwdiv,w
  2733  00D0  00C1               	movwf	___lwmod@dividend
  2734  00D1  3181  21B2  3180   	fcall	___lwmod
  2735  00D4  0020               	movlb	0	; select bank0
  2736  00D5  083F               	movf	?___lwmod,w
  2737  00D6  3E30               	addlw	48
  2738  00D7  00C9               	movwf	??_printf+2
  2739  00D8  0849               	movf	??_printf+2,w
  2740  00D9  00D0               	movwf	printf@c
  2741  00DA                     l1722:
  2742                           
  2743                           ;doprnt.c: 1549: };doprnt.c: 1550: (putch(c) );
  2744  00DA  0850               	movf	printf@c,w
  2745  00DB  3182  22EE  3180   	fcall	_putch
  2746  00DE                     l1724:
  2747  00DE  30FF               	movlw	255
  2748  00DF  0020               	movlb	0	; select bank0
  2749  00E0  00C7               	movwf	??_printf
  2750  00E1  0847               	movf	??_printf,w
  2751  00E2  07CD               	addwf	printf@prec,f
  2752  00E3  0A4D               	incf	printf@prec,w
  2753  00E4  1D03               	btfss	3,2
  2754  00E5  28E7               	goto	u871
  2755  00E6  28E8               	goto	u870
  2756  00E7                     u871:
  2757  00E7  28B2               	goto	l1720
  2758  00E8                     u870:
  2759  00E8                     l1726:
  2760  00E8  0020               	movlb	0	; select bank0
  2761  00E9  0844               	movf	printf@f+1,w
  2762  00EA  00C8               	movwf	??_printf+1
  2763  00EB  0843               	movf	printf@f,w
  2764  00EC  00C7               	movwf	??_printf
  2765  00ED  0AC3               	incf	printf@f,f
  2766  00EE  1903               	skipnz
  2767  00EF  0AC4               	incf	printf@f+1,f
  2768  00F0  0847               	movf	??_printf,w
  2769  00F1  0084               	movwf	4
  2770  00F2  0848               	movf	??_printf+1,w
  2771  00F3  0085               	movwf	5
  2772  00F4  0800               	movf	0,w	;code access
  2773  00F5  00C9               	movwf	??_printf+2
  2774  00F6  0849               	movf	??_printf+2,w
  2775  00F7  00D0               	movwf	printf@c
  2776  00F8  0850               	movf	printf@c,w
  2777  00F9  1D03               	btfss	3,2
  2778  00FA  28FC               	goto	u881
  2779  00FB  28FD               	goto	u880
  2780  00FC                     u881:
  2781  00FC  2841               	goto	l1682
  2782  00FD                     u880:
  2783  00FD                     l442:
  2784  00FD  0008               	return
  2785  00FE                     __end_of_printf:
  2786                           
  2787                           	psect	text2
  2788  02EE                     __ptext2:	
  2789 ;; *************** function _putch *****************
  2790 ;; Defined at:
  2791 ;;		line 201 in file "mcc_generated_files/eusart.c"
  2792 ;; Parameters:    Size  Location     Type
  2793 ;;  txData          1    wreg     unsigned char 
  2794 ;; Auto vars:     Size  Location     Type
  2795 ;;  txData          1    3[COMMON] unsigned char 
  2796 ;; Return value:  Size  Location     Type
  2797 ;;                  1    wreg      void 
  2798 ;; Registers used:
  2799 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2800 ;; Tracked objects:
  2801 ;;		On entry : 0/0
  2802 ;;		On exit  : 0/0
  2803 ;;		Unchanged: 0/0
  2804 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2805 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2806 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2807 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2808 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2809 ;;Total ram usage:        1 bytes
  2810 ;; Hardware stack levels used:    1
  2811 ;; Hardware stack levels required when called:    5
  2812 ;; This function calls:
  2813 ;;		_EUSART_Write
  2814 ;; This function is called by:
  2815 ;;		_printf
  2816 ;; This function uses a non-reentrant model
  2817 ;;
  2818                           
  2819                           
  2820                           ;psect for function _putch
  2821  02EE                     _putch:
  2822                           
  2823                           ;incstack = 0
  2824                           ; Regs used in _putch: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2825                           ;putch@txData stored from wreg
  2826  02EE  00F3               	movwf	putch@txData
  2827  02EF                     l1468:
  2828                           
  2829                           ;eusart.c: 203: EUSART_Write(txData);
  2830  02EF  0873               	movf	putch@txData,w
  2831  02F0  3181  21E7  3182   	fcall	_EUSART_Write
  2832  02F3                     l268:
  2833  02F3  0008               	return
  2834  02F4                     __end_of_putch:
  2835                           
  2836                           	psect	text3
  2837  01E7                     __ptext3:	
  2838 ;; *************** function _EUSART_Write *****************
  2839 ;; Defined at:
  2840 ;;		line 173 in file "mcc_generated_files/eusart.c"
  2841 ;; Parameters:    Size  Location     Type
  2842 ;;  txData          1    wreg     unsigned char 
  2843 ;; Auto vars:     Size  Location     Type
  2844 ;;  txData          1    2[COMMON] unsigned char 
  2845 ;; Return value:  Size  Location     Type
  2846 ;;                  1    wreg      void 
  2847 ;; Registers used:
  2848 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  2849 ;; Tracked objects:
  2850 ;;		On entry : 0/0
  2851 ;;		On exit  : 0/0
  2852 ;;		Unchanged: 0/0
  2853 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2854 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2855 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2856 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2857 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2858 ;;Total ram usage:        2 bytes
  2859 ;; Hardware stack levels used:    1
  2860 ;; Hardware stack levels required when called:    4
  2861 ;; This function calls:
  2862 ;;		Nothing
  2863 ;; This function is called by:
  2864 ;;		_putch
  2865 ;; This function uses a non-reentrant model
  2866 ;;
  2867                           
  2868                           
  2869                           ;psect for function _EUSART_Write
  2870  01E7                     _EUSART_Write:
  2871                           
  2872                           ;incstack = 0
  2873                           ; Regs used in _EUSART_Write: [wreg+fsr1l+fsr1h+status,2+status,0]
  2874                           ;EUSART_Write@txData stored from wreg
  2875  01E7  00F2               	movwf	EUSART_Write@txData
  2876  01E8                     l1344:
  2877  01E8                     l1346:	
  2878                           ;eusart.c: 175: while(0 == eusartTxBufferRemaining)
  2879                           
  2880  01E8  0020               	movlb	0	; select bank0
  2881  01E9  085D               	movf	_eusartTxBufferRemaining,w	;volatile
  2882  01EA  1903               	btfsc	3,2
  2883  01EB  29ED               	goto	u401
  2884  01EC  29EE               	goto	u400
  2885  01ED                     u401:
  2886  01ED  29E8               	goto	l1346
  2887  01EE                     u400:
  2888  01EE                     l258:
  2889                           
  2890                           ;eusart.c: 177: };eusart.c: 179: if(0 == PIE1bits.TXIE)
  2891  01EE  0021               	movlb	1	; select bank1
  2892  01EF  1A11               	btfsc	17,4	;volatile
  2893  01F0  29F2               	goto	u411
  2894  01F1  29F3               	goto	u410
  2895  01F2                     u411:
  2896  01F2  29F7               	goto	l259
  2897  01F3                     u410:
  2898  01F3                     l1348:
  2899                           
  2900                           ;eusart.c: 180: {;eusart.c: 181: TX1REG = txData;
  2901  01F3  0872               	movf	EUSART_Write@txData,w
  2902  01F4  0023               	movlb	3	; select bank3
  2903  01F5  009A               	movwf	26	;volatile
  2904                           
  2905                           ;eusart.c: 182: }
  2906  01F6  2A0E               	goto	l1360
  2907  01F7                     l259:
  2908                           
  2909                           ;eusart.c: 183: else;eusart.c: 184: {;eusart.c: 185: PIE1bits.TXIE = 0;
  2910  01F7  1211               	bcf	17,4	;volatile
  2911  01F8                     l1350:
  2912                           
  2913                           ;eusart.c: 186: eusartTxBuffer[eusartTxHead++] = txData;
  2914  01F8  0872               	movf	EUSART_Write@txData,w
  2915  01F9  00F1               	movwf	??_EUSART_Write
  2916  01FA  0020               	movlb	0	; select bank0
  2917  01FB  083E               	movf	_eusartTxHead,w
  2918  01FC  3E30               	addlw	(low (_eusartTxBuffer| 0))& (0+255)
  2919  01FD  0086               	movwf	6
  2920  01FE  0187               	clrf	7
  2921  01FF  0871               	movf	??_EUSART_Write,w
  2922  0200  0081               	movwf	1
  2923  0201                     l1352:
  2924  0201  3001               	movlw	1
  2925  0202  00F1               	movwf	??_EUSART_Write
  2926  0203  0871               	movf	??_EUSART_Write,w
  2927  0204  07BE               	addwf	_eusartTxHead,f	;volatile
  2928  0205                     l1354:
  2929                           
  2930                           ;eusart.c: 187: if(sizeof(eusartTxBuffer) <= eusartTxHead)
  2931  0205  3008               	movlw	8
  2932  0206  023E               	subwf	_eusartTxHead,w	;volatile
  2933  0207  1C03               	skipc
  2934  0208  2A0A               	goto	u421
  2935  0209  2A0B               	goto	u420
  2936  020A                     u421:
  2937  020A  2A0C               	goto	l1358
  2938  020B                     u420:
  2939  020B                     l1356:
  2940                           
  2941                           ;eusart.c: 188: {;eusart.c: 189: eusartTxHead = 0;
  2942  020B  01BE               	clrf	_eusartTxHead	;volatile
  2943  020C                     l1358:
  2944                           
  2945                           ;eusart.c: 190: };eusart.c: 191: eusartTxBufferRemaining--;
  2946  020C  3001               	movlw	1
  2947  020D  02DD               	subwf	_eusartTxBufferRemaining,f	;volatile
  2948  020E                     l1360:
  2949                           
  2950                           ;eusart.c: 192: };eusart.c: 193: PIE1bits.TXIE = 1;
  2951  020E  0021               	movlb	1	; select bank1
  2952  020F  1611               	bsf	17,4	;volatile
  2953  0210                     l262:
  2954  0210  0008               	return
  2955  0211                     __end_of_EUSART_Write:
  2956                           
  2957                           	psect	text4
  2958  01B2                     __ptext4:	
  2959 ;; *************** function ___lwmod *****************
  2960 ;; Defined at:
  2961 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  2962 ;; Parameters:    Size  Location     Type
  2963 ;;  divisor         2    0[BANK0 ] unsigned int 
  2964 ;;  dividend        2    2[BANK0 ] unsigned int 
  2965 ;; Auto vars:     Size  Location     Type
  2966 ;;  counter         1   10[COMMON] unsigned char 
  2967 ;; Return value:  Size  Location     Type
  2968 ;;                  2    0[BANK0 ] unsigned int 
  2969 ;; Registers used:
  2970 ;;		wreg, status,2, status,0
  2971 ;; Tracked objects:
  2972 ;;		On entry : 0/0
  2973 ;;		On exit  : 0/0
  2974 ;;		Unchanged: 0/0
  2975 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2976 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2977 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2978 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2979 ;;      Totals:         2       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2980 ;;Total ram usage:        6 bytes
  2981 ;; Hardware stack levels used:    1
  2982 ;; Hardware stack levels required when called:    4
  2983 ;; This function calls:
  2984 ;;		Nothing
  2985 ;; This function is called by:
  2986 ;;		_printf
  2987 ;; This function uses a non-reentrant model
  2988 ;;
  2989                           
  2990                           
  2991                           ;psect for function ___lwmod
  2992  01B2                     ___lwmod:
  2993  01B2                     l1658:	
  2994                           ;incstack = 0
  2995                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2996                           
  2997  01B2  0020               	movlb	0	; select bank0
  2998  01B3  083F               	movf	___lwmod@divisor,w
  2999  01B4  0440               	iorwf	___lwmod@divisor+1,w
  3000  01B5  1903               	btfsc	3,2
  3001  01B6  29B8               	goto	u761
  3002  01B7  29B9               	goto	u760
  3003  01B8                     u761:
  3004  01B8  29E2               	goto	l1676
  3005  01B9                     u760:
  3006  01B9                     l1660:
  3007  01B9  01FA               	clrf	___lwmod@counter
  3008  01BA  0AFA               	incf	___lwmod@counter,f
  3009  01BB  29C5               	goto	l1666
  3010  01BC                     l1662:
  3011  01BC  3001               	movlw	1
  3012  01BD                     u775:
  3013  01BD  35BF               	lslf	___lwmod@divisor,f
  3014  01BE  0DC0               	rlf	___lwmod@divisor+1,f
  3015  01BF  0B89               	decfsz	9,f
  3016  01C0  29BD               	goto	u775
  3017  01C1                     l1664:
  3018  01C1  3001               	movlw	1
  3019  01C2  00F9               	movwf	??___lwmod
  3020  01C3  0879               	movf	??___lwmod,w
  3021  01C4  07FA               	addwf	___lwmod@counter,f
  3022  01C5                     l1666:
  3023  01C5  1FC0               	btfss	___lwmod@divisor+1,7
  3024  01C6  29C8               	goto	u781
  3025  01C7  29C9               	goto	u780
  3026  01C8                     u781:
  3027  01C8  29BC               	goto	l1662
  3028  01C9                     u780:
  3029  01C9                     l1668:
  3030  01C9  0840               	movf	___lwmod@divisor+1,w
  3031  01CA  0242               	subwf	___lwmod@dividend+1,w
  3032  01CB  1D03               	skipz
  3033  01CC  29CF               	goto	u795
  3034  01CD  083F               	movf	___lwmod@divisor,w
  3035  01CE  0241               	subwf	___lwmod@dividend,w
  3036  01CF                     u795:
  3037  01CF  1C03               	skipc
  3038  01D0  29D2               	goto	u791
  3039  01D1  29D3               	goto	u790
  3040  01D2                     u791:
  3041  01D2  29D7               	goto	l1672
  3042  01D3                     u790:
  3043  01D3                     l1670:
  3044  01D3  083F               	movf	___lwmod@divisor,w
  3045  01D4  02C1               	subwf	___lwmod@dividend,f
  3046  01D5  0840               	movf	___lwmod@divisor+1,w
  3047  01D6  3BC2               	subwfb	___lwmod@dividend+1,f
  3048  01D7                     l1672:
  3049  01D7  3001               	movlw	1
  3050  01D8                     u805:
  3051  01D8  36C0               	lsrf	___lwmod@divisor+1,f
  3052  01D9  0CBF               	rrf	___lwmod@divisor,f
  3053  01DA  0B89               	decfsz	9,f
  3054  01DB  29D8               	goto	u805
  3055  01DC                     l1674:
  3056  01DC  3001               	movlw	1
  3057  01DD  02FA               	subwf	___lwmod@counter,f
  3058  01DE  1D03               	btfss	3,2
  3059  01DF  29E1               	goto	u811
  3060  01E0  29E2               	goto	u810
  3061  01E1                     u811:
  3062  01E1  29C9               	goto	l1668
  3063  01E2                     u810:
  3064  01E2                     l1676:
  3065  01E2  0842               	movf	___lwmod@dividend+1,w
  3066  01E3  00C0               	movwf	?___lwmod+1
  3067  01E4  0841               	movf	___lwmod@dividend,w
  3068  01E5  00BF               	movwf	?___lwmod
  3069  01E6                     l728:
  3070  01E6  0008               	return
  3071  01E7                     __end_of___lwmod:
  3072                           
  3073                           	psect	text5
  3074  013D                     __ptext5:	
  3075 ;; *************** function ___lwdiv *****************
  3076 ;; Defined at:
  3077 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  3078 ;; Parameters:    Size  Location     Type
  3079 ;;  divisor         2    1[COMMON] unsigned int 
  3080 ;;  dividend        2    3[COMMON] unsigned int 
  3081 ;; Auto vars:     Size  Location     Type
  3082 ;;  quotient        2    6[COMMON] unsigned int 
  3083 ;;  counter         1    8[COMMON] unsigned char 
  3084 ;; Return value:  Size  Location     Type
  3085 ;;                  2    1[COMMON] unsigned int 
  3086 ;; Registers used:
  3087 ;;		wreg, status,2, status,0
  3088 ;; Tracked objects:
  3089 ;;		On entry : 0/0
  3090 ;;		On exit  : 0/0
  3091 ;;		Unchanged: 0/0
  3092 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3093 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3094 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3095 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3096 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3097 ;;Total ram usage:        8 bytes
  3098 ;; Hardware stack levels used:    1
  3099 ;; Hardware stack levels required when called:    4
  3100 ;; This function calls:
  3101 ;;		Nothing
  3102 ;; This function is called by:
  3103 ;;		_printf
  3104 ;; This function uses a non-reentrant model
  3105 ;;
  3106                           
  3107                           
  3108                           ;psect for function ___lwdiv
  3109  013D                     ___lwdiv:
  3110  013D                     l1474:	
  3111                           ;incstack = 0
  3112                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3113                           
  3114  013D  01F6               	clrf	___lwdiv@quotient
  3115  013E  01F7               	clrf	___lwdiv@quotient+1
  3116  013F                     l1476:
  3117  013F  0871               	movf	___lwdiv@divisor,w
  3118  0140  0472               	iorwf	___lwdiv@divisor+1,w
  3119  0141  1903               	btfsc	3,2
  3120  0142  2944               	goto	u441
  3121  0143  2945               	goto	u440
  3122  0144                     u441:
  3123  0144  2974               	goto	l1496
  3124  0145                     u440:
  3125  0145                     l1478:
  3126  0145  01F8               	clrf	___lwdiv@counter
  3127  0146  0AF8               	incf	___lwdiv@counter,f
  3128  0147  2951               	goto	l1484
  3129  0148                     l1480:
  3130  0148  3001               	movlw	1
  3131  0149                     u455:
  3132  0149  35F1               	lslf	___lwdiv@divisor,f
  3133  014A  0DF2               	rlf	___lwdiv@divisor+1,f
  3134  014B  0B89               	decfsz	9,f
  3135  014C  2949               	goto	u455
  3136  014D                     l1482:
  3137  014D  3001               	movlw	1
  3138  014E  00F5               	movwf	??___lwdiv
  3139  014F  0875               	movf	??___lwdiv,w
  3140  0150  07F8               	addwf	___lwdiv@counter,f
  3141  0151                     l1484:
  3142  0151  1FF2               	btfss	___lwdiv@divisor+1,7
  3143  0152  2954               	goto	u461
  3144  0153  2955               	goto	u460
  3145  0154                     u461:
  3146  0154  2948               	goto	l1480
  3147  0155                     u460:
  3148  0155                     l1486:
  3149  0155  3001               	movlw	1
  3150  0156                     u475:
  3151  0156  35F6               	lslf	___lwdiv@quotient,f
  3152  0157  0DF7               	rlf	___lwdiv@quotient+1,f
  3153  0158  0B89               	decfsz	9,f
  3154  0159  2956               	goto	u475
  3155  015A  0872               	movf	___lwdiv@divisor+1,w
  3156  015B  0274               	subwf	___lwdiv@dividend+1,w
  3157  015C  1D03               	skipz
  3158  015D  2960               	goto	u485
  3159  015E  0871               	movf	___lwdiv@divisor,w
  3160  015F  0273               	subwf	___lwdiv@dividend,w
  3161  0160                     u485:
  3162  0160  1C03               	skipc
  3163  0161  2963               	goto	u481
  3164  0162  2964               	goto	u480
  3165  0163                     u481:
  3166  0163  2969               	goto	l1492
  3167  0164                     u480:
  3168  0164                     l1488:
  3169  0164  0871               	movf	___lwdiv@divisor,w
  3170  0165  02F3               	subwf	___lwdiv@dividend,f
  3171  0166  0872               	movf	___lwdiv@divisor+1,w
  3172  0167  3BF4               	subwfb	___lwdiv@dividend+1,f
  3173  0168                     l1490:
  3174  0168  1476               	bsf	___lwdiv@quotient,0
  3175  0169                     l1492:
  3176  0169  3001               	movlw	1
  3177  016A                     u495:
  3178  016A  36F2               	lsrf	___lwdiv@divisor+1,f
  3179  016B  0CF1               	rrf	___lwdiv@divisor,f
  3180  016C  0B89               	decfsz	9,f
  3181  016D  296A               	goto	u495
  3182  016E                     l1494:
  3183  016E  3001               	movlw	1
  3184  016F  02F8               	subwf	___lwdiv@counter,f
  3185  0170  1D03               	btfss	3,2
  3186  0171  2973               	goto	u501
  3187  0172  2974               	goto	u500
  3188  0173                     u501:
  3189  0173  2955               	goto	l1486
  3190  0174                     u500:
  3191  0174                     l1496:
  3192  0174  0877               	movf	___lwdiv@quotient+1,w
  3193  0175  00F2               	movwf	?___lwdiv+1
  3194  0176  0876               	movf	___lwdiv@quotient,w
  3195  0177  00F1               	movwf	?___lwdiv
  3196  0178                     l718:
  3197  0178  0008               	return
  3198  0179                     __end_of___lwdiv:
  3199                           
  3200                           	psect	text6
  3201  0298                     __ptext6:	
  3202 ;; *************** function _SYSTEM_Initialize *****************
  3203 ;; Defined at:
  3204 ;;		line 50 in file "mcc_generated_files/mcc.c"
  3205 ;; Parameters:    Size  Location     Type
  3206 ;;		None
  3207 ;; Auto vars:     Size  Location     Type
  3208 ;;		None
  3209 ;; Return value:  Size  Location     Type
  3210 ;;                  1    wreg      void 
  3211 ;; Registers used:
  3212 ;;		wreg, status,2, status,0, pclath, cstack
  3213 ;; Tracked objects:
  3214 ;;		On entry : 0/0
  3215 ;;		On exit  : 0/0
  3216 ;;		Unchanged: 0/0
  3217 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3218 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3219 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3220 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3221 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3222 ;;Total ram usage:        0 bytes
  3223 ;; Hardware stack levels used:    1
  3224 ;; Hardware stack levels required when called:    6
  3225 ;; This function calls:
  3226 ;;		_ADC_Initialize
  3227 ;;		_EUSART_Initialize
  3228 ;;		_OSCILLATOR_Initialize
  3229 ;;		_PIN_MANAGER_Initialize
  3230 ;;		_PWM1_Initialize
  3231 ;;		_TMR2_Initialize
  3232 ;;		_WDT_Initialize
  3233 ;; This function is called by:
  3234 ;;		_main
  3235 ;; This function uses a non-reentrant model
  3236 ;;
  3237                           
  3238                           
  3239                           ;psect for function _SYSTEM_Initialize
  3240  0298                     _SYSTEM_Initialize:
  3241  0298                     l1522:	
  3242                           ;incstack = 0
  3243                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3244                           
  3245                           
  3246                           ;mcc.c: 53: PIN_MANAGER_Initialize();
  3247  0298  3182  2237  3182   	fcall	_PIN_MANAGER_Initialize
  3248                           
  3249                           ;mcc.c: 54: OSCILLATOR_Initialize();
  3250  029B  3182  22E0  3182   	fcall	_OSCILLATOR_Initialize
  3251                           
  3252                           ;mcc.c: 55: WDT_Initialize();
  3253  029E  3183  2316  3182   	fcall	_WDT_Initialize
  3254                           
  3255                           ;mcc.c: 56: PWM1_Initialize();
  3256  02A1  3182  22C6  3182   	fcall	_PWM1_Initialize
  3257                           
  3258                           ;mcc.c: 57: ADC_Initialize();
  3259  02A4  3182  22CF  3182   	fcall	_ADC_Initialize
  3260                           
  3261                           ;mcc.c: 58: TMR2_Initialize();
  3262  02A7  3182  22D8  3182   	fcall	_TMR2_Initialize
  3263                           
  3264                           ;mcc.c: 59: EUSART_Initialize();
  3265  02AA  3180  20FE  3182   	fcall	_EUSART_Initialize
  3266  02AD                     l113:
  3267  02AD  0008               	return
  3268  02AE                     __end_of_SYSTEM_Initialize:
  3269                           
  3270                           	psect	text7
  3271  0316                     __ptext7:	
  3272 ;; *************** function _WDT_Initialize *****************
  3273 ;; Defined at:
  3274 ;;		line 74 in file "mcc_generated_files/mcc.c"
  3275 ;; Parameters:    Size  Location     Type
  3276 ;;		None
  3277 ;; Auto vars:     Size  Location     Type
  3278 ;;		None
  3279 ;; Return value:  Size  Location     Type
  3280 ;;                  1    wreg      void 
  3281 ;; Registers used:
  3282 ;;		wreg
  3283 ;; Tracked objects:
  3284 ;;		On entry : 0/0
  3285 ;;		On exit  : 0/0
  3286 ;;		Unchanged: 0/0
  3287 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3288 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3289 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3290 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3291 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3292 ;;Total ram usage:        0 bytes
  3293 ;; Hardware stack levels used:    1
  3294 ;; Hardware stack levels required when called:    4
  3295 ;; This function calls:
  3296 ;;		Nothing
  3297 ;; This function is called by:
  3298 ;;		_SYSTEM_Initialize
  3299 ;; This function uses a non-reentrant model
  3300 ;;
  3301                           
  3302                           
  3303                           ;psect for function _WDT_Initialize
  3304  0316                     _WDT_Initialize:
  3305  0316                     l1424:	
  3306                           ;incstack = 0
  3307                           ; Regs used in _WDT_Initialize: [wreg]
  3308                           
  3309                           
  3310                           ;mcc.c: 77: WDTCON = 0x16;
  3311  0316  3016               	movlw	22
  3312  0317  0021               	movlb	1	; select bank1
  3313  0318  0097               	movwf	23	;volatile
  3314  0319                     l119:
  3315  0319  0008               	return
  3316  031A                     __end_of_WDT_Initialize:
  3317                           
  3318                           	psect	text8
  3319  02D8                     __ptext8:	
  3320 ;; *************** function _TMR2_Initialize *****************
  3321 ;; Defined at:
  3322 ;;		line 62 in file "mcc_generated_files/tmr2.c"
  3323 ;; Parameters:    Size  Location     Type
  3324 ;;		None
  3325 ;; Auto vars:     Size  Location     Type
  3326 ;;		None
  3327 ;; Return value:  Size  Location     Type
  3328 ;;                  1    wreg      void 
  3329 ;; Registers used:
  3330 ;;		wreg, status,2
  3331 ;; Tracked objects:
  3332 ;;		On entry : 0/0
  3333 ;;		On exit  : 0/0
  3334 ;;		Unchanged: 0/0
  3335 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3336 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3337 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3338 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3339 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3340 ;;Total ram usage:        0 bytes
  3341 ;; Hardware stack levels used:    1
  3342 ;; Hardware stack levels required when called:    4
  3343 ;; This function calls:
  3344 ;;		Nothing
  3345 ;; This function is called by:
  3346 ;;		_SYSTEM_Initialize
  3347 ;; This function uses a non-reentrant model
  3348 ;;
  3349                           
  3350                           
  3351                           ;psect for function _TMR2_Initialize
  3352  02D8                     _TMR2_Initialize:
  3353  02D8                     l1408:	
  3354                           ;incstack = 0
  3355                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
  3356                           
  3357                           
  3358                           ;tmr2.c: 67: PR2 = 0x7C;
  3359  02D8  307C               	movlw	124
  3360  02D9  0020               	movlb	0	; select bank0
  3361  02DA  009B               	movwf	27	;volatile
  3362  02DB                     l1410:
  3363                           
  3364                           ;tmr2.c: 70: TMR2 = 0x00;
  3365  02DB  019A               	clrf	26	;volatile
  3366  02DC                     l1412:
  3367                           
  3368                           ;tmr2.c: 73: PIR1bits.TMR2IF = 0;
  3369  02DC  1091               	bcf	17,1	;volatile
  3370  02DD                     l1414:
  3371                           
  3372                           ;tmr2.c: 76: T2CON = 0x7C;
  3373  02DD  307C               	movlw	124
  3374  02DE  009C               	movwf	28	;volatile
  3375  02DF                     l67:
  3376  02DF  0008               	return
  3377  02E0                     __end_of_TMR2_Initialize:
  3378                           
  3379                           	psect	text9
  3380  02C6                     __ptext9:	
  3381 ;; *************** function _PWM1_Initialize *****************
  3382 ;; Defined at:
  3383 ;;		line 64 in file "mcc_generated_files/pwm1.c"
  3384 ;; Parameters:    Size  Location     Type
  3385 ;;		None
  3386 ;; Auto vars:     Size  Location     Type
  3387 ;;		None
  3388 ;; Return value:  Size  Location     Type
  3389 ;;                  1    wreg      void 
  3390 ;; Registers used:
  3391 ;;		wreg, status,2, status,0
  3392 ;; Tracked objects:
  3393 ;;		On entry : 0/0
  3394 ;;		On exit  : 0/0
  3395 ;;		Unchanged: 0/0
  3396 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3397 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3398 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3399 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3400 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3401 ;;Total ram usage:        0 bytes
  3402 ;; Hardware stack levels used:    1
  3403 ;; Hardware stack levels required when called:    4
  3404 ;; This function calls:
  3405 ;;		Nothing
  3406 ;; This function is called by:
  3407 ;;		_SYSTEM_Initialize
  3408 ;; This function uses a non-reentrant model
  3409 ;;
  3410                           
  3411                           
  3412                           ;psect for function _PWM1_Initialize
  3413  02C6                     _PWM1_Initialize:
  3414  02C6                     l1402:	
  3415                           ;incstack = 0
  3416                           ; Regs used in _PWM1_Initialize: [wreg+status,2+status,0]
  3417                           
  3418                           
  3419                           ;pwm1.c: 69: CCP1CON = 0x1C;
  3420  02C6  301C               	movlw	28
  3421  02C7  0025               	movlb	5	; select bank5
  3422  02C8  0093               	movwf	19	;volatile
  3423                           
  3424                           ;pwm1.c: 72: CCPR1L = 0x3E;
  3425  02C9  303E               	movlw	62
  3426  02CA  0091               	movwf	17	;volatile
  3427  02CB                     l1404:
  3428                           
  3429                           ;pwm1.c: 75: CCPR1H = 0x00;
  3430  02CB  0192               	clrf	18	;volatile
  3431  02CC                     l1406:
  3432                           
  3433                           ;pwm1.c: 78: CCPTMRSbits.C1TSEL = 0x0;
  3434  02CC  30FC               	movlw	-4
  3435  02CD  059E               	andwf	30,f	;volatile
  3436  02CE                     l51:
  3437  02CE  0008               	return
  3438  02CF                     __end_of_PWM1_Initialize:
  3439                           
  3440                           	psect	text10
  3441  0237                     __ptext10:	
  3442 ;; *************** function _PIN_MANAGER_Initialize *****************
  3443 ;; Defined at:
  3444 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  3445 ;; Parameters:    Size  Location     Type
  3446 ;;		None
  3447 ;; Auto vars:     Size  Location     Type
  3448 ;;		None
  3449 ;; Return value:  Size  Location     Type
  3450 ;;                  1    wreg      void 
  3451 ;; Registers used:
  3452 ;;		wreg, status,2
  3453 ;; Tracked objects:
  3454 ;;		On entry : 0/0
  3455 ;;		On exit  : 0/0
  3456 ;;		Unchanged: 0/0
  3457 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3458 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3459 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3460 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3461 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3462 ;;Total ram usage:        0 bytes
  3463 ;; Hardware stack levels used:    1
  3464 ;; Hardware stack levels required when called:    4
  3465 ;; This function calls:
  3466 ;;		Nothing
  3467 ;; This function is called by:
  3468 ;;		_SYSTEM_Initialize
  3469 ;; This function uses a non-reentrant model
  3470 ;;
  3471                           
  3472                           
  3473                           ;psect for function _PIN_MANAGER_Initialize
  3474  0237                     _PIN_MANAGER_Initialize:
  3475  0237                     l1372:	
  3476                           ;incstack = 0
  3477                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  3478                           
  3479                           
  3480                           ;pin_manager.c: 60: LATA = 0x00;
  3481  0237  0022               	movlb	2	; select bank2
  3482  0238  018C               	clrf	12	;volatile
  3483                           
  3484                           ;pin_manager.c: 61: LATC = 0x00;
  3485  0239  018E               	clrf	14	;volatile
  3486  023A                     l1374:
  3487                           
  3488                           ;pin_manager.c: 66: TRISA = 0x07;
  3489  023A  3007               	movlw	7
  3490  023B  0021               	movlb	1	; select bank1
  3491  023C  008C               	movwf	12	;volatile
  3492  023D                     l1376:
  3493                           
  3494                           ;pin_manager.c: 67: TRISC = 0x20;
  3495  023D  3020               	movlw	32
  3496  023E  008E               	movwf	14	;volatile
  3497                           
  3498                           ;pin_manager.c: 72: ANSELC = 0x00;
  3499  023F  0023               	movlb	3	; select bank3
  3500  0240  018E               	clrf	14	;volatile
  3501  0241                     l1378:
  3502                           
  3503                           ;pin_manager.c: 73: ANSELA = 0x07;
  3504  0241  3007               	movlw	7
  3505  0242  008C               	movwf	12	;volatile
  3506  0243                     l1380:
  3507                           
  3508                           ;pin_manager.c: 78: WPUA = 0x00;
  3509  0243  0024               	movlb	4	; select bank4
  3510  0244  018C               	clrf	12	;volatile
  3511  0245                     l1382:
  3512                           
  3513                           ;pin_manager.c: 79: WPUC = 0x00;
  3514  0245  018E               	clrf	14	;volatile
  3515  0246                     l1384:
  3516                           
  3517                           ;pin_manager.c: 80: OPTION_REGbits.nWPUEN = 1;
  3518  0246  0021               	movlb	1	; select bank1
  3519  0247  1795               	bsf	21,7	;volatile
  3520  0248                     l1386:
  3521                           
  3522                           ;pin_manager.c: 85: ODCONA = 0x00;
  3523  0248  0025               	movlb	5	; select bank5
  3524  0249  018C               	clrf	12	;volatile
  3525  024A                     l1388:
  3526                           
  3527                           ;pin_manager.c: 86: ODCONC = 0x00;
  3528  024A  018E               	clrf	14	;volatile
  3529  024B                     l1390:
  3530                           
  3531                           ;pin_manager.c: 91: SLRCONA = 0x37;
  3532  024B  3037               	movlw	55
  3533  024C  0026               	movlb	6	; select bank6
  3534  024D  008C               	movwf	12	;volatile
  3535  024E                     l1392:
  3536                           
  3537                           ;pin_manager.c: 92: SLRCONC = 0x3F;
  3538  024E  303F               	movlw	63
  3539  024F  008E               	movwf	14	;volatile
  3540  0250                     l1394:
  3541                           
  3542                           ;pin_manager.c: 97: INLVLA = 0x3F;
  3543  0250  303F               	movlw	63
  3544  0251  0027               	movlb	7	; select bank7
  3545  0252  008C               	movwf	12	;volatile
  3546  0253                     l1396:
  3547                           
  3548                           ;pin_manager.c: 98: INLVLC = 0x3F;
  3549  0253  303F               	movlw	63
  3550  0254  008E               	movwf	14	;volatile
  3551  0255                     l1398:
  3552                           
  3553                           ;pin_manager.c: 107: RXPPS = 0x15;
  3554  0255  3015               	movlw	21
  3555  0256  003C               	movlb	28	; select bank28
  3556  0257  00A4               	movwf	36	;volatile
  3557  0258                     l1400:
  3558                           
  3559                           ;pin_manager.c: 108: RC4PPS = 0x14;
  3560  0258  3014               	movlw	20
  3561  0259  003D               	movlb	29	; select bank29
  3562  025A  00A4               	movwf	36	;volatile
  3563  025B                     l37:
  3564  025B  0008               	return
  3565  025C                     __end_of_PIN_MANAGER_Initialize:
  3566                           
  3567                           	psect	text11
  3568  02E0                     __ptext11:	
  3569 ;; *************** function _OSCILLATOR_Initialize *****************
  3570 ;; Defined at:
  3571 ;;		line 62 in file "mcc_generated_files/mcc.c"
  3572 ;; Parameters:    Size  Location     Type
  3573 ;;		None
  3574 ;; Auto vars:     Size  Location     Type
  3575 ;;		None
  3576 ;; Return value:  Size  Location     Type
  3577 ;;                  1    wreg      void 
  3578 ;; Registers used:
  3579 ;;		wreg, status,2
  3580 ;; Tracked objects:
  3581 ;;		On entry : 0/0
  3582 ;;		On exit  : 0/0
  3583 ;;		Unchanged: 0/0
  3584 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3585 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3586 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3587 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3588 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3589 ;;Total ram usage:        0 bytes
  3590 ;; Hardware stack levels used:    1
  3591 ;; Hardware stack levels required when called:    4
  3592 ;; This function calls:
  3593 ;;		Nothing
  3594 ;; This function is called by:
  3595 ;;		_SYSTEM_Initialize
  3596 ;; This function uses a non-reentrant model
  3597 ;;
  3598                           
  3599                           
  3600                           ;psect for function _OSCILLATOR_Initialize
  3601  02E0                     _OSCILLATOR_Initialize:
  3602  02E0                     l1416:	
  3603                           ;incstack = 0
  3604                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  3605                           
  3606                           
  3607                           ;mcc.c: 65: OSCCON = 0x70;
  3608  02E0  3070               	movlw	112
  3609  02E1  0021               	movlb	1	; select bank1
  3610  02E2  0099               	movwf	25	;volatile
  3611  02E3                     l1418:
  3612                           
  3613                           ;mcc.c: 67: OSCSTAT = 0x00;
  3614  02E3  019A               	clrf	26	;volatile
  3615  02E4                     l1420:
  3616                           
  3617                           ;mcc.c: 69: OSCTUNE = 0x00;
  3618  02E4  0198               	clrf	24	;volatile
  3619  02E5                     l1422:
  3620                           
  3621                           ;mcc.c: 71: BORCON = 0x00;
  3622  02E5  0022               	movlb	2	; select bank2
  3623  02E6  0196               	clrf	22	;volatile
  3624  02E7                     l116:
  3625  02E7  0008               	return
  3626  02E8                     __end_of_OSCILLATOR_Initialize:
  3627                           
  3628                           	psect	text12
  3629  00FE                     __ptext12:	
  3630 ;; *************** function _EUSART_Initialize *****************
  3631 ;; Defined at:
  3632 ;;		line 88 in file "mcc_generated_files/eusart.c"
  3633 ;; Parameters:    Size  Location     Type
  3634 ;;		None
  3635 ;; Auto vars:     Size  Location     Type
  3636 ;;		None
  3637 ;; Return value:  Size  Location     Type
  3638 ;;                  1    wreg      void 
  3639 ;; Registers used:
  3640 ;;		wreg, status,2, status,0, pclath, cstack
  3641 ;; Tracked objects:
  3642 ;;		On entry : 0/0
  3643 ;;		On exit  : 0/0
  3644 ;;		Unchanged: 0/0
  3645 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3646 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3647 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3648 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3649 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3650 ;;Total ram usage:        1 bytes
  3651 ;; Hardware stack levels used:    1
  3652 ;; Hardware stack levels required when called:    5
  3653 ;; This function calls:
  3654 ;;		_EUSART_SetErrorHandler
  3655 ;;		_EUSART_SetFramingErrorHandler
  3656 ;;		_EUSART_SetOverrunErrorHandler
  3657 ;;		_EUSART_SetRxInterruptHandler
  3658 ;;		_EUSART_SetTxInterruptHandler
  3659 ;; This function is called by:
  3660 ;;		_SYSTEM_Initialize
  3661 ;; This function uses a non-reentrant model
  3662 ;;
  3663                           
  3664                           
  3665                           ;psect for function _EUSART_Initialize
  3666  00FE                     _EUSART_Initialize:
  3667  00FE                     l1436:	
  3668                           ;incstack = 0
  3669                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3670                           
  3671                           
  3672                           ;eusart.c: 91: PIE1bits.RCIE = 0;
  3673  00FE  0021               	movlb	1	; select bank1
  3674  00FF  1291               	bcf	17,5	;volatile
  3675  0100                     l1438:
  3676                           
  3677                           ;eusart.c: 92: EUSART_SetRxInterruptHandler(EUSART_Receive_ISR);
  3678  0100  3079               	movlw	low _EUSART_Receive_ISR
  3679  0101  00F1               	movwf	EUSART_SetRxInterruptHandler@interruptHandler
  3680  0102  3001               	movlw	high _EUSART_Receive_ISR
  3681  0103  00F2               	movwf	EUSART_SetRxInterruptHandler@interruptHandler+1
  3682  0104  3182  22FA  3180   	fcall	_EUSART_SetRxInterruptHandler
  3683  0107                     l1440:
  3684                           
  3685                           ;eusart.c: 93: PIE1bits.TXIE = 0;
  3686  0107  0021               	movlb	1	; select bank1
  3687  0108  1211               	bcf	17,4	;volatile
  3688                           
  3689                           ;eusart.c: 94: EUSART_SetTxInterruptHandler(EUSART_Transmit_ISR);
  3690  0109  305C               	movlw	low _EUSART_Transmit_ISR
  3691  010A  00F1               	movwf	EUSART_SetTxInterruptHandler@interruptHandler
  3692  010B  3002               	movlw	high _EUSART_Transmit_ISR
  3693  010C  00F2               	movwf	EUSART_SetTxInterruptHandler@interruptHandler+1
  3694  010D  3182  22F4  3180   	fcall	_EUSART_SetTxInterruptHandler
  3695  0110                     l1442:
  3696                           
  3697                           ;eusart.c: 98: BAUD1CON = 0x08;
  3698  0110  3008               	movlw	8
  3699  0111  0023               	movlb	3	; select bank3
  3700  0112  009F               	movwf	31	;volatile
  3701  0113                     l1444:
  3702                           
  3703                           ;eusart.c: 101: RC1STA = 0x90;
  3704  0113  3090               	movlw	144
  3705  0114  009D               	movwf	29	;volatile
  3706  0115                     l1446:
  3707                           
  3708                           ;eusart.c: 104: TX1STA = 0x24;
  3709  0115  3024               	movlw	36
  3710  0116  009E               	movwf	30	;volatile
  3711  0117                     l1448:
  3712                           
  3713                           ;eusart.c: 107: SP1BRGL = 0xCF;
  3714  0117  30CF               	movlw	207
  3715  0118  009B               	movwf	27	;volatile
  3716  0119                     l1450:
  3717                           
  3718                           ;eusart.c: 110: SP1BRGH = 0x00;
  3719  0119  019C               	clrf	28	;volatile
  3720  011A                     l1452:
  3721                           
  3722                           ;eusart.c: 113: EUSART_SetFramingErrorHandler(EUSART_DefaultFramingErrorHandler);
  3723  011A  3022               	movlw	low _EUSART_DefaultFramingErrorHandler
  3724  011B  00F1               	movwf	EUSART_SetFramingErrorHandler@interruptHandler
  3725  011C  3003               	movlw	high _EUSART_DefaultFramingErrorHandler
  3726  011D  00F2               	movwf	EUSART_SetFramingErrorHandler@interruptHandler+1
  3727  011E  3183  2306  3180   	fcall	_EUSART_SetFramingErrorHandler
  3728  0121                     l1454:
  3729                           
  3730                           ;eusart.c: 114: EUSART_SetOverrunErrorHandler(EUSART_DefaultOverrunErrorHandler);
  3731  0121  301A               	movlw	low _EUSART_DefaultOverrunErrorHandler
  3732  0122  00F1               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler
  3733  0123  3003               	movlw	high _EUSART_DefaultOverrunErrorHandler
  3734  0124  00F2               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler+1
  3735  0125  3183  2300  3180   	fcall	_EUSART_SetOverrunErrorHandler
  3736  0128                     l1456:
  3737                           
  3738                           ;eusart.c: 115: EUSART_SetErrorHandler(EUSART_DefaultErrorHandler);
  3739  0128  301E               	movlw	low _EUSART_DefaultErrorHandler
  3740  0129  00F1               	movwf	EUSART_SetErrorHandler@interruptHandler
  3741  012A  3003               	movlw	high _EUSART_DefaultErrorHandler
  3742  012B  00F2               	movwf	EUSART_SetErrorHandler@interruptHandler+1
  3743  012C  3183  230C  3180   	fcall	_EUSART_SetErrorHandler
  3744                           
  3745                           ;eusart.c: 117: eusartRxLastError.status = 0;
  3746  012F  0020               	movlb	0	; select bank0
  3747  0130  01BA               	clrf	_eusartRxLastError	;volatile
  3748                           
  3749                           ;eusart.c: 120: eusartTxHead = 0;
  3750  0131  01BE               	clrf	_eusartTxHead	;volatile
  3751                           
  3752                           ;eusart.c: 121: eusartTxTail = 0;
  3753  0132  01BD               	clrf	_eusartTxTail	;volatile
  3754  0133                     l1458:
  3755                           
  3756                           ;eusart.c: 122: eusartTxBufferRemaining = sizeof(eusartTxBuffer);
  3757  0133  3008               	movlw	8
  3758  0134  00F3               	movwf	??_EUSART_Initialize
  3759  0135  0873               	movf	??_EUSART_Initialize,w
  3760  0136  00DD               	movwf	_eusartTxBufferRemaining	;volatile
  3761  0137                     l1460:
  3762                           
  3763                           ;eusart.c: 124: eusartRxHead = 0;
  3764  0137  01FB               	clrf	_eusartRxHead	;volatile
  3765  0138                     l1462:
  3766                           
  3767                           ;eusart.c: 125: eusartRxTail = 0;
  3768  0138  01BC               	clrf	_eusartRxTail	;volatile
  3769  0139                     l1464:
  3770                           
  3771                           ;eusart.c: 126: eusartRxCount = 0;
  3772  0139  01BB               	clrf	_eusartRxCount	;volatile
  3773  013A                     l1466:
  3774                           
  3775                           ;eusart.c: 129: PIE1bits.RCIE = 1;
  3776  013A  0021               	movlb	1	; select bank1
  3777  013B  1691               	bsf	17,5	;volatile
  3778  013C                     l234:
  3779  013C  0008               	return
  3780  013D                     __end_of_EUSART_Initialize:
  3781                           
  3782                           	psect	text13
  3783  02F4                     __ptext13:	
  3784 ;; *************** function _EUSART_SetTxInterruptHandler *****************
  3785 ;; Defined at:
  3786 ;;		line 285 in file "mcc_generated_files/eusart.c"
  3787 ;; Parameters:    Size  Location     Type
  3788 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
  3789 ;;		 -> EUSART_Transmit_ISR(1), 
  3790 ;; Auto vars:     Size  Location     Type
  3791 ;;		None
  3792 ;; Return value:  Size  Location     Type
  3793 ;;                  1    wreg      void 
  3794 ;; Registers used:
  3795 ;;		wreg
  3796 ;; Tracked objects:
  3797 ;;		On entry : 0/0
  3798 ;;		On exit  : 0/0
  3799 ;;		Unchanged: 0/0
  3800 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3801 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3802 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3803 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3804 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3805 ;;Total ram usage:        2 bytes
  3806 ;; Hardware stack levels used:    1
  3807 ;; Hardware stack levels required when called:    4
  3808 ;; This function calls:
  3809 ;;		Nothing
  3810 ;; This function is called by:
  3811 ;;		_EUSART_Initialize
  3812 ;; This function uses a non-reentrant model
  3813 ;;
  3814                           
  3815                           
  3816                           ;psect for function _EUSART_SetTxInterruptHandler
  3817  02F4                     _EUSART_SetTxInterruptHandler:
  3818  02F4                     l1336:	
  3819                           ;incstack = 0
  3820                           ; Regs used in _EUSART_SetTxInterruptHandler: [wreg]
  3821                           
  3822                           
  3823                           ;eusart.c: 286: EUSART_TxDefaultInterruptHandler = interruptHandler;
  3824  02F4  0872               	movf	EUSART_SetTxInterruptHandler@interruptHandler+1,w
  3825  02F5  0020               	movlb	0	; select bank0
  3826  02F6  00DC               	movwf	_EUSART_TxDefaultInterruptHandler+1
  3827  02F7  0871               	movf	EUSART_SetTxInterruptHandler@interruptHandler,w
  3828  02F8  00DB               	movwf	_EUSART_TxDefaultInterruptHandler
  3829  02F9                     l306:
  3830  02F9  0008               	return
  3831  02FA                     __end_of_EUSART_SetTxInterruptHandler:
  3832                           
  3833                           	psect	text14
  3834  02FA                     __ptext14:	
  3835 ;; *************** function _EUSART_SetRxInterruptHandler *****************
  3836 ;; Defined at:
  3837 ;;		line 289 in file "mcc_generated_files/eusart.c"
  3838 ;; Parameters:    Size  Location     Type
  3839 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
  3840 ;;		 -> EUSART_Receive_ISR(1), 
  3841 ;; Auto vars:     Size  Location     Type
  3842 ;;		None
  3843 ;; Return value:  Size  Location     Type
  3844 ;;                  1    wreg      void 
  3845 ;; Registers used:
  3846 ;;		wreg
  3847 ;; Tracked objects:
  3848 ;;		On entry : 0/0
  3849 ;;		On exit  : 0/0
  3850 ;;		Unchanged: 0/0
  3851 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3852 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3853 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3854 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3855 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3856 ;;Total ram usage:        2 bytes
  3857 ;; Hardware stack levels used:    1
  3858 ;; Hardware stack levels required when called:    4
  3859 ;; This function calls:
  3860 ;;		Nothing
  3861 ;; This function is called by:
  3862 ;;		_EUSART_Initialize
  3863 ;; This function uses a non-reentrant model
  3864 ;;
  3865                           
  3866                           
  3867                           ;psect for function _EUSART_SetRxInterruptHandler
  3868  02FA                     _EUSART_SetRxInterruptHandler:
  3869  02FA                     l1334:	
  3870                           ;incstack = 0
  3871                           ; Regs used in _EUSART_SetRxInterruptHandler: [wreg]
  3872                           
  3873                           
  3874                           ;eusart.c: 290: EUSART_RxDefaultInterruptHandler = interruptHandler;
  3875  02FA  0872               	movf	EUSART_SetRxInterruptHandler@interruptHandler+1,w
  3876  02FB  0020               	movlb	0	; select bank0
  3877  02FC  00DA               	movwf	_EUSART_RxDefaultInterruptHandler+1
  3878  02FD  0871               	movf	EUSART_SetRxInterruptHandler@interruptHandler,w
  3879  02FE  00D9               	movwf	_EUSART_RxDefaultInterruptHandler
  3880  02FF                     l309:
  3881  02FF  0008               	return
  3882  0300                     __end_of_EUSART_SetRxInterruptHandler:
  3883                           
  3884                           	psect	text15
  3885  0300                     __ptext15:	
  3886 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  3887 ;; Defined at:
  3888 ;;		line 277 in file "mcc_generated_files/eusart.c"
  3889 ;; Parameters:    Size  Location     Type
  3890 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
  3891 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  3892 ;; Auto vars:     Size  Location     Type
  3893 ;;		None
  3894 ;; Return value:  Size  Location     Type
  3895 ;;                  1    wreg      void 
  3896 ;; Registers used:
  3897 ;;		wreg
  3898 ;; Tracked objects:
  3899 ;;		On entry : 0/0
  3900 ;;		On exit  : 0/0
  3901 ;;		Unchanged: 0/0
  3902 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3903 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3904 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3905 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3906 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3907 ;;Total ram usage:        2 bytes
  3908 ;; Hardware stack levels used:    1
  3909 ;; Hardware stack levels required when called:    4
  3910 ;; This function calls:
  3911 ;;		Nothing
  3912 ;; This function is called by:
  3913 ;;		_EUSART_Initialize
  3914 ;; This function uses a non-reentrant model
  3915 ;;
  3916                           
  3917                           
  3918                           ;psect for function _EUSART_SetOverrunErrorHandler
  3919  0300                     _EUSART_SetOverrunErrorHandler:
  3920  0300                     l1340:	
  3921                           ;incstack = 0
  3922                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
  3923                           
  3924                           
  3925                           ;eusart.c: 278: EUSART_OverrunErrorHandler = interruptHandler;
  3926  0300  0872               	movf	EUSART_SetOverrunErrorHandler@interruptHandler+1,w
  3927  0301  0020               	movlb	0	; select bank0
  3928  0302  00D6               	movwf	_EUSART_OverrunErrorHandler+1
  3929  0303  0871               	movf	EUSART_SetOverrunErrorHandler@interruptHandler,w
  3930  0304  00D5               	movwf	_EUSART_OverrunErrorHandler
  3931  0305                     l300:
  3932  0305  0008               	return
  3933  0306                     __end_of_EUSART_SetOverrunErrorHandler:
  3934                           
  3935                           	psect	text16
  3936  0306                     __ptext16:	
  3937 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  3938 ;; Defined at:
  3939 ;;		line 273 in file "mcc_generated_files/eusart.c"
  3940 ;; Parameters:    Size  Location     Type
  3941 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
  3942 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  3943 ;; Auto vars:     Size  Location     Type
  3944 ;;		None
  3945 ;; Return value:  Size  Location     Type
  3946 ;;                  1    wreg      void 
  3947 ;; Registers used:
  3948 ;;		wreg
  3949 ;; Tracked objects:
  3950 ;;		On entry : 0/0
  3951 ;;		On exit  : 0/0
  3952 ;;		Unchanged: 0/0
  3953 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3954 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3955 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3956 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3957 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3958 ;;Total ram usage:        2 bytes
  3959 ;; Hardware stack levels used:    1
  3960 ;; Hardware stack levels required when called:    4
  3961 ;; This function calls:
  3962 ;;		Nothing
  3963 ;; This function is called by:
  3964 ;;		_EUSART_Initialize
  3965 ;; This function uses a non-reentrant model
  3966 ;;
  3967                           
  3968                           
  3969                           ;psect for function _EUSART_SetFramingErrorHandler
  3970  0306                     _EUSART_SetFramingErrorHandler:
  3971  0306                     l1338:	
  3972                           ;incstack = 0
  3973                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
  3974                           
  3975                           
  3976                           ;eusart.c: 274: EUSART_FramingErrorHandler = interruptHandler;
  3977  0306  0872               	movf	EUSART_SetFramingErrorHandler@interruptHandler+1,w
  3978  0307  0020               	movlb	0	; select bank0
  3979  0308  00D8               	movwf	_EUSART_FramingErrorHandler+1
  3980  0309  0871               	movf	EUSART_SetFramingErrorHandler@interruptHandler,w
  3981  030A  00D7               	movwf	_EUSART_FramingErrorHandler
  3982  030B                     l297:
  3983  030B  0008               	return
  3984  030C                     __end_of_EUSART_SetFramingErrorHandler:
  3985                           
  3986                           	psect	text17
  3987  030C                     __ptext17:	
  3988 ;; *************** function _EUSART_SetErrorHandler *****************
  3989 ;; Defined at:
  3990 ;;		line 281 in file "mcc_generated_files/eusart.c"
  3991 ;; Parameters:    Size  Location     Type
  3992 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
  3993 ;;		 -> EUSART_DefaultErrorHandler(1), 
  3994 ;; Auto vars:     Size  Location     Type
  3995 ;;		None
  3996 ;; Return value:  Size  Location     Type
  3997 ;;                  1    wreg      void 
  3998 ;; Registers used:
  3999 ;;		wreg
  4000 ;; Tracked objects:
  4001 ;;		On entry : 0/0
  4002 ;;		On exit  : 0/0
  4003 ;;		Unchanged: 0/0
  4004 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4005 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4006 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4007 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4008 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4009 ;;Total ram usage:        2 bytes
  4010 ;; Hardware stack levels used:    1
  4011 ;; Hardware stack levels required when called:    4
  4012 ;; This function calls:
  4013 ;;		Nothing
  4014 ;; This function is called by:
  4015 ;;		_EUSART_Initialize
  4016 ;; This function uses a non-reentrant model
  4017 ;;
  4018                           
  4019                           
  4020                           ;psect for function _EUSART_SetErrorHandler
  4021  030C                     _EUSART_SetErrorHandler:
  4022  030C                     l1342:	
  4023                           ;incstack = 0
  4024                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
  4025                           
  4026                           
  4027                           ;eusart.c: 282: EUSART_ErrorHandler = interruptHandler;
  4028  030C  0872               	movf	EUSART_SetErrorHandler@interruptHandler+1,w
  4029  030D  0020               	movlb	0	; select bank0
  4030  030E  00D4               	movwf	_EUSART_ErrorHandler+1
  4031  030F  0871               	movf	EUSART_SetErrorHandler@interruptHandler,w
  4032  0310  00D3               	movwf	_EUSART_ErrorHandler
  4033  0311                     l303:
  4034  0311  0008               	return
  4035  0312                     __end_of_EUSART_SetErrorHandler:
  4036                           
  4037                           	psect	text18
  4038  02CF                     __ptext18:	
  4039 ;; *************** function _ADC_Initialize *****************
  4040 ;; Defined at:
  4041 ;;		line 67 in file "mcc_generated_files/adc.c"
  4042 ;; Parameters:    Size  Location     Type
  4043 ;;		None
  4044 ;; Auto vars:     Size  Location     Type
  4045 ;;		None
  4046 ;; Return value:  Size  Location     Type
  4047 ;;                  1    wreg      void 
  4048 ;; Registers used:
  4049 ;;		wreg, status,2
  4050 ;; Tracked objects:
  4051 ;;		On entry : 0/0
  4052 ;;		On exit  : 0/0
  4053 ;;		Unchanged: 0/0
  4054 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4055 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4056 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4057 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4058 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4059 ;;Total ram usage:        0 bytes
  4060 ;; Hardware stack levels used:    1
  4061 ;; Hardware stack levels required when called:    4
  4062 ;; This function calls:
  4063 ;;		Nothing
  4064 ;; This function is called by:
  4065 ;;		_SYSTEM_Initialize
  4066 ;; This function uses a non-reentrant model
  4067 ;;
  4068                           
  4069                           
  4070                           ;psect for function _ADC_Initialize
  4071  02CF                     _ADC_Initialize:
  4072  02CF                     l1426:	
  4073                           ;incstack = 0
  4074                           ; Regs used in _ADC_Initialize: [wreg+status,2]
  4075                           
  4076                           
  4077                           ;adc.c: 72: ADCON1 = 0x12;
  4078  02CF  3012               	movlw	18
  4079  02D0  0021               	movlb	1	; select bank1
  4080  02D1  009E               	movwf	30	;volatile
  4081  02D2                     l1428:
  4082                           
  4083                           ;adc.c: 75: ADCON2 = 0x00;
  4084  02D2  019F               	clrf	31	;volatile
  4085  02D3                     l1430:
  4086                           
  4087                           ;adc.c: 78: ADRESL = 0x00;
  4088  02D3  019B               	clrf	27	;volatile
  4089  02D4                     l1432:
  4090                           
  4091                           ;adc.c: 81: ADRESH = 0x00;
  4092  02D4  019C               	clrf	28	;volatile
  4093  02D5                     l1434:
  4094                           
  4095                           ;adc.c: 84: ADCON0 = 0x01;
  4096  02D5  3001               	movlw	1
  4097  02D6  009D               	movwf	29	;volatile
  4098  02D7                     l138:
  4099  02D7  0008               	return
  4100  02D8                     __end_of_ADC_Initialize:
  4101                           
  4102                           	psect	intentry
  4103  0004                     __pintentry:	
  4104 ;; *************** function _INTERRUPT_InterruptManager *****************
  4105 ;; Defined at:
  4106 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  4107 ;; Parameters:    Size  Location     Type
  4108 ;;		None
  4109 ;; Auto vars:     Size  Location     Type
  4110 ;;		None
  4111 ;; Return value:  Size  Location     Type
  4112 ;;                  1    wreg      void 
  4113 ;; Registers used:
  4114 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4115 ;; Tracked objects:
  4116 ;;		On entry : 0/0
  4117 ;;		On exit  : 0/0
  4118 ;;		Unchanged: 0/0
  4119 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4120 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4121 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4122 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4123 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4124 ;;Total ram usage:        0 bytes
  4125 ;; Hardware stack levels used:    1
  4126 ;; Hardware stack levels required when called:    3
  4127 ;; This function calls:
  4128 ;;		Absolute function
  4129 ;;		_EUSART_Receive_ISR
  4130 ;;		_EUSART_Transmit_ISR
  4131 ;; This function is called by:
  4132 ;;		Interrupt level 1
  4133 ;; This function uses a non-reentrant model
  4134 ;;
  4135                           
  4136  0004                     _INTERRUPT_InterruptManager:
  4137                           
  4138                           ;incstack = 0
  4139  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  4140                           
  4141                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
  4142  0005  3180               	pagesel	$
  4143  0006                     i1l1630:
  4144                           
  4145                           ;interrupt_manager.c: 55: if(INTCONbits.PEIE == 1)
  4146  0006  1F0B               	btfss	11,6	;volatile
  4147  0007  2809               	goto	u71_21
  4148  0008  280A               	goto	u71_20
  4149  0009                     u71_21:
  4150  0009  282A               	goto	i1l330
  4151  000A                     u71_20:
  4152  000A                     i1l1632:
  4153                           
  4154                           ;interrupt_manager.c: 56: {;interrupt_manager.c: 57: if(PIE1bits.TXIE == 1 && PIR1bits.T
      +                          XIF == 1)
  4155  000A  0021               	movlb	1	; select bank1
  4156  000B  1E11               	btfss	17,4	;volatile
  4157  000C  280E               	goto	u72_21
  4158  000D  280F               	goto	u72_20
  4159  000E                     u72_21:
  4160  000E  281A               	goto	i1l325
  4161  000F                     u72_20:
  4162  000F                     i1l1634:
  4163  000F  0020               	movlb	0	; select bank0
  4164  0010  1E11               	btfss	17,4	;volatile
  4165  0011  2813               	goto	u73_21
  4166  0012  2814               	goto	u73_20
  4167  0013                     u73_21:
  4168  0013  281A               	goto	i1l325
  4169  0014                     u73_20:
  4170  0014                     i1l1636:
  4171                           
  4172                           ;interrupt_manager.c: 58: {;interrupt_manager.c: 59: EUSART_TxDefaultInterruptHandler();
  4173  0014  085C               	movf	_EUSART_TxDefaultInterruptHandler+1,w
  4174  0015  008A               	movwf	10
  4175  0016  085B               	movf	_EUSART_TxDefaultInterruptHandler,w
  4176  0017  000A               	callw
  4177  0018  3180               	pagesel	$
  4178                           
  4179                           ;interrupt_manager.c: 60: }
  4180  0019  282A               	goto	i1l330
  4181  001A                     i1l325:
  4182                           
  4183                           ;interrupt_manager.c: 61: else if(PIE1bits.RCIE == 1 && PIR1bits.RCIF == 1)
  4184  001A  0021               	movlb	1	; select bank1
  4185  001B  1E91               	btfss	17,5	;volatile
  4186  001C  281E               	goto	u74_21
  4187  001D  281F               	goto	u74_20
  4188  001E                     u74_21:
  4189  001E  282A               	goto	i1l326
  4190  001F                     u74_20:
  4191  001F                     i1l1638:
  4192  001F  0020               	movlb	0	; select bank0
  4193  0020  1E91               	btfss	17,5	;volatile
  4194  0021  2823               	goto	u75_21
  4195  0022  2824               	goto	u75_20
  4196  0023                     u75_21:
  4197  0023  282A               	goto	i1l326
  4198  0024                     u75_20:
  4199  0024                     i1l1640:
  4200                           
  4201                           ;interrupt_manager.c: 62: {;interrupt_manager.c: 63: EUSART_RxDefaultInterruptHandler();
  4202  0024  085A               	movf	_EUSART_RxDefaultInterruptHandler+1,w
  4203  0025  008A               	movwf	10
  4204  0026  0859               	movf	_EUSART_RxDefaultInterruptHandler,w
  4205  0027  000A               	callw
  4206  0028  3180               	pagesel	$
  4207                           
  4208                           ;interrupt_manager.c: 64: }
  4209  0029  282A               	goto	i1l330
  4210  002A                     i1l326:
  4211  002A                     i1l330:	
  4212                           ;interrupt_manager.c: 68: };interrupt_manager.c: 69: }
  4213                           
  4214  002A  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  4215  002B  0009               	retfie
  4216  002C                     __end_of_INTERRUPT_InterruptManager:
  4217                           
  4218                           	psect	text20
  4219  025C                     __ptext20:	
  4220 ;; *************** function _EUSART_Transmit_ISR *****************
  4221 ;; Defined at:
  4222 ;;		line 206 in file "mcc_generated_files/eusart.c"
  4223 ;; Parameters:    Size  Location     Type
  4224 ;;		None
  4225 ;; Auto vars:     Size  Location     Type
  4226 ;;		None
  4227 ;; Return value:  Size  Location     Type
  4228 ;;                  1    wreg      void 
  4229 ;; Registers used:
  4230 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4231 ;; Tracked objects:
  4232 ;;		On entry : 0/0
  4233 ;;		On exit  : 0/0
  4234 ;;		Unchanged: 0/0
  4235 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4236 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4237 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4238 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4239 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4240 ;;Total ram usage:        1 bytes
  4241 ;; Hardware stack levels used:    1
  4242 ;; This function calls:
  4243 ;;		Nothing
  4244 ;; This function is called by:
  4245 ;;		_EUSART_Initialize
  4246 ;;		_INTERRUPT_InterruptManager
  4247 ;; This function uses a non-reentrant model
  4248 ;;
  4249                           
  4250                           
  4251                           ;psect for function _EUSART_Transmit_ISR
  4252  025C                     _EUSART_Transmit_ISR:
  4253  025C                     i1l1546:	
  4254                           ;incstack = 0
  4255                           ; Regs used in _EUSART_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
  4256                           
  4257                           
  4258                           ;eusart.c: 210: if(sizeof(eusartTxBuffer) > eusartTxBufferRemaining)
  4259  025C  3008               	movlw	8
  4260  025D  0020               	movlb	0	; select bank0
  4261  025E  025D               	subwf	_eusartTxBufferRemaining,w	;volatile
  4262  025F  1803               	skipnc
  4263  0260  2A62               	goto	u59_21
  4264  0261  2A63               	goto	u59_20
  4265  0262                     u59_21:
  4266  0262  2A7B               	goto	i1l271
  4267  0263                     u59_20:
  4268  0263                     i1l1548:
  4269                           
  4270                           ;eusart.c: 211: {;eusart.c: 212: TX1REG = eusartTxBuffer[eusartTxTail++];
  4271  0263  083D               	movf	_eusartTxTail,w
  4272  0264  3E30               	addlw	(low (_eusartTxBuffer| 0))& (0+255)
  4273  0265  0086               	movwf	6
  4274  0266  0187               	clrf	7
  4275  0267  0801               	movf	1,w
  4276  0268  0023               	movlb	3	; select bank3
  4277  0269  009A               	movwf	26	;volatile
  4278  026A                     i1l1550:
  4279  026A  3001               	movlw	1
  4280  026B  00F0               	movwf	??_EUSART_Transmit_ISR
  4281  026C  0870               	movf	??_EUSART_Transmit_ISR,w
  4282  026D  0020               	movlb	0	; select bank0
  4283  026E  07BD               	addwf	_eusartTxTail,f	;volatile
  4284  026F                     i1l1552:
  4285                           
  4286                           ;eusart.c: 213: if(sizeof(eusartTxBuffer) <= eusartTxTail)
  4287  026F  3008               	movlw	8
  4288  0270  023D               	subwf	_eusartTxTail,w	;volatile
  4289  0271  1C03               	skipc
  4290  0272  2A74               	goto	u60_21
  4291  0273  2A75               	goto	u60_20
  4292  0274                     u60_21:
  4293  0274  2A76               	goto	i1l1556
  4294  0275                     u60_20:
  4295  0275                     i1l1554:
  4296                           
  4297                           ;eusart.c: 214: {;eusart.c: 215: eusartTxTail = 0;
  4298  0275  01BD               	clrf	_eusartTxTail	;volatile
  4299  0276                     i1l1556:
  4300                           
  4301                           ;eusart.c: 216: };eusart.c: 217: eusartTxBufferRemaining++;
  4302  0276  3001               	movlw	1
  4303  0277  00F0               	movwf	??_EUSART_Transmit_ISR
  4304  0278  0870               	movf	??_EUSART_Transmit_ISR,w
  4305  0279  07DD               	addwf	_eusartTxBufferRemaining,f	;volatile
  4306                           
  4307                           ;eusart.c: 218: }
  4308  027A  2A7D               	goto	i1l274
  4309  027B                     i1l271:
  4310                           
  4311                           ;eusart.c: 219: else;eusart.c: 220: {;eusart.c: 221: PIE1bits.TXIE = 0;
  4312  027B  0021               	movlb	1	; select bank1
  4313  027C  1211               	bcf	17,4	;volatile
  4314  027D                     i1l274:
  4315  027D  0008               	return
  4316  027E                     __end_of_EUSART_Transmit_ISR:
  4317                           
  4318                           	psect	text21
  4319  0179                     __ptext21:	
  4320 ;; *************** function _EUSART_Receive_ISR *****************
  4321 ;; Defined at:
  4322 ;;		line 225 in file "mcc_generated_files/eusart.c"
  4323 ;; Parameters:    Size  Location     Type
  4324 ;;		None
  4325 ;; Auto vars:     Size  Location     Type
  4326 ;;		None
  4327 ;; Return value:  Size  Location     Type
  4328 ;;                  1    wreg      void 
  4329 ;; Registers used:
  4330 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4331 ;; Tracked objects:
  4332 ;;		On entry : 0/0
  4333 ;;		On exit  : 0/0
  4334 ;;		Unchanged: 0/0
  4335 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4336 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4337 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4338 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4339 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4340 ;;Total ram usage:        0 bytes
  4341 ;; Hardware stack levels used:    1
  4342 ;; Hardware stack levels required when called:    2
  4343 ;; This function calls:
  4344 ;;		Absolute function
  4345 ;;		_EUSART_DefaultErrorHandler
  4346 ;;		_EUSART_DefaultFramingErrorHandler
  4347 ;;		_EUSART_DefaultOverrunErrorHandler
  4348 ;;		_EUSART_RxDataHandler
  4349 ;; This function is called by:
  4350 ;;		_EUSART_Initialize
  4351 ;;		_INTERRUPT_InterruptManager
  4352 ;; This function uses a non-reentrant model
  4353 ;;
  4354                           
  4355                           
  4356                           ;psect for function _EUSART_Receive_ISR
  4357  0179                     _EUSART_Receive_ISR:
  4358  0179                     i1l1558:	
  4359                           ;incstack = 0
  4360                           ; Regs used in _EUSART_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4361                           
  4362                           
  4363                           ;eusart.c: 228: eusartRxStatusBuffer[eusartRxHead].status = 0;
  4364  0179  087B               	movf	_eusartRxHead,w	;volatile
  4365  017A  3E20               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  4366  017B  0086               	movwf	6
  4367  017C  0187               	clrf	7
  4368  017D  0181               	clrf	1
  4369  017E                     i1l1560:
  4370                           
  4371                           ;eusart.c: 230: if(RC1STAbits.FERR){
  4372  017E  0023               	movlb	3	; select bank3
  4373  017F  1D1D               	btfss	29,2	;volatile
  4374  0180  2982               	goto	u61_21
  4375  0181  2983               	goto	u61_20
  4376  0182                     u61_21:
  4377  0182  298E               	goto	i1l1566
  4378  0183                     u61_20:
  4379  0183                     i1l1562:
  4380                           
  4381                           ;eusart.c: 231: eusartRxStatusBuffer[eusartRxHead].ferr = 1;
  4382  0183  087B               	movf	_eusartRxHead,w	;volatile
  4383  0184  3E20               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  4384  0185  0086               	movwf	6
  4385  0186  0187               	clrf	7
  4386  0187  1481               	bsf	1,1
  4387  0188                     i1l1564:
  4388                           
  4389                           ;eusart.c: 232: EUSART_FramingErrorHandler();
  4390  0188  0020               	movlb	0	; select bank0
  4391  0189  0858               	movf	_EUSART_FramingErrorHandler+1,w
  4392  018A  008A               	movwf	10
  4393  018B  0857               	movf	_EUSART_FramingErrorHandler,w
  4394  018C  000A               	callw
  4395  018D  3181               	pagesel	$
  4396  018E                     i1l1566:
  4397                           
  4398                           ;eusart.c: 233: };eusart.c: 235: if(RC1STAbits.OERR){
  4399  018E  0023               	movlb	3	; select bank3
  4400  018F  1C9D               	btfss	29,1	;volatile
  4401  0190  2992               	goto	u62_21
  4402  0191  2993               	goto	u62_20
  4403  0192                     u62_21:
  4404  0192  299E               	goto	i1l1572
  4405  0193                     u62_20:
  4406  0193                     i1l1568:
  4407                           
  4408                           ;eusart.c: 236: eusartRxStatusBuffer[eusartRxHead].oerr = 1;
  4409  0193  087B               	movf	_eusartRxHead,w	;volatile
  4410  0194  3E20               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  4411  0195  0086               	movwf	6
  4412  0196  0187               	clrf	7
  4413  0197  1501               	bsf	1,2
  4414  0198                     i1l1570:
  4415                           
  4416                           ;eusart.c: 237: EUSART_OverrunErrorHandler();
  4417  0198  0020               	movlb	0	; select bank0
  4418  0199  0856               	movf	_EUSART_OverrunErrorHandler+1,w
  4419  019A  008A               	movwf	10
  4420  019B  0855               	movf	_EUSART_OverrunErrorHandler,w
  4421  019C  000A               	callw
  4422  019D  3181               	pagesel	$
  4423  019E                     i1l1572:
  4424                           
  4425                           ;eusart.c: 238: };eusart.c: 240: if(eusartRxStatusBuffer[eusartRxHead].status){
  4426  019E  087B               	movf	_eusartRxHead,w	;volatile
  4427  019F  3E20               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  4428  01A0  0086               	movwf	6
  4429  01A1  0187               	clrf	7
  4430  01A2  0801               	movf	1,w
  4431  01A3  1903               	btfsc	3,2
  4432  01A4  29A6               	goto	u63_21
  4433  01A5  29A7               	goto	u63_20
  4434  01A6                     u63_21:
  4435  01A6  29AE               	goto	i1l1576
  4436  01A7                     u63_20:
  4437  01A7                     i1l1574:
  4438                           
  4439                           ;eusart.c: 241: EUSART_ErrorHandler();
  4440  01A7  0020               	movlb	0	; select bank0
  4441  01A8  0854               	movf	_EUSART_ErrorHandler+1,w
  4442  01A9  008A               	movwf	10
  4443  01AA  0853               	movf	_EUSART_ErrorHandler,w
  4444  01AB  000A               	callw
  4445  01AC  3181               	pagesel	$
  4446                           
  4447                           ;eusart.c: 242: } else {
  4448  01AD  29B1               	goto	i1l281
  4449  01AE                     i1l1576:
  4450                           
  4451                           ;eusart.c: 243: EUSART_RxDataHandler();
  4452  01AE  3182  227E  3181   	fcall	_EUSART_RxDataHandler
  4453  01B1                     i1l281:
  4454  01B1  0008               	return
  4455  01B2                     __end_of_EUSART_Receive_ISR:
  4456                           
  4457                           	psect	text22
  4458  031A                     __ptext22:	
  4459 ;; *************** function _EUSART_DefaultOverrunErrorHandler *****************
  4460 ;; Defined at:
  4461 ;;		line 261 in file "mcc_generated_files/eusart.c"
  4462 ;; Parameters:    Size  Location     Type
  4463 ;;		None
  4464 ;; Auto vars:     Size  Location     Type
  4465 ;;		None
  4466 ;; Return value:  Size  Location     Type
  4467 ;;                  1    wreg      void 
  4468 ;; Registers used:
  4469 ;;		None
  4470 ;; Tracked objects:
  4471 ;;		On entry : 0/0
  4472 ;;		On exit  : 0/0
  4473 ;;		Unchanged: 0/0
  4474 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4475 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4476 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4477 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4478 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4479 ;;Total ram usage:        0 bytes
  4480 ;; Hardware stack levels used:    1
  4481 ;; This function calls:
  4482 ;;		Nothing
  4483 ;; This function is called by:
  4484 ;;		_EUSART_Initialize
  4485 ;;		_EUSART_Receive_ISR
  4486 ;; This function uses a non-reentrant model
  4487 ;;
  4488                           
  4489                           
  4490                           ;psect for function _EUSART_DefaultOverrunErrorHandler
  4491  031A                     _EUSART_DefaultOverrunErrorHandler:
  4492  031A                     i1l1470:	
  4493                           ;incstack = 0
  4494                           ; Regs used in _EUSART_DefaultOverrunErrorHandler: []
  4495                           
  4496                           
  4497                           ;eusart.c: 264: RC1STAbits.CREN = 0;
  4498  031A  0023               	movlb	3	; select bank3
  4499  031B  121D               	bcf	29,4	;volatile
  4500                           
  4501                           ;eusart.c: 265: RC1STAbits.CREN = 1;
  4502  031C  161D               	bsf	29,4	;volatile
  4503  031D                     i1l291:
  4504  031D  0008               	return
  4505  031E                     __end_of_EUSART_DefaultOverrunErrorHandler:
  4506                           
  4507                           	psect	text23
  4508  0322                     __ptext23:	
  4509 ;; *************** function _EUSART_DefaultFramingErrorHandler *****************
  4510 ;; Defined at:
  4511 ;;		line 259 in file "mcc_generated_files/eusart.c"
  4512 ;; Parameters:    Size  Location     Type
  4513 ;;		None
  4514 ;; Auto vars:     Size  Location     Type
  4515 ;;		None
  4516 ;; Return value:  Size  Location     Type
  4517 ;;                  1    wreg      void 
  4518 ;; Registers used:
  4519 ;;		None
  4520 ;; Tracked objects:
  4521 ;;		On entry : 0/0
  4522 ;;		On exit  : 0/0
  4523 ;;		Unchanged: 0/0
  4524 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4525 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4526 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4527 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4528 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4529 ;;Total ram usage:        0 bytes
  4530 ;; Hardware stack levels used:    1
  4531 ;; This function calls:
  4532 ;;		Nothing
  4533 ;; This function is called by:
  4534 ;;		_EUSART_Initialize
  4535 ;;		_EUSART_Receive_ISR
  4536 ;; This function uses a non-reentrant model
  4537 ;;
  4538                           
  4539                           
  4540                           ;psect for function _EUSART_DefaultFramingErrorHandler
  4541  0322                     _EUSART_DefaultFramingErrorHandler:
  4542  0322                     i1l288:	
  4543                           ;incstack = 0
  4544                           ; Regs used in _EUSART_DefaultFramingErrorHandler: []
  4545                           
  4546  0322  0008               	return
  4547  0323                     __end_of_EUSART_DefaultFramingErrorHandler:
  4548                           
  4549                           	psect	text24
  4550  031E                     __ptext24:	
  4551 ;; *************** function _EUSART_DefaultErrorHandler *****************
  4552 ;; Defined at:
  4553 ;;		line 269 in file "mcc_generated_files/eusart.c"
  4554 ;; Parameters:    Size  Location     Type
  4555 ;;		None
  4556 ;; Auto vars:     Size  Location     Type
  4557 ;;		None
  4558 ;; Return value:  Size  Location     Type
  4559 ;;                  1    wreg      void 
  4560 ;; Registers used:
  4561 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4562 ;; Tracked objects:
  4563 ;;		On entry : 0/0
  4564 ;;		On exit  : 0/0
  4565 ;;		Unchanged: 0/0
  4566 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4567 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4568 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4569 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4570 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4571 ;;Total ram usage:        0 bytes
  4572 ;; Hardware stack levels used:    1
  4573 ;; Hardware stack levels required when called:    1
  4574 ;; This function calls:
  4575 ;;		_EUSART_RxDataHandler
  4576 ;; This function is called by:
  4577 ;;		_EUSART_Initialize
  4578 ;;		_EUSART_Receive_ISR
  4579 ;; This function uses a non-reentrant model
  4580 ;;
  4581                           
  4582                           
  4583                           ;psect for function _EUSART_DefaultErrorHandler
  4584  031E                     _EUSART_DefaultErrorHandler:
  4585  031E                     i1l1472:	
  4586                           ;incstack = 0
  4587                           ; Regs used in _EUSART_DefaultErrorHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
  4588                           
  4589                           
  4590                           ;eusart.c: 270: EUSART_RxDataHandler();
  4591  031E  3182  227E  3183   	fcall	_EUSART_RxDataHandler
  4592  0321                     i1l294:
  4593  0321  0008               	return
  4594  0322                     __end_of_EUSART_DefaultErrorHandler:
  4595                           
  4596                           	psect	text25
  4597  027E                     __ptext25:	
  4598 ;; *************** function _EUSART_RxDataHandler *****************
  4599 ;; Defined at:
  4600 ;;		line 249 in file "mcc_generated_files/eusart.c"
  4601 ;; Parameters:    Size  Location     Type
  4602 ;;		None
  4603 ;; Auto vars:     Size  Location     Type
  4604 ;;		None
  4605 ;; Return value:  Size  Location     Type
  4606 ;;                  1    wreg      void 
  4607 ;; Registers used:
  4608 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4609 ;; Tracked objects:
  4610 ;;		On entry : 0/0
  4611 ;;		On exit  : 0/0
  4612 ;;		Unchanged: 0/0
  4613 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4614 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4615 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4616 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4617 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4618 ;;Total ram usage:        1 bytes
  4619 ;; Hardware stack levels used:    1
  4620 ;; This function calls:
  4621 ;;		Nothing
  4622 ;; This function is called by:
  4623 ;;		_EUSART_Receive_ISR
  4624 ;;		_EUSART_DefaultErrorHandler
  4625 ;; This function uses a non-reentrant model
  4626 ;;
  4627                           
  4628                           
  4629                           ;psect for function _EUSART_RxDataHandler
  4630  027E                     _EUSART_RxDataHandler:
  4631  027E                     i1l1362:	
  4632                           ;incstack = 0
  4633                           ; Regs used in _EUSART_RxDataHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
  4634                           
  4635                           
  4636                           ;eusart.c: 251: eusartRxBuffer[eusartRxHead++] = RC1REG;
  4637  027E  0023               	movlb	3	; select bank3
  4638  027F  0819               	movf	25,w	;volatile
  4639  0280  00F0               	movwf	??_EUSART_RxDataHandler
  4640  0281  087B               	movf	_eusartRxHead,w
  4641  0282  3E28               	addlw	(low (_eusartRxBuffer| 0))& (0+255)
  4642  0283  0086               	movwf	6
  4643  0284  0187               	clrf	7
  4644  0285  0870               	movf	??_EUSART_RxDataHandler,w
  4645  0286  0081               	movwf	1
  4646  0287                     i1l1364:
  4647  0287  3001               	movlw	1
  4648  0288  00F0               	movwf	??_EUSART_RxDataHandler
  4649  0289  0870               	movf	??_EUSART_RxDataHandler,w
  4650  028A  07FB               	addwf	_eusartRxHead,f	;volatile
  4651  028B                     i1l1366:
  4652                           
  4653                           ;eusart.c: 252: if(sizeof(eusartRxBuffer) <= eusartRxHead)
  4654  028B  3008               	movlw	8
  4655  028C  027B               	subwf	_eusartRxHead,w	;volatile
  4656  028D  1C03               	skipc
  4657  028E  2A90               	goto	u43_21
  4658  028F  2A91               	goto	u43_20
  4659  0290                     u43_21:
  4660  0290  2A92               	goto	i1l1370
  4661  0291                     u43_20:
  4662  0291                     i1l1368:
  4663                           
  4664                           ;eusart.c: 253: {;eusart.c: 254: eusartRxHead = 0;
  4665  0291  01FB               	clrf	_eusartRxHead	;volatile
  4666  0292                     i1l1370:
  4667                           
  4668                           ;eusart.c: 255: };eusart.c: 256: eusartRxCount++;
  4669  0292  3001               	movlw	1
  4670  0293  00F0               	movwf	??_EUSART_RxDataHandler
  4671  0294  0870               	movf	??_EUSART_RxDataHandler,w
  4672  0295  0020               	movlb	0	; select bank0
  4673  0296  07BB               	addwf	_eusartRxCount,f	;volatile
  4674  0297                     i1l285:
  4675  0297  0008               	return
  4676  0298                     __end_of_EUSART_RxDataHandler:
  4677  007E                     btemp	set	126	;btemp
  4678  007E                     int$flags	set	126
  4679  007E                     wtemp0	set	126
  4680                           
  4681                           	psect	config
  4682                           
  4683                           ;Config register CONFIG1 @ 0x8007
  4684                           ;	Oscillator Selection Bits
  4685                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  4686                           ;	Watchdog Timer Enable
  4687                           ;	WDTE = OFF, WDT disabled
  4688                           ;	Power-up Timer Enable
  4689                           ;	PWRTE = OFF, PWRT disabled
  4690                           ;	MCLR Pin Function Select
  4691                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  4692                           ;	Flash Program Memory Code Protection
  4693                           ;	CP = OFF, Program memory code protection is disabled
  4694                           ;	Brown-out Reset Enable
  4695                           ;	BOREN = OFF, Brown-out Reset disabled
  4696                           ;	Clock Out Enable
  4697                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  4698                           ;	Internal/External Switchover Mode
  4699                           ;	IESO = ON, Internal/External Switchover Mode is enabled
  4700                           ;	Fail-Safe Clock Monitor Enable
  4701                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  4702  8007                     	org	32775
  4703  8007  39E4               	dw	14820
  4704                           
  4705                           ;Config register CONFIG2 @ 0x8008
  4706                           ;	Flash Memory Self-Write Protection
  4707                           ;	WRT = OFF, Write protection off
  4708                           ;	Peripheral Pin Select one-way control
  4709                           ;	PPS1WAY = ON, The PPSLOCK bit cannot be cleared once it is set by software
  4710                           ;	Zero-cross detect disable
  4711                           ;	ZCDDIS = ON, Zero-cross detect circuit is disabled at POR
  4712                           ;	Phase Lock Loop enable
  4713                           ;	PLLEN = OFF, 4x PLL is enabled when software sets the SPLLEN bit
  4714                           ;	Stack Overflow/Underflow Reset Enable
  4715                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  4716                           ;	Brown-out Reset Voltage Selection
  4717                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  4718                           ;	Low-Power Brown Out Reset
  4719                           ;	LPBOR = OFF, Low-Power BOR is disabled
  4720                           ;	Low-Voltage Programming Enable
  4721                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  4722  8008                     	org	32776
  4723  8008  1EFF               	dw	7935

Data Sizes:
    Strings     18
    Constant    10
    Data        0
    BSS         32
    Persistent  43
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      12
    BANK0            80     20      62
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    printf@f	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_2(CODE[4]), STR_1(CODE[14]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    EUSART_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Receive_ISR(), 

    EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_Receive_ISR(), 

    EUSART_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Transmit_ISR(), 

    EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_Transmit_ISR(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultErrorHandler(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultOverrunErrorHandler(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMMON

    _printf->___lwmod
    _putch->_EUSART_Write
    ___lwmod->___lwdiv
    _SYSTEM_Initialize->_EUSART_Initialize
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler
    _EUSART_Initialize->_EUSART_SetRxInterruptHandler
    _EUSART_Initialize->_EUSART_SetTxInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_EUSART_Transmit_ISR
    _EUSART_Receive_ISR->_EUSART_RxDataHandler
    _EUSART_DefaultErrorHandler->_EUSART_RxDataHandler

Critical Paths under _main in BANK0

    _main->_printf
    _printf->___lwmod

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    2062
                                             18 BANK0      2     2      0
                  _SYSTEM_Initialize
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              22    18      4    1535
                                              4 BANK0     14    10      4
                            ___lwdiv
                            ___lwmod
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      66
                                              3 COMMON     1     1      0
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (3) _EUSART_Write                                         2     2      0      44
                                              1 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     412
                                              9 COMMON     2     2      0
                                              0 BANK0      4     0      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     314
                                              1 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     490
                     _ADC_Initialize
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _PWM1_Initialize
                    _TMR2_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    1     1      0     490
                                              3 COMMON     1     1      0
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetTxInterruptHandler                         2     0      2      98
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetRxInterruptHandler                         2     0      2      98
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2      98
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2      98
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2      98
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           0     0      0       0
                   Absolute function *
                 _EUSART_Receive_ISR *
                _EUSART_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (5) _EUSART_Transmit_ISR                                  1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _EUSART_Receive_ISR                                   0     0      0       0
                   Absolute function *
         _EUSART_DefaultErrorHandler *
  _EUSART_DefaultFramingErrorHandler *
  _EUSART_DefaultOverrunErrorHandler *
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (6) _EUSART_DefaultOverrunErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _EUSART_DefaultFramingErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _EUSART_DefaultErrorHandler                           0     0      0       0
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (6) _EUSART_RxDataHandler                                 1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADC_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PWM1_Initialize
     _TMR2_Initialize
     _WDT_Initialize
   _printf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     _putch
       _EUSART_Write

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _EUSART_Receive_ISR *
     Absolute function(Fake) *
     _EUSART_DefaultErrorHandler *
       _EUSART_RxDataHandler
     _EUSART_DefaultFramingErrorHandler *
     _EUSART_DefaultOverrunErrorHandler *
     _EUSART_RxDataHandler *
   _EUSART_Transmit_ISR *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      B       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     14      3E       5       77.5%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      4A      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      4A      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Thu Feb 04 02:08:22 2021

                ?_EUSART_SetRxInterruptHandler 0071                                             l51 02CE  
                                           l37 025B                                             l67 02DF  
                                          l113 02AD                                            l300 0305  
                                          l116 02E7                                            l303 0311  
                                          l119 0319                                            l138 02D7  
                                          l306 02F9                                            l234 013C  
                                          l309 02FF                                            l262 0210  
                                          l258 01EE                                            l442 00FD  
                                          l259 01F7                                            l268 02F3  
                                          l297 030B                                            l718 0178  
                                          l728 01E6                                            u400 01EE  
                                          u401 01ED                                            u410 01F3  
                                          u411 01F2                                            u500 0174  
                                          u420 020B                                            u501 0173  
                                          u421 020A                                            _PR2 001B  
                                          u440 0145                                            u441 0144  
                                          u460 0155                                            u461 0154  
                                          u455 0149                                            u480 0164  
                                          u481 0163                                            u810 01E2  
                                          u475 0156                                            u811 01E1  
                                          u820 0047                                            u485 0160  
                                          u805 01D8                                            u821 0046  
                                          u830 0073                                            u495 016A  
                                          u831 0072                                            u760 01B9  
                                          u840 0097                                            u761 01B8  
                                          u841 0096                                            u850 00A2  
                                          u851 00A1                                            u780 01C9  
                                          u860 00A8                                            u781 01C8  
                                          u861 00A7                                            u845 0093  
                                          u790 01D3                                            u870 00E8  
                                          u791 01D2                                            u775 01BD  
                                          u871 00E7                                            u880 00FD  
                                          u881 00FC                                            u795 01CF  
                       ??_EUSART_RxDataHandler 0070                 ?_EUSART_SetFramingErrorHandler 0071  
                              _TMR2_Initialize 02D8                                            wreg 0009  
                                         l1400 0258                                           l1402 02C6  
                                         l1410 02DB                                           l1340 0300  
                                         l1420 02E4                                           l1404 02CB  
                                         l1412 02DC                                           l1430 02D3  
                                         l1342 030C                                           l1334 02FA  
                                         l1422 02E5                                           l1406 02CC  
                                         l1414 02DD                                           l1350 01F8  
                                         l1432 02D4                                           l1336 02F4  
                                         l1440 0107                                           l1416 02E0  
                                         l1408 02D8                                           l1424 0316  
                                         l1352 0201                                           l1360 020E  
                                         l1344 01E8                                           l1434 02D5  
                                         l1426 02CF                                           l1338 0306  
                                         l1450 0119                                           l1442 0110  
                                         l1418 02E3                                           l1522 0298  
                                         l1354 0205                                           l1346 01E8  
                                         l1428 02D2                                           l1460 0137  
                                         l1452 011A                                           l1444 0113  
                                         l1436 00FE                                           l1380 0243  
                                         l1372 0237                                           l1356 020B  
                                         l1348 01F3                                           l1700 0077  
                                         l1462 0138                                           l1454 0121  
                                         l1446 0115                                           l1438 0100  
                                         l1390 024B                                           l1382 0245  
                                         l1374 023A                                           l1358 020C  
                                         l1702 007C                                           l1464 0139  
                                         l1456 0128                                           l1448 0117  
                                         l1392 024E                                           l1384 0246  
                                         l1376 023D                                           l1480 0148  
                                         l1720 00B2                                           l1712 0098  
                                         l1466 013A                                           l1458 0133  
                                         l1394 0250                                           l1386 0248  
                                         l1378 0241                                           l1490 0168  
                                         l1482 014D                                           l1474 013D  
                                         l1722 00DA                                           l1714 00A2  
                                         l1730 0214                                           l1396 0253  
                                         l1388 024A                                           l1492 0169  
                                         l1484 0151                                           l1476 013F  
                                         l1660 01B9                                           l1468 02EF  
                                         l1724 00DE                                           l1716 00A8  
                                         l1708 007E                                           l1740 0224  
                                         l1732 0217                                           l1398 0255  
                                         l1494 016E                                           l1486 0155  
                                         l1478 0145                                           l1670 01D3  
                                         l1662 01BC                                           l1718 00AC  
                                         l1726 00E8                                           l1742 022F  
                                         l1734 0218                                           l1488 0164  
                                         l1496 0174                                           l1672 01D7  
                                         l1664 01C1                                           l1680 003B  
                                         l1736 0219                                           l1728 0211  
                                         l1674 01DC                                           l1666 01C5  
                                         l1658 01B2                                           l1690 004D  
                                         l1682 0041                                           l1738 0221  
                                         l1668 01C9                                           l1676 01E2  
                                         l1692 0064                                           l1684 0047  
                                         l1694 006B                                           l1686 004C  
                                         l1696 006F                                           l1698 0073  
                                         STR_1 02AE                                           STR_2 0312  
                      __end_of_PWM1_Initialize 02CF                                           _LATA 010C  
                                         _LATC 010E                                           _TMR2 001A  
                                         _WPUA 020C                                           _WPUC 020E  
                                         _main 0211                                           fsr0h 0005  
                                         fsr1h 0007                                           indf0 0000  
                                         fsr0l 0004                                           indf1 0001  
                                         fsr1l 0006                                           btemp 007E  
                                         start 002C                                  ?_EUSART_Write 0070  
               __size_of_OSCILLATOR_Initialize 0008                  __end_of_OSCILLATOR_Initialize 02E8  
                                        ?_main 0070                                          _T2CON 001C  
                              __end_of___lwdiv 0179                                          i1l330 002A  
                                        i1l325 001A                                          i1l326 002A  
                                        i1l271 027B                                          i1l281 01B1  
                              __end_of___lwmod 01E7                                          i1l274 027D  
                                        i1l291 031D                                          i1l285 0297  
                                        i1l294 0321                                          i1l288 0322  
                                        u43_20 0291                                          u43_21 0290  
                                        u60_20 0275                                          u60_21 0274  
                                        u61_20 0183                                          u61_21 0182  
                                        u62_20 0193                                          u62_21 0192  
                                        u63_20 01A7                                          u71_20 000A  
                                        u63_21 01A6                                          u71_21 0009  
                                        u72_20 000F                                          u72_21 000E  
                                        u73_20 0014                                          u73_21 0013  
                                        _TRISA 008C                                          _TRISC 008E  
                                        u74_20 001F                                          u74_21 001E  
                                        u59_20 0263                                          u75_20 0024  
                                        u59_21 0262                                          u75_21 0023  
                                        _RXPPS 0E24                                __end_of_dpowers 02C6  
                               _WDT_Initialize 0316                                          _putch 02EE  
                                        pclath 000A                                          status 0003  
                                        wtemp0 007E                                __initialization 002E  
                                 __end_of_main 0237                                 ??_EUSART_Write 0071  
                      __end_of_TMR2_Initialize 02E0                    ?_INTERRUPT_InterruptManager 0070  
               ??_EUSART_SetRxInterruptHandler 0073                                         ??_main 007B  
                       __end_of_WDT_Initialize 031A      __end_of_EUSART_DefaultFramingErrorHandler 0323  
   __size_of_EUSART_DefaultFramingErrorHandler 0001            ??_EUSART_DefaultFramingErrorHandler 0070  
           ?_EUSART_DefaultFramingErrorHandler 0070              _EUSART_DefaultFramingErrorHandler 0322  
                                       _ADCON0 009D                                         _ADCON1 009E  
                                       _ADCON2 009F                     _EUSART_OverrunErrorHandler 0055  
                                       _ADRESH 009C                                         _ADRESL 009B  
                                       _CCPR1H 0292                                         _CCPR1L 0291  
                                       _ANSELA 018C                                         ?_putch 0070  
                                       _ANSELC 018E                                         _BORCON 0116  
                                       _RC1REG 0199                                         _RC1STA 019D  
                                       _RC4PPS 0EA4                               ?_PWM1_Initialize 0070  
                                       _ODCONA 028C                                         i1l1370 0292  
                                       i1l1362 027E                                         _ODCONC 028E  
                                       i1l1364 0287                                         i1l1366 028B  
                                       i1l1470 031A                                         i1l1550 026A  
                                       i1l1630 0006                                         i1l1368 0291  
                                       i1l1472 031E                                         i1l1560 017E  
                                       i1l1552 026F                                         i1l1640 0024  
                                       i1l1632 000A                                         i1l1570 0198  
                                       i1l1562 0183                                         i1l1554 0275  
                                       i1l1546 025C                                         i1l1634 000F  
                                       i1l1572 019E                                         i1l1564 0188  
                                       i1l1556 0276                                         i1l1548 0263  
                                       i1l1636 0014                                         i1l1574 01A7  
                                       i1l1566 018E                                         i1l1558 0179  
                                       i1l1638 001F                                         i1l1576 01AE  
                                       i1l1568 0193                                         _INLVLA 038C  
                                       _INLVLC 038E                                         _OSCCON 0099  
                                       _TX1REG 019A                                         _WDTCON 0097  
                                       _TX1STA 019E                                      ??___lwdiv 0075  
                                    ??___lwmod 0079                            _EUSART_Transmit_ISR 025C  
                                       _printf 003B                                ?_WDT_Initialize 0070  
                         ?_EUSART_Transmit_ISR 0070                              _SYSTEM_Initialize 0298  
                      __end_of__initialization 0037                             ?_SYSTEM_Initialize 0070  
         __end_of_EUSART_SetTxInterruptHandler 02FA          __size_of_EUSART_SetTxInterruptHandler 0006  
                 _EUSART_SetTxInterruptHandler 02F4                                 __pcstackCOMMON 0070  
                          ??_SYSTEM_Initialize 0074                                  __end_of_putch 02F4  
                             ?_TMR2_Initialize 0070                                 _OPTION_REGbits 0095  
                         _eusartRxStatusBuffer 0020                ??_EUSART_SetOverrunErrorHandler 0073  
                    __end_of_SYSTEM_Initialize 02AE                          ??_EUSART_Transmit_ISR 0070  
                                      ??_putch 0073                                     __pbssBANK0 0020  
                         __end_of_EUSART_Write 0211                    __size_of_EUSART_Receive_ISR 0039  
                                   __pmaintext 0211                  ?_EUSART_SetTxInterruptHandler 0071  
             _EUSART_TxDefaultInterruptHandler 005B                                     __pintentry 0004  
                                      _CCP1CON 0293                   ??_EUSART_DefaultErrorHandler 0071  
                                      ?_printf 0043                        __size_of_ADC_Initialize 0009  
                                _eusartRxCount 003B                                        _SP1BRGH 019C  
                                      _SP1BRGL 019B                  __size_of_EUSART_RxDataHandler 001A  
                                      _OSCSTAT 009A                                        _OSCTUNE 0098  
                                      _SLRCONA 030C                                        _SLRCONC 030E  
                     ??_EUSART_SetErrorHandler 0073                           _ADC_InterruptHandler 0038  
          __size_of_EUSART_DefaultErrorHandler 0004                                        ___lwdiv 013D  
                                      ___lwmod 01B2                                        __ptext1 003B  
                                      __ptext2 02EE                                        __ptext3 01E7  
                                      __ptext4 01B2                                        __ptext5 013D  
                                      __ptext6 0298                                        __ptext7 0316  
                                      __ptext8 02D8                                        __ptext9 02C6  
                              __size_of_printf 00C3                                        _dpowers 02BC  
                        _OSCILLATOR_Initialize 02E0                                      _T2CONbits 001C  
                     ??_PIN_MANAGER_Initialize 0071                     __size_of_SYSTEM_Initialize 0016  
                                      clrloop0 02E9                                        main@num 0051  
                         end_of_initialization 0037          __end_of_EUSART_SetOverrunErrorHandler 0306  
       __size_of_EUSART_SetOverrunErrorHandler 0006                  _EUSART_SetOverrunErrorHandler 0300  
                            _EUSART_Initialize 00FE                             ?_EUSART_Initialize 0070  
                                    _RCSTAbits 019D                                        printf@c 0050  
                                      printf@f 0043                            ??_EUSART_Initialize 0073  
                             ??_WDT_Initialize 0071                 ??_EUSART_SetTxInterruptHandler 0073  
                        __size_of_EUSART_Write 002A                __size_of_EUSART_SetErrorHandler 0006  
                    __end_of_EUSART_Initialize 013D                                      _TXSTAbits 019E  
                     __size_of_PWM1_Initialize 0009             __end_of_EUSART_DefaultErrorHandler 0322  
                   _EUSART_DefaultErrorHandler 031E                                   _EUSART_Write 01E7  
                               _ADC_Initialize 02CF                         ?_OSCILLATOR_Initialize 0070  
                               __end_of_printf 00FE                            start_initialization 002E  
              __size_of_PIN_MANAGER_Initialize 0025   EUSART_SetRxInterruptHandler@interruptHandler 0071  
 EUSART_SetTxInterruptHandler@interruptHandler 0071                                    putch@txData 0073  
               ?_EUSART_SetOverrunErrorHandler 0071                     _EUSART_FramingErrorHandler 0057  
                       _EUSART_SetErrorHandler 030C                                    _CCPTMRSbits 029E  
                       __end_of_ADC_Initialize 02D8                                       ??_printf 0047  
                  __end_of_EUSART_Transmit_ISR 027E                                    __pbssCOMMON 007B  
                                    ___latbits 0002                                  __pcstackBANK0 003F  
                     __size_of_TMR2_Initialize 0008                     __end_of_EUSART_Receive_ISR 01B2  
                   __size_of_EUSART_Initialize 003F               _EUSART_RxDefaultInterruptHandler 0059  
                                    __pnvBANK0 0053                   __end_of_EUSART_RxDataHandler 0298  
                             ___lwdiv@dividend 0073                         _PIN_MANAGER_Initialize 0237  
                                     ?___lwdiv 0071                                       ?___lwmod 003F  
                              ?_ADC_Initialize 0070                                   _eusartRxHead 007B  
                                 _eusartTxHead 003E                                   _eusartRxTail 003C  
                                 _eusartTxTail 003D                              ??_PWM1_Initialize 0071  
                 ??_INTERRUPT_InterruptManager 0071                        _eusartTxBufferRemaining 005D  
                                     _BAUD1CON 019F                               ___lwdiv@quotient 0076  
                               __size_of_putch 0006                                 _eusartRxBuffer 0028  
                               _eusartTxBuffer 0030         EUSART_SetErrorHandler@interruptHandler 0071  
                                    clear_ram0 02E8                                       _PIE1bits 0091  
                            _eusartRxLastError 003A            __size_of_INTERRUPT_InterruptManager 0028  
                                     _PIR1bits 0011                ??_EUSART_SetFramingErrorHandler 0073  
    __end_of_EUSART_DefaultOverrunErrorHandler 031E     __size_of_EUSART_DefaultOverrunErrorHandler 0004  
          ??_EUSART_DefaultOverrunErrorHandler 0070             ?_EUSART_DefaultOverrunErrorHandler 0070  
            _EUSART_DefaultOverrunErrorHandler 031A                                     _ADCON0bits 009D  
                                   printf@flag 004C                                     printf@prec 004D  
                            ??_TMR2_Initialize 0071                        ??_OSCILLATOR_Initialize 0071  
                          _EUSART_ErrorHandler 0053                    ?_EUSART_DefaultErrorHandler 0070  
                             __size_of___lwdiv 003C                               __size_of___lwmod 0035  
                              ___lwdiv@divisor 0071                           _EUSART_RxDataHandler 027E  
                              ___lwdiv@counter 0078                                       __ptext10 0237  
                                     __ptext11 02E0                                       __ptext20 025C  
                                     __ptext12 00FE                                       __ptext21 0179  
                                     __ptext13 02F4                                       __ptext22 031A  
                                     __ptext14 02FA                                       __ptext23 0322  
                                     __ptext15 0300                                       __ptext24 031E  
                                     __ptext16 0306                                       __ptext25 027E  
                                     __ptext17 030C                                       __ptext18 02CF  
                                __size_of_main 0026                        ?_EUSART_SetErrorHandler 0071  
                                   _RC1STAbits 019D  EUSART_SetOverrunErrorHandler@interruptHandler 0071  
                                     int$flags 007E             __end_of_INTERRUPT_InterruptManager 002C  
                   _INTERRUPT_InterruptManager 0004          __end_of_EUSART_SetFramingErrorHandler 030C  
       __size_of_EUSART_SetFramingErrorHandler 0006                  _EUSART_SetFramingErrorHandler 0306  
                                    printf@val 004E                                     _INTCONbits 000B  
                        ?_EUSART_RxDataHandler 0070                        __size_of_WDT_Initialize 0004  
                                     intlevel1 0000                               ___lwmod@dividend 0041  
                      ?_PIN_MANAGER_Initialize 0070                 __end_of_EUSART_SetErrorHandler 0312  
                              _PWM1_Initialize 02C6                               ??_ADC_Initialize 0071  
         __end_of_EUSART_SetRxInterruptHandler 0300          __size_of_EUSART_SetRxInterruptHandler 0006  
                 _EUSART_SetRxInterruptHandler 02FA                                       printf@ap 004B  
                           _EUSART_Receive_ISR 0179  EUSART_SetFramingErrorHandler@interruptHandler 0071  
                                __pstringtext1 02BC                                  __pstringtext2 02AE  
                                __pstringtext3 0312                                  __pstringtext4 0000  
                          ?_EUSART_Receive_ISR 0070                                ___lwmod@divisor 003F  
                              ___lwmod@counter 007A                                     _TX1STAbits 019E  
                           EUSART_Write@txData 0072                   __size_of_EUSART_Transmit_ISR 0022  
               __end_of_PIN_MANAGER_Initialize 025C                           ??_EUSART_Receive_ISR 0071  
